{"version":3,"file":"static/js/main.eecc992d.js","mappings":"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","sources":["node_modules/moment/locale|sync|/^/.*$","src/api/utils/apiResponse.ts","src/api/auth/token.ts","src/api/server/channelApi.ts","src/api/server/serverApi.ts","src/web/adminDashboard/components/ChatChannelList.tsx","src/web/adminDashboard/components/Sidebar.tsx","src/web/adminDashboard/components/Header.tsx","src/utils/color.ts","src/api/notifications/notificationApi.ts","src/web/adminDashboard/components/SendAnnouncementCard.tsx","src/web/adminDashboard/screens/AdminDashboard.tsx","src/context/AuthContext.tsx","src/auth/welcome/WelcomeScreen.tsx","src/api/auth/authApi.ts","src/auth/Signup/SignUpContext.tsx","src/auth/Signup/SignupSecond.tsx","src/auth/Login/LoginScreen.tsx","src/auth/welcome/InviteCodeScreen.tsx","src/auth/welcome/SearchedServerScreen.tsx","src/auth/Signup/SignupFirst.tsx","src/auth/Signup/SignupPhone.tsx","src/auth/Signup/SignupPassword.tsx","src/api/server/server.ts","src/web/adminDashboard/screens/EmployeeManagementScreen.tsx","src/web/adminDashboard/screens/ClockInOutScreen.tsx","src/web/adminDashboard/screens/SettingsScreen.tsx","src/web/adminDashboard/screens/GrossPaymentScreen.tsx","src/web/adminDashboard/screens/LeaveRequestScreen.tsx","src/web/adminDashboard/components/schedule/MonthView.tsx","src/web/adminDashboard/components/schedule/WeekView.tsx","src/web/adminDashboard/components/schedule/DayView.tsx","src/web/adminDashboard/components/schedule/GridCalendarView.tsx","src/web/adminDashboard/components/schedule/WebScheduleModal.tsx","src/api/auth/shiftApi.ts","src/web/adminDashboard/screens/SchedulesScreen.tsx","src/mobile/employeeDashboard/screens/EditUserDetailScreens.tsx","src/mobile/employeeDashboard/screens/EditDetailsScreen.tsx","src/mobile/employeeDashboard/screens/ParitalRegestrationScreen.tsx","src/mobile/employeeDashboard/screens/PartialRegisterPasswordScreen.tsx","src/config/Socket.ts","src/web/adminDashboard/screens/ChatScreen.tsx","src/mockData/mockShifts.ts","src/mobile/employeeDashboard/components/notifications.tsx","src/mobile/employeeDashboard/screens/EmployeeDashboard.tsx","src/mobile/employeeDashboard/components/ShiftCard.tsx","src/mobile/employeeDashboard/screens/SchedulesScreen.tsx","src/mockData/mockIncome.ts","src/mobile/employeeDashboard/screens/IncomeScreen.tsx","src/mobile/employeeDashboard/screens/LeaveScreen.tsx","src/api/auth/profileApi.ts","src/mobile/employeeDashboard/screens/ProfileScreen.tsx","src/mobile/employeeDashboard/screens/ChannelsDrawerView.tsx","src/mobile/employeeDashboard/screens/NotificationScreen.tsx","src/mobile/employeeDashboard/screens/DrawerNavigator.tsx","src/api/chat/chatApi.ts","src/mobile/employeeDashboard/components/ChatWindow.tsx","src/mobile/employeeDashboard/screens/ChatScreen.tsx","src/mobile/employeeDashboard/screens/ClockInOutScreenPhone.tsx","App.tsx","index.ts","webpack/bootstrap","webpack/runtime/amd options","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["var map = {\n\t\"./af\": 17582,\n\t\"./af.js\": 17582,\n\t\"./ar\": 93042,\n\t\"./ar-dz\": 54265,\n\t\"./ar-dz.js\": 54265,\n\t\"./ar-kw\": 92553,\n\t\"./ar-kw.js\": 92553,\n\t\"./ar-ly\": 85352,\n\t\"./ar-ly.js\": 85352,\n\t\"./ar-ma\": 67097,\n\t\"./ar-ma.js\": 67097,\n\t\"./ar-ps\": 76150,\n\t\"./ar-ps.js\": 76150,\n\t\"./ar-sa\": 84427,\n\t\"./ar-sa.js\": 84427,\n\t\"./ar-tn\": 7221,\n\t\"./ar-tn.js\": 7221,\n\t\"./ar.js\": 93042,\n\t\"./az\": 60458,\n\t\"./az.js\": 60458,\n\t\"./be\": 17596,\n\t\"./be.js\": 17596,\n\t\"./bg\": 93830,\n\t\"./bg.js\": 93830,\n\t\"./bm\": 27044,\n\t\"./bm.js\": 27044,\n\t\"./bn\": 58573,\n\t\"./bn-bd\": 13296,\n\t\"./bn-bd.js\": 13296,\n\t\"./bn.js\": 58573,\n\t\"./bo\": 25614,\n\t\"./bo.js\": 25614,\n\t\"./br\": 62041,\n\t\"./br.js\": 62041,\n\t\"./bs\": 91786,\n\t\"./bs.js\": 91786,\n\t\"./ca\": 75833,\n\t\"./ca.js\": 75833,\n\t\"./cs\": 52711,\n\t\"./cs.js\": 52711,\n\t\"./cv\": 71036,\n\t\"./cv.js\": 71036,\n\t\"./cy\": 84977,\n\t\"./cy.js\": 84977,\n\t\"./da\": 8770,\n\t\"./da.js\": 8770,\n\t\"./de\": 67342,\n\t\"./de-at\": 81566,\n\t\"./de-at.js\": 81566,\n\t\"./de-ch\": 87544,\n\t\"./de-ch.js\": 87544,\n\t\"./de.js\": 67342,\n\t\"./dv\": 82875,\n\t\"./dv.js\": 82875,\n\t\"./el\": 78536,\n\t\"./el.js\": 78536,\n\t\"./en-au\": 38617,\n\t\"./en-au.js\": 38617,\n\t\"./en-ca\": 79227,\n\t\"./en-ca.js\": 79227,\n\t\"./en-gb\": 59754,\n\t\"./en-gb.js\": 59754,\n\t\"./en-ie\": 37217,\n\t\"./en-ie.js\": 37217,\n\t\"./en-il\": 85418,\n\t\"./en-il.js\": 85418,\n\t\"./en-in\": 80800,\n\t\"./en-in.js\": 80800,\n\t\"./en-nz\": 67299,\n\t\"./en-nz.js\": 67299,\n\t\"./en-sg\": 76305,\n\t\"./en-sg.js\": 76305,\n\t\"./eo\": 8673,\n\t\"./eo.js\": 8673,\n\t\"./es\": 71301,\n\t\"./es-do\": 3187,\n\t\"./es-do.js\": 3187,\n\t\"./es-mx\": 48223,\n\t\"./es-mx.js\": 48223,\n\t\"./es-us\": 37634,\n\t\"./es-us.js\": 37634,\n\t\"./es.js\": 71301,\n\t\"./et\": 4976,\n\t\"./et.js\": 4976,\n\t\"./eu\": 11847,\n\t\"./eu.js\": 11847,\n\t\"./fa\": 74372,\n\t\"./fa.js\": 74372,\n\t\"./fi\": 41628,\n\t\"./fi.js\": 41628,\n\t\"./fil\": 56802,\n\t\"./fil.js\": 56802,\n\t\"./fo\": 42874,\n\t\"./fo.js\": 42874,\n\t\"./fr\": 9853,\n\t\"./fr-ca\": 87170,\n\t\"./fr-ca.js\": 87170,\n\t\"./fr-ch\": 22825,\n\t\"./fr-ch.js\": 22825,\n\t\"./fr.js\": 9853,\n\t\"./fy\": 68876,\n\t\"./fy.js\": 68876,\n\t\"./ga\": 93533,\n\t\"./ga.js\": 93533,\n\t\"./gd\": 82770,\n\t\"./gd.js\": 82770,\n\t\"./gl\": 98602,\n\t\"./gl.js\": 98602,\n\t\"./gom-deva\": 63059,\n\t\"./gom-deva.js\": 63059,\n\t\"./gom-latn\": 48212,\n\t\"./gom-latn.js\": 48212,\n\t\"./gu\": 23409,\n\t\"./gu.js\": 23409,\n\t\"./he\": 17210,\n\t\"./he.js\": 17210,\n\t\"./hi\": 4750,\n\t\"./hi.js\": 4750,\n\t\"./hr\": 51315,\n\t\"./hr.js\": 51315,\n\t\"./hu\": 47626,\n\t\"./hu.js\": 47626,\n\t\"./hy-am\": 91317,\n\t\"./hy-am.js\": 91317,\n\t\"./id\": 26892,\n\t\"./id.js\": 26892,\n\t\"./is\": 97577,\n\t\"./is.js\": 97577,\n\t\"./it\": 57628,\n\t\"./it-ch\": 3046,\n\t\"./it-ch.js\": 3046,\n\t\"./it.js\": 57628,\n\t\"./ja\": 92504,\n\t\"./ja.js\": 92504,\n\t\"./jv\": 25917,\n\t\"./jv.js\": 25917,\n\t\"./ka\": 64513,\n\t\"./ka.js\": 64513,\n\t\"./kk\": 94935,\n\t\"./kk.js\": 94935,\n\t\"./km\": 96661,\n\t\"./km.js\": 96661,\n\t\"./kn\": 89964,\n\t\"./kn.js\": 89964,\n\t\"./ko\": 98067,\n\t\"./ko.js\": 98067,\n\t\"./ku\": 61165,\n\t\"./ku-kmr\": 85158,\n\t\"./ku-kmr.js\": 85158,\n\t\"./ku.js\": 61165,\n\t\"./ky\": 11177,\n\t\"./ky.js\": 11177,\n\t\"./lb\": 2967,\n\t\"./lb.js\": 2967,\n\t\"./lo\": 81972,\n\t\"./lo.js\": 81972,\n\t\"./lt\": 58469,\n\t\"./lt.js\": 58469,\n\t\"./lv\": 33155,\n\t\"./lv.js\": 33155,\n\t\"./me\": 87935,\n\t\"./me.js\": 87935,\n\t\"./mi\": 74483,\n\t\"./mi.js\": 74483,\n\t\"./mk\": 32501,\n\t\"./mk.js\": 32501,\n\t\"./ml\": 73120,\n\t\"./ml.js\": 73120,\n\t\"./mn\": 20266,\n\t\"./mn.js\": 20266,\n\t\"./mr\": 19406,\n\t\"./mr.js\": 19406,\n\t\"./ms\": 80109,\n\t\"./ms-my\": 90864,\n\t\"./ms-my.js\": 90864,\n\t\"./ms.js\": 80109,\n\t\"./mt\": 22904,\n\t\"./mt.js\": 22904,\n\t\"./my\": 44067,\n\t\"./my.js\": 44067,\n\t\"./nb\": 21301,\n\t\"./nb.js\": 21301,\n\t\"./ne\": 81152,\n\t\"./ne.js\": 81152,\n\t\"./nl\": 76735,\n\t\"./nl-be\": 97761,\n\t\"./nl-be.js\": 97761,\n\t\"./nl.js\": 76735,\n\t\"./nn\": 37569,\n\t\"./nn.js\": 37569,\n\t\"./oc-lnc\": 20833,\n\t\"./oc-lnc.js\": 20833,\n\t\"./pa-in\": 3044,\n\t\"./pa-in.js\": 3044,\n\t\"./pl\": 34249,\n\t\"./pl.js\": 34249,\n\t\"./pt\": 87585,\n\t\"./pt-br\": 26826,\n\t\"./pt-br.js\": 26826,\n\t\"./pt.js\": 87585,\n\t\"./ro\": 62526,\n\t\"./ro.js\": 62526,\n\t\"./ru\": 62204,\n\t\"./ru.js\": 62204,\n\t\"./sd\": 43270,\n\t\"./sd.js\": 43270,\n\t\"./se\": 61541,\n\t\"./se.js\": 61541,\n\t\"./si\": 71921,\n\t\"./si.js\": 71921,\n\t\"./sk\": 49935,\n\t\"./sk.js\": 49935,\n\t\"./sl\": 46254,\n\t\"./sl.js\": 46254,\n\t\"./sq\": 59897,\n\t\"./sq.js\": 59897,\n\t\"./sr\": 42496,\n\t\"./sr-cyrl\": 11135,\n\t\"./sr-cyrl.js\": 11135,\n\t\"./sr.js\": 42496,\n\t\"./ss\": 32215,\n\t\"./ss.js\": 32215,\n\t\"./sv\": 84716,\n\t\"./sv.js\": 84716,\n\t\"./sw\": 50803,\n\t\"./sw.js\": 50803,\n\t\"./ta\": 31538,\n\t\"./ta.js\": 31538,\n\t\"./te\": 2302,\n\t\"./te.js\": 2302,\n\t\"./tet\": 25280,\n\t\"./tet.js\": 25280,\n\t\"./tg\": 14100,\n\t\"./tg.js\": 14100,\n\t\"./th\": 95385,\n\t\"./th.js\": 95385,\n\t\"./tk\": 736,\n\t\"./tk.js\": 736,\n\t\"./tl-ph\": 79726,\n\t\"./tl-ph.js\": 79726,\n\t\"./tlh\": 41873,\n\t\"./tlh.js\": 41873,\n\t\"./tr\": 36463,\n\t\"./tr.js\": 36463,\n\t\"./tzl\": 27491,\n\t\"./tzl.js\": 27491,\n\t\"./tzm\": 29500,\n\t\"./tzm-latn\": 80196,\n\t\"./tzm-latn.js\": 80196,\n\t\"./tzm.js\": 29500,\n\t\"./ug-cn\": 91287,\n\t\"./ug-cn.js\": 91287,\n\t\"./uk\": 35341,\n\t\"./uk.js\": 35341,\n\t\"./ur\": 36246,\n\t\"./ur.js\": 36246,\n\t\"./uz\": 55550,\n\t\"./uz-latn\": 77254,\n\t\"./uz-latn.js\": 77254,\n\t\"./uz.js\": 55550,\n\t\"./vi\": 78796,\n\t\"./vi.js\": 78796,\n\t\"./x-pseudo\": 22736,\n\t\"./x-pseudo.js\": 22736,\n\t\"./yo\": 28621,\n\t\"./yo.js\": 28621,\n\t\"./zh-cn\": 67601,\n\t\"./zh-cn.js\": 67601,\n\t\"./zh-hk\": 39053,\n\t\"./zh-hk.js\": 39053,\n\t\"./zh-mo\": 71248,\n\t\"./zh-mo.js\": 71248,\n\t\"./zh-tw\": 74725,\n\t\"./zh-tw.js\": 74725\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 35358;","// Generic API Response Type\r\nexport class ApiResponse<T> {\r\n  statusCode: number;\r\n  data: T;\r\n  message: string;\r\n  success: boolean;\r\n\r\n  constructor(\r\n    statusCode: number,\r\n    data: T,\r\n    message: string = \"Successful Request\",\r\n    success: boolean = true\r\n  ) {\r\n    this.statusCode = statusCode;\r\n    this.data = data;\r\n    this.message = message;\r\n    this.success = success;\r\n  }\r\n}\r\n\r\n// Error Response Type\r\nexport class ApiError<T> extends Error {\r\n  public statusCode: number;\r\n  public error?: T;\r\n  public success: boolean;\r\n  public message: string;\r\n\r\n  constructor(statusCode: number, error: T, message: string) {\r\n    super();\r\n    this.statusCode = statusCode;\r\n    this.message = message;\r\n    this.error = error;\r\n    this.success = false;\r\n  }\r\n}\r\n","import * as SecureStore from \"expo-secure-store\";\r\nimport { Switch } from \"react-native-gesture-handler\";\r\n\r\n// Save token\r\n\r\n// using \"Plat name for Platform so that is doesnt collide with \"Platform\" class from React Native\r\n//  Platform\r\nexport enum Plat {\r\n  WEB = \"web\",\r\n  PHONE = \"phone\",\r\n}\r\n\r\nexport async function saveToken(\r\n  key: string,\r\n  value: string,\r\n  plat: Plat = Plat.PHONE\r\n): Promise<void> {\r\n  try {\r\n    switch (plat) {\r\n      // when the platform is web , we store details in Local storage\r\n      case Plat.WEB:\r\n        localStorage.setItem(key, value);\r\n        break;\r\n\r\n      // when the platform is web , we store details in Expo secured storage\r\n      case Plat.PHONE:\r\n      default:\r\n        await SecureStore.setItemAsync(key, value, {\r\n          keychainAccessible: SecureStore.WHEN_UNLOCKED,\r\n        });\r\n        break;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error saving token:\", error);\r\n    throw new Error(\"Failed to save token\");\r\n  }\r\n}\r\n\r\n// Get token\r\nexport async function getToken(\r\n  key: string,\r\n  plat: Plat = Plat.PHONE\r\n): Promise<string | null> {\r\n  try {\r\n    console.log(plat);\r\n\r\n    switch (plat) {\r\n      // when the platform is web , we get details in Local storage\r\n      case Plat.WEB:\r\n        return localStorage.getItem(key);\r\n\r\n      // when the platform is web , we get details in Expo secured storage\r\n      case Plat.PHONE:\r\n      default:\r\n        return await SecureStore.getItemAsync(key);\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error retrieving token:\", error);\r\n    throw new Error(\"Failed to retrieve token\");\r\n  }\r\n}\r\n\r\n// Delete token\r\nexport async function deleteToken(\r\n  key: string,\r\n  plat: Plat = Plat.PHONE\r\n): Promise<void> {\r\n  try {\r\n    switch (plat) {\r\n      // when the platform is web , we store details in Local storage\r\n      case Plat.WEB:\r\n        localStorage.removeItem(key);\r\n        break;\r\n\r\n      // when the platform is web , we store details in Expo secured storage\r\n      case Plat.PHONE:\r\n      default:\r\n        await SecureStore.deleteItemAsync(key);\r\n        break;\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error deleting token:\", error);\r\n    throw new Error(\"Failed to delete token\");\r\n  }\r\n}\r\n","import axios, { AxiosError } from \"axios\";\r\nimport { ApiError, ApiResponse } from \"../utils/apiResponse\";\r\nimport { getToken, Plat } from \"../auth/token\";\r\nimport {\r\n  ChannelDetailsResponse,\r\n  createChannelResponse,\r\n  getAllChannelForCurrentServerResponse,\r\n} from \"./server\";\r\n\r\nconst API = axios.create({\r\n  // baseURL: \"https://workplace-zdzja.ondigitalocean.app/api/v1/channel/\",\r\n  baseURL: \"https://workhive.space/api/v1/channel/\",\r\n  // baseURL: \"http://localhost:3000/api/v1/channel/\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\ntype CreateChannelRequest = {\r\n  serverId: string;\r\n  channelName: string;\r\n};\r\n\r\n// create a new channel inside current server\r\n// only admins can create a new channels\r\nconst createNewChannel = async (reqData: CreateChannelRequest) => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\", Plat.WEB);\r\n    const response = await API.post<ApiResponse<createChannelResponse>>(\r\n      \"create\",\r\n      reqData,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n// sends a get request for all the channels that are in the server\r\nconst getAllChannelForCurrentServer = async (serverId: string, plat: Plat) => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\", plat);\r\n    const response = await API.get<\r\n      ApiResponse<[getAllChannelForCurrentServerResponse]>\r\n    >(\"getAllChannelForCurrentServer\", {\r\n      params: { serverId },\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n// delete a channel\r\n// User requires a certain role to delete a channel.\r\nconst deleteChannel = async (reqData: {\r\n  channelId: string;\r\n  channelName: string;\r\n}) => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\", Plat.WEB);\r\n    const channelId = reqData.channelId;\r\n    const response = await API.delete<ApiResponse<{}>>(\"delete\", {\r\n      params: {\r\n        channelId,\r\n      },\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n// add access to channel\r\n// employees cannot change access to channel\r\nconst addAccessToChannel = async (reqData: {\r\n  channelId: string;\r\n  highestRoleToAccessServer: string;\r\n}) => {\r\n  try {\r\n    const { channelId, highestRoleToAccessServer } = reqData;\r\n    const accessToken = await getToken(\"accessToken\", Plat.WEB);\r\n\r\n    const response = await API.post<ApiResponse<{}>>(\r\n      \"addAccessToChannel\",\r\n      {\r\n        channelId,\r\n        highestRoleToAccessServer,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n\r\n// change channel name\r\n// Manager and admin can change channel name\r\nconst changeChannelName = async (reqData: {\r\n  channelId: string;\r\n  newChannelName: string;\r\n}) => {\r\n  try {\r\n    const { channelId, newChannelName } = reqData;\r\n    console.log(\"channelID:\", channelId);\r\n    const accessToken = await getToken(\"accessToken\", Plat.WEB);\r\n    const response = await API.put<ApiResponse<{}>>(\r\n      \"changeAChannelName\",\r\n      { channelId, newChannelName },\r\n\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n// get channel details\r\nconst getChannelDetails = async (reqData: {\r\n  channelId: string;\r\n  newChannelName: string;\r\n  plat: Plat;\r\n}) => {\r\n  try {\r\n    const { channelId } = reqData;\r\n    const accessToken = await getToken(\"accessToken\", reqData.plat);\r\n    const response = await API.get<ApiResponse<ChannelDetailsResponse>>(\r\n      \"getChannelDetails\",\r\n      {\r\n        params: { channelId },\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\nexport {\r\n  getAllChannelForCurrentServer,\r\n  createNewChannel,\r\n  deleteChannel,\r\n  changeChannelName,\r\n  getChannelDetails,\r\n  addAccessToChannel,\r\n};\r\n","import axios, { AxiosError } from \"axios\";\r\nimport { loginUser } from \"../auth/authApi\";\r\nimport { getToken, Plat } from \"../auth/token\";\r\nimport { ApiError, ApiResponse } from \"../utils/apiResponse\";\r\nimport {\r\n  EmployeeDetails,\r\n  EmployeeDetailsPayload,\r\n  joinAServerResponse,\r\n  Role,\r\n  SearchServerResponse,\r\n  userJoinedServerResponse,\r\n} from \"./server\";\r\n\r\n// creating an instance of axios api wth base url\r\nconst API = axios.create({\r\n  baseURL:\r\n    //  \"http://localhost:3000/api/v1/server/\",\r\n    \"https://workhive.space/api/v1/server/\",\r\n\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n//todo :: pass phone or web\r\nconst getLoggedInUserServer = async (plat: Plat) => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\", plat);\r\n    const response = await API.get<ApiResponse<userJoinedServerResponse>>(\r\n      \"getLoggedInUserServer\",\r\n      {\r\n        params: { accessToken },\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\nconst joinAServer = async (inviteCode: string) => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\");\r\n    const response = await API.post<ApiResponse<joinAServerResponse>>(\r\n      \"joinServer\",\r\n      {\r\n        accessToken,\r\n        inviteCode,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n//search  server with invite code\r\nconst searchServer = async (inviteCode: string) => {\r\n  try {\r\n    const response = await API.post<ApiResponse<SearchServerResponse>>(\r\n      \"search\",\r\n      {},\r\n      {\r\n        params: { inviteCode },\r\n      }\r\n    );\r\n    return response;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n// register a new Server\r\nconst registerServer = async (serverName: string, ownerId: string) => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\");\r\n    const response = await API.post<ApiResponse<{}>>(\r\n      \"register\",\r\n      {\r\n        accessToken,\r\n        ownerId,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n// change server owner\r\n// todo:: Chaek this later\r\nconst changeServerOwnership = async (newOwnerId: string) => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\");\r\n    const response = await API.put<ApiResponse<{}>>(\r\n      \"changeServerOwnership\",\r\n      {\r\n        newOwnerId,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n// delete a server\r\nconst deleteServer = async (password: string) => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\", Plat.WEB);\r\n    const response = await API.delete<ApiResponse<{}>>(\"deleteServer\", {\r\n      headers: {\r\n        \"user-password\": password,\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n//kick an employee\r\nconst kickEmployee = async (userId: string) => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\", Plat.WEB);\r\n    const response = await API.delete<ApiResponse<{}>>(\"kickEmployee\", {\r\n      params: { userId },\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n//leave server\r\nconst leaveServer = async () => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\");\r\n    const response = await API.delete<ApiResponse<{}>>(\"leaveServer\", {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n//update a user role\r\nconst updateRole = async (userId: string, role: Role) => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\");\r\n\r\n    const response = await API.delete<ApiResponse<{}>>(\"updateRole\", {\r\n      params: { userId, role },\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n//update employee details\r\n\r\nexport interface ParitalEmployeePayload {\r\n  serverId: string;\r\n  email: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  phone: string;\r\n  role: Role;\r\n}\r\n\r\n// admins can partially register an employee\r\nconst partialregisterEmployee = async (reqData: ParitalEmployeePayload) => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\", Plat.WEB);\r\n    const response = await API.post<ApiResponse<{}>>(\r\n      \"partialRegestrationEmployee\",\r\n      reqData,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n        params: { serverId: reqData.serverId },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\nconst updateEmployeeDetails = async (payload: EmployeeDetailsPayload) => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\", Plat.WEB);\r\n    const response = await API.put<ApiResponse<{}>>(\r\n      \"updateEmployeeDetails\",\r\n      payload,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"unexpected error in updateEmployeeDetails:\", error);\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n// get all users with a server\r\nconst fetchAllUsers = async () => {\r\n  const accessToken = await getToken(\"accessToken\", Plat.WEB);\r\n  console.log(\"---------\", accessToken, \"----\");\r\n  try {\r\n    const response = await API.get<ApiResponse<[EmployeeDetails]>>(\r\n      \"fetchAllUsers\",\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"API error:\", error);\r\n\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\nexport {\r\n  updateRole,\r\n  kickEmployee,\r\n  deleteServer,\r\n  changeServerOwnership,\r\n  registerServer,\r\n  searchServer,\r\n  joinAServer,\r\n  getLoggedInUserServer,\r\n  fetchAllUsers,\r\n  leaveServer,\r\n  partialregisterEmployee,\r\n  updateEmployeeDetails,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ScrollView,\r\n  TextInput,\r\n  Modal,\r\n  Switch,\r\n} from \"react-native\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { RootStackParamList } from \"../../../types/navigationTypes\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { useRoute, RouteProp } from \"@react-navigation/native\";\r\nimport {\r\n  addAccessToChannel,\r\n  createNewChannel,\r\n  getAllChannelForCurrentServer,\r\n} from \"../../../api/server/channelApi\";\r\nimport { getToken, Plat, saveToken } from \"../../../api/auth/token\";\r\nimport { getLoggedInUserServer } from \"../../../api/server/serverApi\";\r\nimport { ApiError } from \"../../../api/utils/apiResponse\";\r\nimport Toast from \"react-native-toast-message\";\r\n\r\ninterface Channel {\r\n  id: string;\r\n  name: string;\r\n  newMessages: number;\r\n  isPrivate: boolean;\r\n  highestRoleToAccessChannel?: \"admin\" | \"manager\" | \"employee\";\r\n}\r\n\r\nconst ChatChannelList: React.FC = () => {\r\n  const [channels, setChannels] = useState<Channel[]>([]);\r\n\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [newChannelName, setNewChannelName] = useState(\"\");\r\n  const [isPrivate, setIsPrivate] = useState(false);\r\n  const [highestRoleToAccessChannel, setHighestRoleToAccessChannel] = useState<\r\n    \"employee\" | \"manager\" | \"admin\"\r\n  >(\"employee\");\r\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList>>();\r\n  const route =\r\n    useRoute<RouteProp<RootStackParamList, keyof RootStackParamList>>();\r\n  const [serverId, setServerId] = useState<string | null>(null);\r\n  const currentChannel =\r\n    route.name === \"ChatScreen\" && route.params && \"channelName\" in route.params\r\n      ? route.params.channelName\r\n      : null;\r\n\r\n  const fetchServerId = async () => {\r\n    const token = await getToken(\"accessToken\", Plat.WEB);\r\n    console.log(\"Acess token:\", token);\r\n    try {\r\n      const res = await getLoggedInUserServer(Plat.WEB);\r\n      console.log(\"getLoggedInUserServer response:\", res);\r\n\r\n      if (res instanceof ApiError) {\r\n        Toast.show({\r\n          type: \"error\",\r\n          text1: \"Server ID Error\",\r\n          text2: res.message,\r\n        });\r\n      } else if (\"statusCode\" in res && \"data\" in res && res.data.serverId) {\r\n        console.log(\" Server ID found:\", res.data.serverId);\r\n        setServerId(res.data.serverId);\r\n        saveToken(\"serverId\", res.data.serverId, Plat.WEB);\r\n        await fetchChannels(res.data.serverId);\r\n      } else {\r\n        console.warn(\"⚠️ Server ID not found in response data\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\" Unexpected error in fetchServerId:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchServerId();\r\n  }, []);\r\n\r\n  //   const handleCreateChannel = () => {\r\n  //     if (newChannelName.trim()) {\r\n  //       const newChannel = {\r\n  //         name: newChannelName,\r\n  //         newMessages: 0,\r\n  //         isPrivate,\r\n  //         highestRoleToAccessChannel,\r\n  //       };\r\n  //       setChannels([...channels, newChannel]);\r\n  //       setNewChannelName('');\r\n  //       setIsPrivate(false);\r\n  //       setModalVisible(false);\r\n  //     }\r\n  //   };\r\n\r\n  const fetchChannels = async (serverId: string) => {\r\n    try {\r\n      const res = await getAllChannelForCurrentServer(serverId, Plat.WEB);\r\n      console.log(\"📥 Channels fetched from server:\", res);\r\n\r\n      if (res instanceof ApiError) {\r\n        Toast.show({\r\n          type: \"error\",\r\n          text1: \"Failed to Load Channels\",\r\n          text2: res.message || \"Something went wrong.\",\r\n        });\r\n      } else if (\"data\" in res && Array.isArray(res.data)) {\r\n        const parsedChannels = res.data.map((channel) => ({\r\n          id: channel.id,\r\n          name: channel.name,\r\n          newMessages: 0,\r\n          isPrivate: false, // Optional: Adjust based on your API\r\n          highestRoleToAccessChannel: channel.highestRoleToAccessChannel as\r\n            | \"admin\"\r\n            | \"manager\"\r\n            | \"employee\",\r\n        }));\r\n\r\n        setChannels(parsedChannels);\r\n      } else {\r\n        Toast.show({\r\n          type: \"error\",\r\n          text1: \"Invalid Response\",\r\n          text2: \"Unexpected format from channel API.\",\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.error(\"❌ Unexpected error while fetching channels:\", err);\r\n      Toast.show({\r\n        type: \"error\",\r\n        text1: \"Fetch Error\",\r\n        text2: \"Could not load channels.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCreateChannel = async () => {\r\n    if (!newChannelName.trim()) {\r\n      Toast.show({\r\n        type: \"error\",\r\n        text1: \"Channel Name Required\",\r\n        text2: \"Please enter a valid channel name.\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Step 1: Get the server ID\r\n      const serverId = await getToken(\"serverId\", Plat.WEB);\r\n      console.log(\"📦 Retrieved serverId:\", serverId);\r\n\r\n      if (!serverId) {\r\n        Toast.show({\r\n          type: \"error\",\r\n          text1: \"Server ID Missing\",\r\n          text2: \"Could not find your server context.\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Step 2: Create channel\r\n      const createRes = await createNewChannel({\r\n        channelName: newChannelName,\r\n        serverId,\r\n      });\r\n\r\n      console.log(\"createRes:\", createRes);\r\n\r\n      if (\r\n        createRes instanceof ApiError ||\r\n        !(\"data\" in createRes) ||\r\n        !createRes.data?.id\r\n      ) {\r\n        console.warn(\"⚠️ Channel creation response invalid:\", createRes);\r\n        Toast.show({\r\n          type: \"error\",\r\n          text1: \"Channel Creation Failed\",\r\n          text2: createRes.message || \"Something went wrong.\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      const createdChannel = createRes.data;\r\n      console.log(\"✅ Channel created:\", createdChannel);\r\n\r\n      // Step 3: Assign access permissions\r\n      const accessRes = await addAccessToChannel({\r\n        channelId: createdChannel.id,\r\n        highestRoleToAccessServer: highestRoleToAccessChannel,\r\n      });\r\n\r\n      console.log(\"🔐 accessRes:\", accessRes);\r\n\r\n      if (\r\n        accessRes instanceof ApiError ||\r\n        !(\"statusCode\" in accessRes) ||\r\n        accessRes.statusCode >= 400\r\n      ) {\r\n        console.warn(\"⚠️ Access control failed:\", accessRes);\r\n        Toast.show({\r\n          type: \"error\",\r\n          text1: \"Access Setup Failed\",\r\n          text2: accessRes.message || \"Could not assign role access.\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      // Step 4: Success\r\n      setChannels([\r\n        ...channels,\r\n        {\r\n          id: createdChannel.id,\r\n          name: newChannelName,\r\n          newMessages: 0,\r\n          isPrivate,\r\n          highestRoleToAccessChannel,\r\n        },\r\n      ]);\r\n\r\n      setNewChannelName(\"\");\r\n      setIsPrivate(false);\r\n      setModalVisible(false);\r\n\r\n      Toast.show({\r\n        type: \"success\",\r\n        text1: \"Channel Created\",\r\n        text2: `${newChannelName} added successfully.`,\r\n      });\r\n\r\n      console.log(\"🎉 Channel added to UI successfully.\");\r\n    } catch (err) {\r\n      console.error(\"❌ Unexpected error in handleCreateChannel:\", err);\r\n      Toast.show({\r\n        type: \"error\",\r\n        text1: \"Unexpected Error\",\r\n        text2: \"Something went wrong. Please try again.\",\r\n      });\r\n    }\r\n  };\r\n\r\n  //   const getRoleAccessLabel = (role: 'admin' | 'manager' | 'employee' | undefined) => {\r\n  //     if (!role) return '';\r\n  //     switch (role) {\r\n  //       case 'employee':\r\n  //         return 'all roles';\r\n  //       case 'manager':\r\n  //         return 'managers and admins';\r\n  //       case 'admin':\r\n  //         return 'admins only';\r\n  //       default:\r\n  //         return '';\r\n  //     }\r\n  //   };\r\n\r\n  const getRoleColor = (role: \"admin\" | \"manager\" | \"employee\" | undefined) => {\r\n    switch (role) {\r\n      case \"admin\":\r\n        return \"#D9534F\"; // red\r\n      case \"manager\":\r\n        return \"#FFA500\"; // orange\r\n      case \"employee\":\r\n        return \"#4CAF50\"; // green\r\n      default:\r\n        return \"#ccc\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.chatSection}>\r\n      {/* Header */}\r\n      <View style={styles.chatHeader}>\r\n        <Text style={styles.chatTitle}>Channels</Text>\r\n\r\n        <TouchableOpacity\r\n          onPress={() => setModalVisible(true)}\r\n          style={styles.addChannelButton}\r\n        >\r\n          <Feather name=\"plus\" size={16} color=\"white\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n\r\n      {/* Channel List */}\r\n      <ScrollView>\r\n        {channels.map((channel, index) => (\r\n          <TouchableOpacity\r\n            key={index}\r\n            style={[\r\n              styles.chatItem,\r\n              currentChannel === channel.name && styles.activeChatItem,\r\n            ]}\r\n            onPress={() => {\r\n              navigation.navigate(\"ChatScreen\", {\r\n                channelName: channel.name,\r\n                channelId: channel.id,\r\n                refreshChannels: fetchServerId,\r\n                allChannels: channels,\r\n              });\r\n            }}\r\n          >\r\n            <View style={styles.chatLeft}>\r\n              <Text style={styles.chatHash}>#</Text>\r\n              <Text style={styles.chatName} numberOfLines={1}>\r\n                {channel.name.length > 14\r\n                  ? `${channel.name.slice(0, 12)}..`\r\n                  : channel.name}\r\n              </Text>\r\n              {channel.isPrivate && (\r\n                <Feather name=\"lock\" size={14} style={styles.chatLock} />\r\n              )}\r\n            </View>\r\n            {/* Role hint line */}\r\n            {/* {channel.highestRoleToAccessChannel && (\r\n        <Text style={styles.roleHint}>\r\n        🔒 Accessible by {getRoleColor(channel.highestRoleToAccessChannel)}\r\n      </Text>\r\n      \r\n      )} */}\r\n            {/* Role color badge */}\r\n            {/* Role letter badge */}\r\n            {channel.highestRoleToAccessChannel && (\r\n              <View\r\n                style={[\r\n                  styles.roleBadge,\r\n                  {\r\n                    backgroundColor: getRoleColor(\r\n                      channel.highestRoleToAccessChannel\r\n                    ),\r\n                  },\r\n                ]}\r\n              >\r\n                <Text style={styles.roleLetterText}>\r\n                  {channel.highestRoleToAccessChannel.charAt(0).toUpperCase()}\r\n                </Text>\r\n              </View>\r\n            )}\r\n\r\n            {channel.newMessages > 0 && (\r\n              <Text style={styles.newMessageText}>\r\n                {channel.newMessages} new\r\n              </Text>\r\n            )}\r\n          </TouchableOpacity>\r\n        ))}\r\n      </ScrollView>\r\n\r\n      {/* Create Channel Modal */}\r\n      <Modal\r\n        animationType=\"slide\"\r\n        transparent={true}\r\n        visible={modalVisible}\r\n        onRequestClose={() => setModalVisible(false)}\r\n      >\r\n        <View style={styles.modalOverlay}>\r\n          <View style={styles.modalContainer}>\r\n            <Text style={styles.modalTitle}>Create Channel</Text>\r\n\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter channel name\"\r\n              value={newChannelName}\r\n              onChangeText={setNewChannelName}\r\n              placeholderTextColor=\"#888\"\r\n            />\r\n\r\n            <View style={styles.roleSelectContainer}>\r\n              <Text style={styles.switchLabel}>Minimum Role Required:</Text>\r\n              {[\"employee\", \"manager\", \"admin\"].map((role) => (\r\n                <TouchableOpacity\r\n                  key={role}\r\n                  style={[\r\n                    styles.roleOption,\r\n                    highestRoleToAccessChannel === role &&\r\n                      styles.roleOptionActive,\r\n                  ]}\r\n                  onPress={() => setHighestRoleToAccessChannel(role as any)}\r\n                >\r\n                  <Text\r\n                    style={[\r\n                      styles.roleOptionText,\r\n                      highestRoleToAccessChannel === role && { color: \"#fff\" },\r\n                    ]}\r\n                  >\r\n                    {role}\r\n                  </Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </View>\r\n\r\n            <View style={styles.switchRow}>\r\n              <Text style={styles.switchLabel}>Private Channel</Text>\r\n              <Switch\r\n                value={isPrivate}\r\n                onValueChange={setIsPrivate}\r\n                trackColor={{ false: \"#ccc\", true: \"#4A90E2\" }}\r\n                thumbColor={isPrivate ? \"#fff\" : \"#fff\"}\r\n              />\r\n            </View>\r\n\r\n            <View style={styles.modalButtons}>\r\n              <TouchableOpacity\r\n                style={[styles.button, styles.cancelButton]}\r\n                onPress={() => setModalVisible(false)}\r\n              >\r\n                <Text style={styles.buttonText}>Cancel</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity\r\n                style={[styles.button, styles.createButton]}\r\n                onPress={handleCreateChannel}\r\n              >\r\n                <Text style={[styles.buttonText, { color: \"#fff\" }]}>\r\n                  Create\r\n                </Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\nconst styles = StyleSheet.create({\r\n  chatSection: {\r\n    borderTopWidth: 1,\r\n    borderTopColor: \"#ccc\",\r\n    paddingTop: 10,\r\n    paddingHorizontal: 12,\r\n    marginBottom: 20,\r\n  },\r\n  chatHeader: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  chatTitle: {\r\n    fontSize: 12,\r\n    fontWeight: \"600\",\r\n    color: \"white\",\r\n    textTransform: \"uppercase\",\r\n    letterSpacing: 1,\r\n  },\r\n  addChannelButton: {\r\n    padding: 4,\r\n  },\r\n  chatItem: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 8,\r\n    borderRadius: 8,\r\n    marginBottom: 6,\r\n    backgroundColor: \"#ffffff\",\r\n  },\r\n  chatLeft: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    gap: 6,\r\n    flexShrink: 1,\r\n  },\r\n  chatHash: {\r\n    color: \"#4A90E2\",\r\n    fontWeight: \"700\",\r\n    fontSize: 16,\r\n    marginRight: 4,\r\n  },\r\n  chatName: {\r\n    fontSize: 15,\r\n    color: \"#333\",\r\n    maxWidth: 120,\r\n  },\r\n  chatLock: {\r\n    marginLeft: 4,\r\n    color: \"#777\",\r\n  },\r\n  newMessageText: {\r\n    fontSize: 11,\r\n    color: \"#4A90E2\",\r\n    backgroundColor: \"#e0ecff\",\r\n    paddingHorizontal: 6,\r\n    paddingVertical: 2,\r\n    borderRadius: 999,\r\n    overflow: \"hidden\",\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: \"rgba(0,0,0,0.5)\",\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n  },\r\n  modalContainer: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 12,\r\n    padding: 20,\r\n    elevation: 10,\r\n  },\r\n  modalTitle: {\r\n    fontSize: 18,\r\n    fontWeight: \"700\",\r\n    marginBottom: 15,\r\n    color: \"#333\",\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 14,\r\n    borderRadius: 8,\r\n    fontSize: 15,\r\n    marginBottom: 15,\r\n    color: \"#333\",\r\n  },\r\n  switchRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 20,\r\n  },\r\n  switchLabel: {\r\n    fontSize: 15,\r\n    color: \"#333\",\r\n  },\r\n  modalButtons: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    gap: 10,\r\n  },\r\n  button: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 18,\r\n    borderRadius: 8,\r\n  },\r\n  cancelButton: {\r\n    backgroundColor: \"#eee\",\r\n  },\r\n  createButton: {\r\n    backgroundColor: \"#4A90E2\",\r\n  },\r\n  buttonText: {\r\n    fontSize: 15,\r\n    fontWeight: \"600\",\r\n    color: \"#333\",\r\n  },\r\n  activeChatItem: {\r\n    backgroundColor: \"#88B6EC\", // soft blue\r\n    borderWidth: 1,\r\n    borderColor: \"#4A90E2\",\r\n  },\r\n  roleSelectContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  roleOption: {\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 12,\r\n    borderRadius: 6,\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    marginTop: 6,\r\n    backgroundColor: \"#f5f5f5\",\r\n  },\r\n  roleOptionActive: {\r\n    backgroundColor: \"#4A90E2\",\r\n    borderColor: \"#4A90E2\",\r\n  },\r\n  roleOptionText: {\r\n    color: \"#333\",\r\n    fontWeight: \"500\",\r\n    textTransform: \"capitalize\",\r\n  },\r\n  roleHint: {\r\n    fontSize: 11,\r\n    color: \"#777\",\r\n    marginTop: 2,\r\n  },\r\n  roleBadge: {\r\n    width: 18,\r\n    height: 18,\r\n    borderRadius: 9,\r\n    marginLeft: 8,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  roleLetterText: {\r\n    fontSize: 11,\r\n    fontWeight: \"bold\",\r\n    color: \"#fff\",\r\n  },\r\n});\r\n\r\nexport default ChatChannelList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  Animated,\r\n  StyleSheet,\r\n  ScrollView,\r\n  Dimensions,\r\n} from \"react-native\";\r\nimport { Feather } from \"@expo/vector-icons\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { RootStackParamList } from \"../../../types/navigationTypes\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport ChatChannelList from \"./ChatChannelList\";\r\n\r\ninterface SidebarProps {\r\n  isOpen: boolean;\r\n  toggleSidebar: () => void;\r\n  selectedTab: string; // Selected tab state\r\n  handleTabChange: (tab: string) => void;\r\n}\r\n\r\nconst Sidebar: React.FC<SidebarProps> = ({\r\n  isOpen,\r\n  toggleSidebar,\r\n  selectedTab,\r\n  handleTabChange,\r\n}) => {\r\n  const sidebarWidth = new Animated.Value(250); // Animated width for the sidebar\r\n  const sidebarPosition = new Animated.Value(0); // Animated position for the sidebar\r\n  const [isMobile, setIsMobile] = useState(false); // Detect if the device is mobile\r\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList>>();\r\n  const screenWidth = Dimensions.get(\"window\").width; // Get current screen width\r\n\r\n  useEffect(() => {\r\n    console.log(navigation); // Log the navigation object to ensure it's available\r\n  }, [navigation]);\r\n\r\n  // Detect screen size\r\n  useEffect(() => {\r\n    if (screenWidth <= 768) {\r\n      setIsMobile(true); // If the screen is mobile-sized\r\n    } else {\r\n      setIsMobile(false); // If it's desktop-sized\r\n    }\r\n  }, [screenWidth]);\r\n\r\n  // When the sidebar's state changes (open/close), animate its width and position\r\n  useEffect(() => {\r\n    if (isMobile) {\r\n      Animated.timing(sidebarPosition, {\r\n        toValue: isOpen ? 0 : -250, // Collapse sidebar on mobile\r\n        duration: 300,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    } else {\r\n      Animated.timing(sidebarWidth, {\r\n        toValue: isOpen ? 250 : 0, // Expand or collapse the sidebar on desktop\r\n        duration: 300,\r\n        useNativeDriver: false,\r\n      }).start();\r\n      Animated.timing(sidebarPosition, {\r\n        toValue: isOpen ? 0 : -250, // Keep sidebar in place on desktop\r\n        duration: 300,\r\n        useNativeDriver: false,\r\n      }).start();\r\n    }\r\n  }, [isOpen, isMobile]);\r\n\r\n  // Handle tab click and navigate\r\n  const handleMenuItemClick = (tab: string) => {\r\n    console.log(`${tab} item clicked`);\r\n    handleTabChange(tab); // Update the selected tab\r\n    if (tab === \"Schedules\") {\r\n      navigation.navigate(\"SchedulesScreen\"); // Navigate to SchedulesScreen\r\n    } else if (tab === \"Dashboard\") {\r\n      navigation.navigate(\"AdminDashboard\"); // Navigate to AdminDashboard\r\n    } else if (tab === \"ClockInOut\") {\r\n      navigation.navigate(\"ClockInOutScreen\"); // Navigate to ClockInOutScreen\r\n    } else if (tab === \"EmployeeManagement\") {\r\n      navigation.navigate(\"EmployeeManagementScreen\"); // Navigate to EmployeeManagementScreen\r\n    } else if (tab === \"GrossPaymentScreen\") {\r\n      navigation.navigate(\"GrossPaymentScreen\");\r\n    } else if (tab === \"LeaveRequestScreen\") {\r\n      navigation.navigate(\"LeaveRequestScreen\");\r\n    } else if (tab === \"Settings\") {\r\n      navigation.navigate(\"SettingsScreen\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.sidebarContainer}>\r\n      <Animated.View\r\n        style={[styles.sidebar, { width: sidebarWidth, left: sidebarPosition }]}\r\n      >\r\n        <ScrollView style={styles.menuItems}>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.menuItem,\r\n              selectedTab === \"Dashboard\" && styles.activeMenuItem,\r\n            ]}\r\n            onPress={() => handleMenuItemClick(\"Dashboard\")}\r\n          >\r\n            <Text style={styles.menuText}>Dashboard</Text>\r\n          </TouchableOpacity>\r\n          <ChatChannelList />\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.menuItem,\r\n              selectedTab === \"Schedules\" && styles.activeMenuItem,\r\n            ]}\r\n            onPress={() => {\r\n              handleMenuItemClick(\"Schedules\");\r\n            }}\r\n          >\r\n            <Text style={styles.menuText}>Schedules</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.menuItem,\r\n              selectedTab === \"ClockInOut\" && styles.activeMenuItem,\r\n            ]}\r\n            onPress={() => handleMenuItemClick(\"ClockInOut\")}\r\n          >\r\n            <Text style={styles.menuText}>Clock In/Out</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.menuItem,\r\n              selectedTab === \"GrossPaymentScreen\" && styles.activeMenuItem,\r\n            ]}\r\n            onPress={() => handleMenuItemClick(\"GrossPaymentScreen\")}\r\n          >\r\n            <Text style={styles.menuText}>Gross Payment</Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.menuItem,\r\n              selectedTab === \"LeaveRequestScreen\" && styles.activeMenuItem,\r\n            ]}\r\n            onPress={() => handleMenuItemClick(\"LeaveRequestScreen\")}\r\n          >\r\n            <Text style={styles.menuText}>Leave Request</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* <TouchableOpacity\r\n            style={[styles.menuItem, selectedTab === 'ToDo' && styles.activeMenuItem]}\r\n            onPress={() => handleMenuItemClick('ToDo')}\r\n          >\r\n            <Text style={styles.menuText}>To Do</Text>\r\n          </TouchableOpacity> */}\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.menuItem,\r\n              selectedTab === \"EmployeeManagement\" && styles.activeMenuItem,\r\n            ]}\r\n            onPress={() => handleMenuItemClick(\"EmployeeManagement\")}\r\n          >\r\n            <Text style={styles.menuText}>Employee Management</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.menuItem,\r\n              selectedTab === \"Settings\" && styles.activeMenuItem,\r\n            ]}\r\n            onPress={() => handleMenuItemClick(\"Settings\")}\r\n          >\r\n            <Text style={styles.menuText}>Settings</Text>\r\n          </TouchableOpacity>\r\n        </ScrollView>\r\n      </Animated.View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  sidebarContainer: {\r\n    flex: 1,\r\n    backgroundColor: \"transparent\",\r\n    position: \"absolute\",\r\n    top: 0,\r\n    left: 0,\r\n    height: \"100%\",\r\n    zIndex: 100,\r\n  },\r\n  sidebar: {\r\n    height: \"100%\",\r\n    backgroundColor: \"#4A90E2\",\r\n    borderBottomEndRadius: 20,\r\n    borderTopEndRadius: 20,\r\n    paddingTop: 30,\r\n    paddingLeft: 25,\r\n    boxShadow: \"4px 0px 15px rgba(0, 0, 0, 0.3)\",\r\n    overflow: \"hidden\",\r\n    position: \"absolute\",\r\n  },\r\n  menuItems: {\r\n    marginTop: 60,\r\n  },\r\n  menuItem: {\r\n    backgroundColor: \"#ffffff\",\r\n    width: \"90%\",\r\n    marginBottom: 20,\r\n    paddingVertical: 14,\r\n    paddingLeft: 18,\r\n    borderRadius: 8,\r\n  },\r\n  activeMenuItem: {\r\n    backgroundColor: \"#88B6EC\",\r\n    color: \"#fff\",\r\n  },\r\n  menuText: {\r\n    color: \"#333333\",\r\n    fontSize: 18,\r\n    fontWeight: \"500\",\r\n  },\r\n});\r\n\r\nexport default Sidebar;\r\n","import React from 'react';\r\nimport { View, Text, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport { Feather } from '@expo/vector-icons';\r\n\r\ninterface HeaderProps {\r\n  isSidebarOpen: boolean;\r\n  toggleSidebar: () => void;\r\n}\r\n\r\nconst Header: React.FC<HeaderProps> = ({ isSidebarOpen, toggleSidebar }) => {\r\n  return (\r\n    <View style={styles.headerContainer}>\r\n      {/* Button to toggle the sidebar */}\r\n      <TouchableOpacity onPress={toggleSidebar} style={styles.toggleButton}>\r\n        <Feather name={isSidebarOpen ? 'sidebar' : 'sidebar'} size={15} color=\"#fff\" />\r\n      </TouchableOpacity>\r\n\r\n      {/* App Name on the Left */}\r\n      <Text style={styles.appName}>RosterMate</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    headerContainer: {\r\n        backgroundColor: 'transparent', // Soft white\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'flex-start',\r\n        position: 'absolute',\r\n        top: 0,\r\n        left: 0,\r\n        right: 0,\r\n        height: 60,\r\n        zIndex: 101,\r\n        \r\n        elevation: 3, // for Android\r\n      \r\n  },\r\n  appName: {\r\n    color: 'black',\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginLeft: 10,\r\n\r\n    \r\n\r\n  },\r\n  toggleButton: {\r\n    backgroundColor: 'rgba(0, 0, 0, 0.3)',  // Semi-transparent background for the button\r\n    padding: 12,\r\n    borderRadius: 50,\r\n\r\n  },\r\n});\r\n\r\nexport default Header;\r\n","export const PrimaryColor = \"#4A90E2\";\r\nexport const AccentColor = \"#2ECC71\";\r\nexport const BackgroundColor = \"#FDFDFF\";\r\nexport const TextColor = \"#393D3F\";\r\nexport const ButtonRed = \"#D9534F\";\r\nexport const ActiveTabColor = \"#88B6EC\";","import axios, { AxiosError } from \"axios\";\r\nimport { getToken, Plat } from \"../auth/token\";\r\nimport { ApiError, ApiResponse } from \"../utils/apiResponse\";\r\n\r\n\r\n// creating an instance of axios api wth base url\r\nconst API = axios.create({\r\n  baseURL:\r\n    //  \"http://localhost:3000/api/v1/server/\",\r\n    \"https://workhive.space/api/v1/notify/\",\r\n\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport const sendAnnouncementToSelectedUsers = async (\r\n    userIds: string[],\r\n    title: string,\r\n    body: string\r\n  ) => {\r\n    const accessToken = await getToken('accessToken', Plat.WEB);\r\n  \r\n    try {\r\n      const response = await API.post(\r\n        'sendNotificationToSelectedUsers',\r\n        {\r\n          userIds,\r\n          title,\r\n          body,\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${accessToken}`,\r\n          },\r\n        }\r\n      );\r\n  \r\n      return response.data;\r\n    } catch (error: any) {\r\n      console.error('Error sending announcement:', error);\r\n  \r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err?.statusCode || 500, {}, err?.message || 'Unknown error');\r\n    }\r\n  };","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Modal,\r\n  TextInput,\r\n  ScrollView,\r\n} from 'react-native';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { PrimaryColor, TextColor, AccentColor, ButtonRed } from '../../../utils/color';\r\nimport { fetchAllUsers } from '../../../api/server/serverApi'; \r\nimport { ApiError } from '../../../api/utils/apiResponse';\r\nimport { Employee } from '../../../api/server/server';\r\nimport Toast from 'react-native-toast-message';\r\nimport { sendAnnouncementToSelectedUsers } from '../../../api/notifications/notificationApi';\r\n\r\nconst roles = ['admin', 'manager', 'Individual'] as const;\r\ntype Role = typeof roles[number];\r\n\r\nconst SendAnnouncementCard = () => {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [selectedRole, setSelectedRole] = useState<Role | null>(null);\r\n  const [selectedUsers, setSelectedUsers] = useState<string[]>([]);\r\n  const [users, setUsers] = useState<Employee[]>([]);\r\n  const [title, setTitle] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    const loadUsers = async () => {\r\n        const response = await fetchAllUsers();\r\n        if (!(response instanceof ApiError) && response.data) {\r\n          const employeesOnly: Employee[] = response.data.map((empDetail) => empDetail.Employee);\r\n          setUsers(employeesOnly);\r\n        }\r\n        \r\n    };\r\n    loadUsers();\r\n  }, []);\r\n\r\n  const handleUserToggle = (id: string) => {\r\n    setSelectedUsers((prev) =>\r\n      prev.includes(id) ? prev.filter((u) => u !== id) : [...prev, id]\r\n    );\r\n  };\r\n\r\n  const handleSend = async () => {\r\n    if (!selectedRole || selectedUsers.length === 0 || !title.trim() || !message.trim()) {\r\n      Toast.show({\r\n        type: 'error',\r\n        text1: 'Please complete all fields before sending.',\r\n        position: 'top',\r\n        visibilityTime: 3000,\r\n      });\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const userIds = selectedUsers\r\n  \r\n      const response = await sendAnnouncementToSelectedUsers(userIds, title, message);\r\n  \r\n      Toast.show({\r\n        type: 'success',\r\n        text1: 'Announcement sent successfully!',\r\n        position: 'top',\r\n        visibilityTime: 3000,\r\n      });\r\n  \r\n      // Reset form state after sending\r\n      setModalVisible(false);\r\n      setSelectedRole(null);\r\n      setSelectedUsers([]);\r\n      setTitle('');\r\n      setMessage('');\r\n    } catch (error) {\r\n      console.error('Error sending announcement:', error);\r\n  \r\n      Toast.show({\r\n        type: 'error',\r\n        text1: 'Failed to send announcement. Please try again.',\r\n        position: 'top',\r\n        visibilityTime: 3000,\r\n      });\r\n    }\r\n  };\r\n\r\n  const filteredUsers =\r\n    selectedRole === 'Individual'\r\n      ? users\r\n      : users.filter((u) => u.role.toLowerCase() === selectedRole);\r\n\r\n  return (\r\n    <View style={styles.card}>\r\n      <Text style={styles.title}>Send Announcement</Text>\r\n      <TouchableOpacity onPress={() => setModalVisible(true)} style={styles.button}>\r\n        <Ionicons name=\"megaphone\" size={20} color=\"#fff\" />\r\n        <Text style={styles.buttonText}>New Announcement</Text>\r\n      </TouchableOpacity>\r\n\r\n      <Modal visible={modalVisible} animationType=\"slide\" transparent>\r\n        <View style={styles.modalOverlay}>\r\n          <View style={styles.modalContent}>\r\n            <ScrollView>\r\n              <Text style={styles.modalTitle}>Create Announcement</Text>\r\n\r\n              {/* Select Role */}\r\n              <View style={styles.section}>\r\n                <Text style={styles.label}>Choose Role</Text>\r\n                {roles.map((role) =>\r\n                  selectedRole === null || selectedRole === role ? (\r\n                    <TouchableOpacity\r\n                      key={role}\r\n                      style={[\r\n                        styles.optionButton,\r\n                        selectedRole === role && styles.selectedOption,\r\n                      ]}\r\n                      onPress={() =>\r\n                        selectedRole === role\r\n                          ? setSelectedRole(null)\r\n                          : setSelectedRole(role)\r\n                      }\r\n                    >\r\n                      <Text style={styles.optionText}>\r\n                        {role.charAt(0).toUpperCase() + role.slice(1)}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  ) : null\r\n                )}\r\n              </View>\r\n\r\n              {/* Select Users */}\r\n              {selectedRole && (\r\n                <View style={styles.section}>\r\n                  <Text style={styles.label}>Select Recipients</Text>\r\n                  {filteredUsers.map((user) => (\r\n                    <TouchableOpacity\r\n                      key={user.id}\r\n                      style={[\r\n                        styles.optionButton,\r\n                        selectedUsers.includes(user.id) && styles.selectedOption,\r\n                      ]}\r\n                      onPress={() => handleUserToggle(user.id)}\r\n                    >\r\n                      <Text style={styles.optionText}>\r\n                        {user.firstName} {user.lastName} ({user.email})\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  ))}\r\n                </View>\r\n              )}\r\n\r\n              {/* Title */}\r\n              <TextInput\r\n                placeholder=\"Announcement Title\"\r\n                style={styles.textInput}\r\n                value={title}\r\n                onChangeText={setTitle}\r\n              />\r\n\r\n              {/* Message */}\r\n              <TextInput\r\n                placeholder=\"Write your message here...\"\r\n                style={styles.textArea}\r\n                multiline\r\n                numberOfLines={4}\r\n                value={message}\r\n                onChangeText={setMessage}\r\n              />\r\n\r\n              {/* Actions */}\r\n              <View style={styles.buttonRow}>\r\n                <TouchableOpacity onPress={() => setModalVisible(false)} style={styles.cancelButton}>\r\n                  <Text style={styles.cancelText}>Cancel</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={handleSend} style={styles.sendButton}>\r\n                  <Text style={styles.sendText}>Send</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </ScrollView>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default SendAnnouncementCard;\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    backgroundColor: '#fff',\r\n    padding: 18,\r\n    borderRadius: 12,\r\n    marginBottom: 20,\r\n    elevation: 2,\r\n  },\r\n  title: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: TextColor,\r\n    marginBottom: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: PrimaryColor,\r\n    padding: 12,\r\n    borderRadius: 8,\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    gap: 8,\r\n  },\r\n  buttonText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: '#000000aa',\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n  },\r\n  modalContent: {\r\n    backgroundColor: '#fff',\r\n    padding: 20,\r\n    borderRadius: 16,\r\n    maxHeight: '90%',\r\n  },\r\n  modalTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: TextColor,\r\n    marginBottom: 10,\r\n  },\r\n  section: {\r\n    marginVertical: 10,\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n    marginBottom: 6,\r\n    color: TextColor,\r\n  },\r\n  optionButton: {\r\n    padding: 10,\r\n    backgroundColor: '#f0f0f0',\r\n    marginBottom: 6,\r\n    borderRadius: 8,\r\n  },\r\n  selectedOption: {\r\n    backgroundColor: AccentColor,\r\n  },\r\n  optionText: {\r\n    fontSize: 16,\r\n    color: TextColor,\r\n  },\r\n  textInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    marginTop: 12,\r\n    marginBottom: 12,\r\n  },\r\n  textArea: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 8,\r\n    padding: 12,\r\n    height: 100,\r\n    marginBottom: 20,\r\n    textAlignVertical: 'top',\r\n  },\r\n  buttonRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'flex-end',\r\n    gap: 12,\r\n  },\r\n  cancelButton: {\r\n    padding: 10,\r\n  },\r\n  cancelText: {\r\n    color: ButtonRed,\r\n    fontWeight: 'bold',\r\n  },\r\n  sendButton: {\r\n    backgroundColor: PrimaryColor,\r\n    padding: 10,\r\n    borderRadius: 8,\r\n  },\r\n  sendText: {\r\n    color: '#fff',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  Animated,\r\n  FlatList,\r\n  ScrollView,\r\n  Dimensions,\r\n  Platform,\r\n} from 'react-native';\r\nimport Sidebar from '../components/Sidebar';\r\nimport Header from '../components/Header';\r\nimport {\r\n  PrimaryColor,\r\n  AccentColor,\r\n  BackgroundColor,\r\n  TextColor,\r\n  ButtonRed,\r\n} from '../../../utils/color';\r\nimport SendAnnouncementCard from '../components/SendAnnouncementCard';\r\n\r\nconst AdminDashboard: React.FC = () => {\r\n  const [selectedTab, setSelectedTab] = useState('Dashboard');\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const sidebarWidth = new Animated.Value(250);\r\n  const mainContentPadding = new Animated.Value(250);\r\n  const [isMobile, setIsMobile] = useState(false);\r\n\r\n  const screenWidth = Dimensions.get('window').width;\r\n\r\n  useEffect(() => {\r\n    if (screenWidth <= 768) {\r\n      setIsMobile(true);\r\n      setIsSidebarOpen(false);\r\n    } else {\r\n      setIsMobile(false);\r\n      setIsSidebarOpen(true);\r\n    }\r\n  }, [screenWidth]);\r\n\r\n  useEffect(() => {\r\n    Animated.timing(sidebarWidth, {\r\n      toValue: isSidebarOpen ? 250 : 0,\r\n      duration: 300,\r\n      useNativeDriver: false,\r\n    }).start();\r\n\r\n    Animated.timing(mainContentPadding, {\r\n      toValue: isSidebarOpen ? 250 : 0,\r\n      duration: 300,\r\n      useNativeDriver: false,\r\n    }).start();\r\n  }, [isSidebarOpen]);\r\n\r\n  const handleTabChange = (tab: string) => {\r\n    setSelectedTab(tab);\r\n  };\r\n\r\n  const alerts = [\r\n    {\r\n      text: 'Pranish was supposed to start working at 10. He has not clocked in yet.',\r\n      time: '60 mins ago',\r\n      type: 'alert',\r\n    },\r\n    {\r\n      text: 'Pranish has requested for a leave this Saturday',\r\n      time: '10 min ago',\r\n      type: 'notification',\r\n    },\r\n    {\r\n      text: 'Sabin mentioned you in #Channel1',\r\n      time: '10 min ago',\r\n      type: 'notification',\r\n    },\r\n  ];\r\n\r\n  const toDos = [{ task: 'Place an order for tomorrow', due: 'Due today' }];\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      \r\n      {/* Header */}\r\n      <Header isSidebarOpen={isSidebarOpen} toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)} />\r\n      <View style={styles.contentWrapper} >\r\n      {/* Sidebar */}\r\n        <Sidebar\r\n          isOpen={isSidebarOpen}\r\n          toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\r\n          selectedTab={selectedTab}\r\n          handleTabChange={handleTabChange}\r\n        />\r\n\r\n      {/* Main Content */}\r\n      <Animated.View style={[styles.mainContent, { paddingLeft: isMobile ? 0 : mainContentPadding, flex: 1 }]}>\r\n        <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n\r\n          {/* Welcome Banner */}\r\n          <View style={styles.welcomeBanner}>\r\n            <Text style={styles.welcomeTitle}>Welcome, Admin 👋</Text>\r\n            <Text style={styles.welcomeSubtitle}>\r\n              Here's an overview of what’s happening today.\r\n            </Text>\r\n          </View>\r\n\r\n          {/* Alert */}\r\n          <View style={[styles.card, styles.alertCard]}>\r\n            <Text style={styles.cardTitle}>Alert</Text>\r\n            <Text style={styles.alertText}>{alerts[0].text}</Text>\r\n            <Text style={styles.timestamp}>{alerts[0].time}</Text>\r\n          </View>\r\n\r\n          {/* Notifications */}\r\n          <View style={styles.card}>\r\n            <Text style={styles.cardTitle}>Notifications</Text>\r\n            {alerts.slice(1).map((alert, index) => (\r\n              <View key={index} style={styles.notificationItem}>\r\n                <Text style={styles.notificationText}>{alert.text}</Text>\r\n                <Text style={styles.timestamp}>{alert.time}</Text>\r\n              </View>\r\n            ))}\r\n          </View>\r\n\r\n          {/* To-do’s */}\r\n          <View style={styles.card}>\r\n            <Text style={styles.cardTitle}>To-do’s</Text>\r\n            <FlatList\r\n              data={toDos}\r\n              renderItem={({ item }) => (\r\n                <View style={styles.todoItem}>\r\n                  <Text style={styles.todoText}>{item.task}</Text>\r\n                  <Text style={styles.timestamp}>{item.due}</Text>\r\n                </View>\r\n              )}\r\n              keyExtractor={(_, index) => index.toString()}\r\n            />\r\n          </View>\r\n          {/* Send Announcement Card */}\r\n          <SendAnnouncementCard />\r\n        </ScrollView>\r\n      </Animated.View>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n    backgroundColor: BackgroundColor,\r\n  },\r\n  contentWrapper: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  mainContent: {\r\n    flex: 1,\r\n    marginTop: 60,\r\n    paddingHorizontal: 20,\r\n    paddingBottom: 20,\r\n    marginLeft:30,\r\n  },\r\n  scrollContainer: {\r\n    paddingBottom: 100,\r\n    flexGrow: 1,\r\n  },\r\n  welcomeBanner: {\r\n    marginBottom: 20,\r\n  },\r\n  welcomeTitle: {\r\n    fontSize: 26,\r\n    fontWeight: 'bold',\r\n    color: TextColor,\r\n  },\r\n  welcomeSubtitle: {\r\n    fontSize: 16,\r\n    color: '#6C6C6C',\r\n  },\r\n  card: {\r\n    backgroundColor: '#ffffff',\r\n    borderRadius: 12,\r\n    padding: 18,\r\n    marginBottom: 20,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 1 },\r\n    shadowOpacity: 0.05,\r\n    shadowRadius: 3,\r\n    elevation: 2,\r\n  },\r\n  alertCard: {\r\n    borderLeftWidth: 5,\r\n    borderLeftColor: ButtonRed,\r\n    backgroundColor: '#FFEBEB',\r\n  },\r\n  cardTitle: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n    color: TextColor,\r\n    marginBottom: 10,\r\n  },\r\n  alertText: {\r\n    fontSize: 16,\r\n    color: ButtonRed,\r\n  },\r\n  notificationItem: {\r\n    marginBottom: 15,\r\n  },\r\n  notificationText: {\r\n    fontSize: 16,\r\n    color: TextColor,\r\n  },\r\n  todoItem: {\r\n    marginBottom: 15,\r\n  },\r\n  todoText: {\r\n    fontSize: 16,\r\n    color: TextColor,\r\n  },\r\n  timestamp: {\r\n    fontSize: 12,\r\n    color: '#6C6C6C',\r\n  },\r\n});\r\n\r\nexport default AdminDashboard;\r\n","import React, {\r\n  createContext,\r\n  useState,\r\n  useContext,\r\n  ReactNode,\r\n  useEffect,\r\n} from \"react\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\"; // AsyncStorage for mobile (React Native)\r\nimport { Platform } from \"react-native\"; // To check platform (Web or Mobile)\r\n\r\ninterface AuthContextType {\r\n  userRole: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  setUserRole: (role: string) => void;\r\n  setFirstName: (firstName: string) => void;\r\n  setLastName: (lastName: string) => void;\r\n  isAuthenticated: boolean;\r\n  setIsAuthenticated: (authStatus: boolean) => void;\r\n\r\n  saveAuthData: (\r\n    role: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    token: string\r\n  ) => Promise<void>;\r\n}\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error(\"useAuth must be used within an AuthProvider\");\r\n  }\r\n  return context;\r\n};\r\n\r\ninterface AuthProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [userRole, setUserRole] = useState<string>(\"employee\"); // Default role\r\n  const [firstName, setFirstName] = useState<string>(\"\");\r\n  const [lastName, setLastName] = useState<string>(\"\");\r\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const loadAuthData = async () => {\r\n      try {\r\n        if (Platform.OS === \"web\") {\r\n          // For Web: Use localStorage\r\n          const token = localStorage.getItem(\"token\");\r\n          const savedRole = localStorage.getItem(\"role\");\r\n          const savedFirstName = localStorage.getItem(\"firstName\");\r\n          const savedLastName = localStorage.getItem(\"lastName\");\r\n\r\n          if (token && savedRole && savedFirstName && savedLastName) {\r\n            setIsAuthenticated(true);\r\n            setUserRole(savedRole);\r\n            setFirstName(savedFirstName);\r\n            setLastName(savedLastName);\r\n          }\r\n        } else {\r\n          // For Mobile (React Native): Use AsyncStorage\r\n          const token = await AsyncStorage.getItem(\"token\");\r\n          const savedRole = await AsyncStorage.getItem(\"role\");\r\n          const savedFirstName = await AsyncStorage.getItem(\"firstName\");\r\n          const savedLastName = await AsyncStorage.getItem(\"lastName\");\r\n\r\n          if (token && savedRole && savedFirstName && savedLastName) {\r\n            setIsAuthenticated(true);\r\n            setUserRole(savedRole);\r\n            setFirstName(savedFirstName);\r\n            setLastName(savedLastName);\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Failed to load auth data\", error);\r\n      }\r\n    };\r\n\r\n    loadAuthData();\r\n  }, []);\r\n\r\n  const saveAuthData = async (\r\n    role: string,\r\n    firstName: string,\r\n    lastName: string,\r\n    token: string\r\n  ) => {\r\n    if (Platform.OS === \"web\") {\r\n      // For Web: Save to localStorage\r\n      localStorage.setItem(\"token\", token);\r\n      localStorage.setItem(\"role\", role);\r\n      localStorage.setItem(\"firstName\", firstName);\r\n      localStorage.setItem(\"lastName\", lastName);\r\n    } else {\r\n      // For Mobile: Save to AsyncStorage\r\n      await AsyncStorage.setItem(\"token\", token);\r\n      await AsyncStorage.setItem(\"role\", role);\r\n      await AsyncStorage.setItem(\"firstName\", firstName);\r\n      await AsyncStorage.setItem(\"lastName\", lastName);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        userRole,\r\n        firstName,\r\n        lastName,\r\n        setUserRole,\r\n        setFirstName,\r\n        setLastName,\r\n        isAuthenticated,\r\n        setIsAuthenticated,\r\n        saveAuthData, // Function to save auth data for login\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","// src/screens/WelcomeScreen.tsx\r\nimport React from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Image,\r\n  ScrollView,\r\n  Platform,\r\n} from \"react-native\";\r\nconst WelcomeScreen = ({ navigation }: { navigation: any }) => {\r\n  return (\r\n    <ScrollView\r\n      style={styles.container}\r\n      contentContainerStyle={styles.contentContainer}\r\n    >\r\n      {/* Platform-specific Layout */}\r\n      {Platform.OS === \"web\" ? (\r\n        // Web Layout (Logo on Left, Buttons on Right)\r\n        <View style={styles.rowContainer}>\r\n          <View style={styles.logoContainer}>\r\n            <Image\r\n              source={require(\"../../../assets/wpslogo.png\")}\r\n              style={styles.logo}\r\n            />\r\n          </View>\r\n\r\n          <View style={styles.buttonsContainer}>\r\n            <Text style={styles.welcomeText}>WorkHive</Text>\r\n\r\n            <TouchableOpacity\r\n              onPress={() => navigation.navigate(\"Login\")}\r\n              style={[styles.button, { backgroundColor: \"#4A90E2\" }]} // Light Blue for login\r\n            >\r\n              <Text style={styles.buttonText}>Login</Text>\r\n            </TouchableOpacity>\r\n\r\n            <TouchableOpacity\r\n              onPress={() => navigation.navigate(\"PartialRegesterScreen\")}\r\n              style={[styles.secondaryButton]} // Gold for Sign Up\r\n            >\r\n              <Text style={styles.secondaryButtonText}>Register</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      ) : (\r\n        // Mobile Layout (Logo on Top, Buttons Below)\r\n        <View style={styles.mobileContainer}>\r\n          <Image\r\n            source={require(\"../../../assets/wpslogo.png\")}\r\n            style={styles.logo}\r\n          />\r\n          <Text style={styles.welcomeText}>WorkHive</Text>\r\n\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate(\"Login\")}\r\n            style={[styles.button, { backgroundColor: \"#4A90E2\" }]} // Light Blue for login\r\n          >\r\n            <Text style={styles.buttonText}>Login</Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            onPress={() => navigation.navigate(\"PartialRegesterScreen\")}\r\n            style={styles.secondaryButton} // Gold for Sign Up\r\n          >\r\n            <Text style={styles.secondaryButtonText}>Register</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      )}\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#FDFDFF\", // Off-White background\r\n  },\r\n  contentContainer: {\r\n    flexGrow: 1,\r\n    justifyContent: \"center\", // Center the content vertically\r\n    alignItems: \"center\", // Center the items horizontally\r\n  },\r\n  rowContainer: {\r\n    flexDirection: \"column\", // For Web: Logo on the left and buttons on the right\r\n    justifyContent: \"center\",\r\n    height: \"80%\",\r\n    width: \"100%\",\r\n  },\r\n  logoContainer: {\r\n    flex: 1,\r\n    backgroundColor: \"#FDFDFF\", // Off-White background to blend with Welcome Screen\r\n    borderRadius: 100,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  logo: {\r\n    width: Platform.OS === \"web\" ? 400 : 250,\r\n    height: Platform.OS === \"web\" ? 400 : 250,\r\n  },\r\n  buttonsContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n\r\n    paddingLeft: 200, // Space between logo and buttons\r\n    paddingRight: 200, // Space between logo and buttons\r\n    width: \"100%\", // Limit the width for the buttons container on web\r\n  },\r\n  secondaryButton: {\r\n    // Larger padding for mobile\r\n    borderRadius: 5,\r\n    padding: Platform.OS === \"web\" ? 15 : 20,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  secondaryButtonText: {\r\n    color: \"#4A90E2\",\r\n    fontSize: 18,\r\n  },\r\n  mobileContainer: {\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"90%\", // Make sure this takes up the full width\r\n  },\r\n  welcomeText: {\r\n    fontSize: Platform.OS === \"web\" ? 40 : 40, // Larger text for web\r\n    fontWeight: \"bold\",\r\n    color: \"#393D3F\", // Charcoal Grey\r\n    marginBottom: 50,\r\n    textAlign: \"center\",\r\n    marginTop: Platform.OS === \"web\" ? \"10%\" : \"0%\", // Add space on top for mobile\r\n  },\r\n  button: {\r\n    width: \"100%\", // Make sure button takes up full width in its container\r\n    padding: 15,\r\n    borderRadius: 5, // Rounded corners for the buttons\r\n    marginBottom: 10,\r\n    alignItems: \"center\",\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n    fontSize: 18,\r\n  },\r\n  buttonText1: {\r\n    color: \"#fff\",\r\n    fontSize: 13,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default WelcomeScreen;\r\n","import axios, { AxiosError } from \"axios\";\r\nimport {\r\n  EditUserDetailRequest,\r\n  LoginResponse,\r\n  RegisterRequest,\r\n  RegisterResponse,\r\n  SendOTPRequest,\r\n  VerifyOTPRequest,\r\n} from \"./auth\";\r\n\r\nimport { ApiResponse, ApiError } from \"../utils/apiResponse\";\r\nimport { getToken } from \"./token\";\r\nimport { Role } from \"../server/server\";\r\n\r\nconst API = axios.create({\r\n  baseURL:\r\n    // \"https://8c1f-2406-2d40-4d55-6c10-bdc3-9abf-864e-c64f.ngrok-free.app\",\r\n    \"https://workplace-zdzja.ondigitalocean.app/api/v1/auth/\",\r\n  // \"http://localhost:3000/api/v1/auth/\",\r\n\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nconst loginUser = async (email: string, password: string): Promise<any> => {\r\n  try {\r\n    const response = await API.post<ApiResponse<LoginResponse>>(\"login\", {\r\n      email,\r\n      password,\r\n    });\r\n    return response.data;\r\n  } catch (error) {\r\n    if (axios.isAxiosError(error)) {\r\n      const statusCode = error.response?.status ?? 500;\r\n      const message = error.response?.data?.message || \"An unexpected error occurred\";\r\n      return new ApiError(statusCode, {}, message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\nconst registerUser = async (userData: RegisterRequest) => {\r\n  try {\r\n    console.log(\"regster\");\r\n    console.log(\"Request payload:\", userData); // Log the data being sent to the server\r\n    const response = await API.post<ApiResponse<RegisterResponse>>(\r\n      \"register\",\r\n      userData\r\n    );\r\n    console.log(\"Response received:\", response);\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n// Send OTP\r\nconst sendOTP = async (reqData: SendOTPRequest) => {\r\n  try {\r\n    console.log(\"Request payload:\", reqData);\r\n    const response = await API.post<ApiResponse<{}>>(\r\n      \"sendVerificationCode\",\r\n      reqData\r\n    );\r\n    console.log(response);\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n// Verify the OTP\r\nconst verifyOTP = async (reqData: VerifyOTPRequest) => {\r\n  try {\r\n    console.log(\"Request payload:\", reqData);\r\n    const response = await API.post<ApiResponse<{}>>(\r\n      \"validateVerificationCode\",\r\n      reqData\r\n    );\r\n    console.log(response.data.message);\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\nconst partialregisterComplete = async (\r\n  phoneNumber: string,\r\n  password: string\r\n) => {\r\n  console.log(password, phoneNumber);\r\n  console.log(\"Partial\");\r\n\r\n  try {\r\n    const response = await API.post<ApiResponse<{}>>(\r\n      \"partialRegestrationPasswordSet\",\r\n\r\n      {\r\n        phoneNumber,\r\n        password,\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n// editUserDetail\r\nconst editUserDetail = async (reqData: EditUserDetailRequest) => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\");\r\n    const response = await API.post<ApiResponse<{}>>(\r\n      \"editCurrentUserDetail\",\r\n      reqData,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n// logs out an user\r\nconst logOutUser = async () => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\");\r\n    const response = await API.get<ApiResponse<{}>>(\"logOutUser\", {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`,\r\n      },\r\n    });\r\n\r\n    return response.data;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\nexport {\r\n  loginUser,\r\n  registerUser,\r\n  sendOTP,\r\n  verifyOTP,\r\n  editUserDetail,\r\n  logOutUser,\r\n  partialregisterComplete,\r\n};\r\n","import React, { createContext, useState, useContext, ReactNode } from \"react\";\r\nimport { registerUser } from \"../../api/auth/authApi\";\r\nimport { RegisterRequest } from \"../../api/auth/auth\";\r\nimport { ApiError } from \"../../api/utils/apiResponse\";\r\nimport { AxiosError } from \"axios\";\r\n\r\ninterface FormData {\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  password: string;\r\n  phoneNumber: string;\r\n  inviteLink: string;\r\n}\r\n\r\ninterface SignupContextType {\r\n  formData: FormData;\r\n  updateFormData: (key: keyof FormData, value: string) => void;\r\n}\r\n\r\n// Set default values for form data\r\nconst defaultFormData: FormData = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  phoneNumber: \"\",\r\n  inviteLink: \"\",\r\n};\r\n\r\n// Create the context with the default value and types\r\nconst SignupContext = createContext<SignupContextType>({\r\n  formData: defaultFormData,\r\n  updateFormData: () => {},\r\n});\r\n\r\nexport const useSignup = () => useContext(SignupContext);\r\n\r\n// Define the type for the provider's children\r\ninterface SignupProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\n// Create the provider component\r\nexport const SignupProvider = ({ children }: SignupProviderProps) => {\r\n  const [formData, setFormData] = useState<FormData>(defaultFormData);\r\n\r\n  const updateFormData = (key: keyof FormData, value: string) => {\r\n    setFormData((prevData) => ({ ...prevData, [key]: value }));\r\n  };\r\n\r\n  return (\r\n    <SignupContext.Provider value={{ formData, updateFormData }}>\r\n      {children}\r\n    </SignupContext.Provider>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Platform,\r\n  Dimensions,\r\n  Button,\r\n  KeyboardAvoidingView,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { useSignup } from \"./SignUpContext\";\r\nimport Toast from \"react-native-toast-message\";\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nconst isLandscape = width > height;\r\nexport const validateEmail = (email: string): boolean => {\r\n  const emailPattern =\r\n    /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return emailPattern.test(email.toLocaleLowerCase());\r\n};\r\nexport const SignupSecondScreen = ({ navigation }: { navigation: any }) => {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const { updateFormData } = useSignup();\r\n\r\n  const handleNext = () => {\r\n    if (!email) {\r\n      Toast.show({\r\n        text1: \"Email is Missing.\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    if (!validateEmail(email)) {\r\n      Toast.show({\r\n        text1: \"Invalid Email Format\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    updateFormData(\"email\", email);\r\n    navigation.navigate(\"SignupPhone\");\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n    >\r\n      <SafeAreaView>\r\n        <View\r\n          style={[\r\n            styles.rowContainer,\r\n            { flexDirection: Platform.OS === \"web\" ? \"row\" : \"column\" },\r\n          ]}\r\n        >\r\n          {/* Right Side: Signup Form */}\r\n          <View style={styles.formContainer}>\r\n            {/* First Name Input */}\r\n            <TextInput\r\n              autoFocus={true}\r\n              style={styles.input}\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChangeText={setEmail}\r\n            />\r\n\r\n            {/* Signup Button */}\r\n            <TouchableOpacity onPress={handleNext} style={styles.button}>\r\n              <Text style={styles.buttonText}>Continue</Text>\r\n            </TouchableOpacity>\r\n            <View style={styles.footer}>\r\n              <Text>Already have an account? </Text>\r\n              <TouchableOpacity onPress={() => navigation.navigate(\"Login\")}>\r\n                <Text style={styles.link}>Login</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n            {/* back to previous screen */}\r\n          </View>\r\n        </View>\r\n      </SafeAreaView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\n// Styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n    backgroundColor: \"#FDFDFF\", // Off-White background\r\n    marginTop: -140,\r\n  },\r\n  rowContainer: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    fontSize: Platform.OS === \"web\" ? 30 : 24, // Larger font size for web\r\n    // Additional flex properties for responsive layout\r\n    maxWidth: 1200, // Max width for the content container\r\n  },\r\n  leftSide: {\r\n    marginRight: Platform.OS === \"web\" ? 0 : 0, // Margin for spacing on the web version\r\n    alignItems: \"flex-start\", // Align text to the left on web\r\n    width: Platform.OS === \"web\" ? \"30%\" : \"100%\",\r\n    marginBottom: 60,\r\n  },\r\n  backButton: {\r\n    padding: 10,\r\n    marginTop: 30, // Adjust for iOS devices\r\n  },\r\n  formContainer: {\r\n    width: Platform.OS === \"web\" ? \"60%\" : \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    width: \"100%\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderWidth: 2,\r\n    borderColor: \"#ccc\",\r\n    marginBottom: 15,\r\n    borderRadius: 5,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#4A90E2\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderRadius: 5,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n    marginBottom: 5,\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n  },\r\n\r\n  secondaryButton: {\r\n    // Larger padding for mobile\r\n    borderRadius: 5,\r\n    padding: Platform.OS === \"web\" ? 15 : 20,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n\r\n    marginBottom: 20,\r\n  },\r\n  secondaryButtonText: {\r\n    color: \"#4A90E2\",\r\n    fontSize: 20,\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    marginBottom: 10,\r\n    textAlign: \"center\",\r\n  },\r\n  footer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  link: {\r\n    color: \"#007bff\",\r\n    textDecorationLine: \"underline\",\r\n  },\r\n});\r\n\r\nexport default SignupSecondScreen;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Platform,\r\n  KeyboardAvoidingView,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\r\nimport { Ionicons } from \"@expo/vector-icons\"; // Correct import for Ionicons\r\nimport { useAuth } from \"../../context/AuthContext\"; // Assuming you have the AuthContext to manage role\r\nimport JWT from \"expo-jwt\"; // Correct import for jwt-decode\r\n\r\nimport { Plat, saveToken } from \"../../api/auth/token\";\r\nimport { ApiError, ApiResponse } from \"../../api/utils/apiResponse\";\r\nimport { loginUser } from \"../../api/auth/authApi\";\r\nimport { validateEmail } from \"../Signup/SignupSecond\";\r\nimport Toast from \"react-native-toast-message\";\r\n\r\nconst LoginScreen = ({ navigation }: { navigation: any }) => {\r\n  const { setUserRole, setIsAuthenticated } = useAuth(); // Get AuthContext functions\r\n  const [Email, setEmail] = useState(\"11111@gmail.com\");\r\n  const [Password, setPassword] = useState(\"Abcde1@345\");\r\n  const [error, setError] = useState(\"\");\r\n  const [showPassword, setShowPassword] = useState(false); // State to toggle password visibility\r\n  // activity indicator\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // handle all logic for login\r\n  const handleLogin = async () => {\r\n    try {\r\n      if (!Email || !Password) {\r\n        setError(\"Email and Password must be filled\");\r\n        return;\r\n      }\r\n  \r\n      if (!validateEmail(Email)) {\r\n        setError(\"Please enter a valid email.\");\r\n        return;\r\n      }\r\n  \r\n      if (Password.length < 8) {\r\n        setError(\"Password length should be at least 8 characters.\");\r\n        return;\r\n      }\r\n  \r\n      setLoading(true);\r\n      const response = await loginUser(Email, Password);\r\n  \r\n      if (response instanceof ApiError) {\r\n        setLoading(false);\r\n  \r\n        // Specific case for partial registration\r\n        if (response.statusCode === 409) {\r\n          navigation.navigate(\"PartialRegesterScreen\");\r\n        }\r\n  \r\n        Toast.show({\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n          text1: \"Login Failed\",\r\n          text2: response.message || \"Invalid credentials\",\r\n        });\r\n  \r\n        setError(response.message || \"Invalid credentials\");\r\n        return;\r\n      }\r\n  \r\n      if (!(\"statusCode\" in response) || !(\"data\" in response)) {\r\n        setLoading(false);\r\n        Toast.show({\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n          text1: \"Login Failed\",\r\n          text2: \"Unexpected response from server\",\r\n        });\r\n        setError(\"Unexpected server response\");\r\n        return;\r\n      }\r\n  \r\n      const accessToken = response.data?.accessToken ?? \"\";\r\n      const refreshToken = response.data?.refreshToken ?? \"\";\r\n  \r\n      if (!accessToken) {\r\n        setLoading(false);\r\n        setError(\"No access token received\");\r\n        Toast.show({\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n          text1: \"Login Failed\",\r\n          text2: \"Access token missing\",\r\n        });\r\n        return;\r\n      }\r\n  \r\n      // Save tokens\r\n      if (Platform.OS === \"web\") {\r\n        saveToken(\"accessToken\", accessToken, Plat.WEB);\r\n        saveToken(\"refreshToken\", refreshToken, Plat.WEB);\r\n      } else {\r\n        saveToken(\"accessToken\", accessToken);\r\n        saveToken(\"refreshToken\", refreshToken);\r\n      }\r\n  \r\n      const decodedToken = JWT.decode(accessToken, null);\r\n      const role = decodedToken.role;\r\n  \r\n      // Platform-based login restriction\r\n      if (Platform.OS === \"web\" && role === \"employee\") {\r\n        setLoading(false);\r\n        setError(\"Employees cannot log in from the web.\");\r\n        Toast.show({\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n          text1: \"Access Denied\",\r\n          text2: \"Employees cannot log in from the web.\",\r\n        });\r\n        return;\r\n      }\r\n  \r\n      if ((Platform.OS === \"android\" || Platform.OS === \"ios\") && (role === \"admin\" || role === \"manager\")) {\r\n        setLoading(false);\r\n        setError(\"Admins and Managers can only log in from the web.\");\r\n        Toast.show({\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n          text1: \"Access Denied\",\r\n          text2: \"Admins and Managers can only log in from the web.\",\r\n        });\r\n        return;\r\n      }\r\n  \r\n      // Save to storage\r\n      if (Platform.OS === \"web\") {\r\n        localStorage.setItem(\"token\", accessToken);\r\n        localStorage.setItem(\"role\", role);\r\n      } else {\r\n        await AsyncStorage.setItem(\"token\", accessToken);\r\n        await AsyncStorage.setItem(\"role\", role);\r\n      }\r\n  \r\n      setUserRole(role);\r\n      setIsAuthenticated(true);\r\n  \r\n      if (role === \"admin\") {\r\n        navigation.navigate(\"AdminDashboard\");\r\n      } else if (role === \"manager\") {\r\n        navigation.replace(\"ManagerDashboard\");\r\n      } else if (role === \"employee\") {\r\n        navigation.reset({\r\n          index: 0,\r\n          routes: [{ name: \"EmployeeDashboard\" }],\r\n        });\r\n      }\r\n  \r\n      setLoading(false);\r\n    } catch (err: any) {\r\n      setLoading(false);\r\n  \r\n      console.error(\"Error during login:\", err);\r\n  \r\n      Toast.show({\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n        text1: \"Unexpected Error\",\r\n        text2: err?.message || \"Please try again later.\",\r\n      });\r\n  \r\n      setError(\"Unexpected error. Please try again.\");\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      contentContainerStyle={styles.contentContainer}\r\n    >\r\n      {!loading && (\r\n        <View>\r\n          {/* Welcome Text */}\r\n          <View style={styles.welcomeContainer}>\r\n            <Text style={styles.welcomeText}>Welcome!</Text>\r\n            <Text style={styles.welcomeText2}>Sign in to your account</Text>\r\n          </View>\r\n          {/* Form (Email, Password) */}\r\n          <View style={styles.formContainer}>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Enter your email\"\r\n              value={Email}\r\n              onChangeText={setEmail}\r\n            />\r\n\r\n            <View style={styles.passwordContainer}>\r\n              <TextInput\r\n                style={styles.input}\r\n                placeholder=\"Enter your password\"\r\n                secureTextEntry={!showPassword}\r\n                value={Password}\r\n                onChangeText={setPassword}\r\n              />\r\n              <TouchableOpacity\r\n                onPress={() => setShowPassword(!showPassword)}\r\n                style={styles.eyeIcon}\r\n              >\r\n                <Ionicons\r\n                  name={showPassword ? \"eye-off\" : \"eye\"}\r\n                  size={24}\r\n                  color=\"gray\"\r\n                />\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            {/* Error Message */}\r\n            {error && <Text style={styles.errorText}>{error}</Text>}\r\n\r\n            {/* Login Button */}\r\n            <TouchableOpacity onPress={handleLogin} style={styles.button}>\r\n              <Text style={styles.buttonText}>Login</Text>\r\n            </TouchableOpacity>\r\n\r\n            {/* Or login with text */}\r\n            {/* <Text style={styles.orLoginText}>or login with:</Text> */}\r\n\r\n            {/* Social Media Logos (Apple and Google) */}\r\n            {/* <View style={styles.socialLoginContainer}>\r\n          <TouchableOpacity style={[styles.socialButton, styles.appleButton]}>\r\n            <Ionicons name=\"logo-apple\" size={24} color=\"white\" />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={[styles.socialButton, styles.googleButton]}>\r\n            <Ionicons name=\"logo-google\" size={24} color=\"white\" />\r\n          </TouchableOpacity>\r\n        </View> */}\r\n\r\n            {/* Don't have an account */}\r\n            <View style={styles.signupContainer}>\r\n              <Text>Have a invite code? </Text>\r\n              <TouchableOpacity\r\n                onPress={() => navigation.navigate(\"InviteCode\")}\r\n              >\r\n                <Text style={styles.link}>Sign Up</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      )}\r\n      {loading && (\r\n        <ActivityIndicator\r\n          style={{ flex: 1, justifyContent: \"center\", alignContent: \"center\" }}\r\n        />\r\n      )}\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\n// Styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 20,\r\n    justifyContent: \"center\",\r\n    backgroundColor: \"#FDFDFF\", // Off-White background\r\n  },\r\n  contentContainer: {\r\n    flexGrow: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingBottom: 20,\r\n\r\n    fontSize: Platform.OS === \"web\" ? 16 : 10,\r\n    // flexDirection: Platform.OS === \"web\" ? \"row\" : \"column\", // Row for web, column for mobile\r\n    flexDirection: \"column\", // Row for web, column for mobile\r\n  },\r\n  welcomeContainer: {\r\n    width: Platform.OS === \"web\" ? \"40%\" : \"100%\", // Make \"Welcome back\" take up 40% width on web, full width on mobile\r\n    marginBottom: 20,\r\n    textAlign: Platform.OS === \"web\" ? \"left\" : \"center\", // Left aligned for web, center for mobile\r\n  },\r\n  welcomeText: {\r\n    fontSize: Platform.OS === \"web\" ? 30 : 40,\r\n    fontWeight: \"bold\",\r\n    color: \"#393D3F\", // Charcoal Grey\r\n    marginBottom: 0,\r\n  },\r\n  welcomeText2: {\r\n    fontSize: Platform.OS === \"web\" ? 30 : 24,\r\n    color: \"#393D3F\", // Charcoal Grey\r\n    marginBottom: 0,\r\n  },\r\n  formContainer: {\r\n    width: Platform.OS === \"web\" ? \"100%\" : \"100%\", // Form takes 60% width on web, full width on mobile\r\n    alignItems: \"center\",\r\n\r\n    marginTop: Platform.OS === \"web\" ? \"5%\" : \"5%\", // Add space on top for web\r\n  },\r\n  input: {\r\n    width: \"100%\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    marginBottom: 15,\r\n    borderRadius: 5,\r\n  },\r\n  passwordContainer: {\r\n    width: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n  eyeIcon: {\r\n    position: \"absolute\",\r\n    right: 20,\r\n    top: Platform.OS === \"web\" ? 15 : 20, // Adjust position for web\r\n  },\r\n  button: {\r\n    backgroundColor: \"#4A90E2\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderRadius: 5, // Rounded corners\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n    marginBottom: 30,\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  socialLoginContainer: {\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    gap: 10,\r\n  },\r\n  socialButton: {\r\n    width: \"15%\",\r\n    padding: Platform.OS === \"web\" ? 10 : 15, // Larger padding for mobile\r\n    borderRadius: 5,\r\n    backgroundColor: \"#4A90E2\", // Light Blue background for social buttons\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  appleButton: {\r\n    backgroundColor: \"#000000\", // Black for Apple button\r\n  },\r\n  googleButton: {\r\n    backgroundColor: \"#DB4437\", // Red for Google button\r\n  },\r\n  orLoginText: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    color: \"#393D3F\", // Charcoal Grey\r\n    marginVertical: 10, // Space between the buttons and text\r\n  },\r\n\r\n  errorText: {\r\n    color: \"red\",\r\n    marginBottom: 10,\r\n  },\r\n  link: {\r\n    color: \"#007bff\", // Blue\r\n    textDecorationLine: \"underline\",\r\n  },\r\n  signupContainer: {\r\n    flexDirection: \"row\",\r\n    // marginTop: 100,\r\n  },\r\n});\r\n\r\nexport default LoginScreen;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Alert,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { searchServer } from \"../../api/server/serverApi\";\r\nimport { ApiError, ApiResponse } from \"../../api/utils/apiResponse\";\r\nimport { SearchServerResponse } from \"../../api/server/server\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport { KeyboardAvoidingView } from \"react-native\";\r\nimport { SearchedServerScreen } from \"./SearchedServerScreen\";\r\nimport { useSignup } from \"../Signup/SignUpContext\";\r\n\r\nconst InviteCodeScreen = ({ navigation }: { navigation: any }) => {\r\n  const [inviteCode, setInviteCode] = useState<string>(\"\"); // Store invite code input\r\n  const { updateFormData } = useSignup();\r\n  const handleSubmit = async () => {\r\n    try {\r\n      updateFormData(\"inviteLink\", inviteCode);\r\n      if (inviteCode.length !== 8) {\r\n        Alert.alert(\"Error\", \"Invite code must be 8 characters long.\");\r\n      } else {\r\n        const res = await searchServer(inviteCode);\r\n        if (res instanceof ApiError) {\r\n          Toast.show({\r\n            type: \"error\",\r\n            text1: res.message,\r\n            position: \"bottom\",\r\n            swipeable: false,\r\n            bottomOffset: 40,\r\n          });\r\n        } else {\r\n          console.log(res.data.data.id);\r\n          // navigation.navigate(\"SignUp\");\r\n          navigation.navigate(\"SearchedServer\", {\r\n            searchServer: res.data.data,\r\n          });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      Toast.show({\r\n        type: \"error\",\r\n        text1: \"Something Went Wrong\",\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigation.goBack(); // Go back to the previous screen\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n    >\r\n      {/* Back Button */}\r\n      <TouchableOpacity style={styles.backButton} onPress={handleBack}>\r\n        <Ionicons name=\"arrow-back\" size={29} color=\"black\" />\r\n      </TouchableOpacity>\r\n      {/* Invite Code Input Form */}\r\n      <View style={styles.contentContainer}>\r\n        <Text style={styles.title}>Enter Invite Code</Text>\r\n\r\n        <TextInput\r\n          autoFocus={true}\r\n          style={styles.input}\r\n          placeholder=\"Enter 8-character invite code\"\r\n          value={inviteCode}\r\n          onChangeText={setInviteCode}\r\n          maxLength={8}\r\n          keyboardType=\"default\" // You can also use numeric if invite code is only numbers\r\n        />\r\n\r\n        <TouchableOpacity style={styles.submitButton} onPress={handleSubmit}>\r\n          <Text style={styles.submitButtonText}>Search</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#FDFDFF\", // Off-White background\r\n    padding: 20,\r\n  },\r\n  backButton: {\r\n    padding: 10,\r\n    marginTop: 30, // Adjust for iOS devices\r\n  },\r\n  contentContainer: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 50,\r\n    flexGrow: 1,\r\n  },\r\n  title: {\r\n    fontSize: Platform.OS === \"web\" ? 30 : 24,\r\n    fontWeight: \"bold\",\r\n    color: \"#393D3F\", // Charcoal Grey\r\n    marginBottom: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  input: {\r\n    width: \"80%\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    marginBottom: 5,\r\n    borderRadius: 5,\r\n    fontSize: 16,\r\n  },\r\n  submitButton: {\r\n    backgroundColor: \"#4A90E2\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderRadius: 5,\r\n    width: \"80%\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n    marginBottom: 30,\r\n  },\r\n  submitButtonText: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default InviteCodeScreen;\r\n","import { useNavigation } from \"@react-navigation/native\";\r\nimport { SearchServerResponse } from \"../../api/server/server\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  SafeAreaView,\r\n  Button,\r\n  Image,\r\n} from \"react-native\";\r\n\r\ninterface SearchedServerScreenProps {\r\n  searchedServer: SearchServerResponse;\r\n}\r\n\r\nexport const SearchedServerScreen = ({ navigation }: { navigation: any }) => {\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <View style={styles.centeredView}>\r\n        <View style={styles.imgContainer}>\r\n          <Image\r\n            source={require(\"../../../assets/wpslogo.png\")}\r\n            style={styles.image}\r\n          />\r\n        </View>\r\n        <Text style={styles.serverTitle}>Fairy Tail</Text>\r\n        <Text style={styles.inviteLink}>#11111111</Text>\r\n      </View>\r\n      <View style={styles.buttonContainer}>\r\n        <TouchableOpacity\r\n          style={styles.filledButton}\r\n          onPress={() => {\r\n            navigation.navigate(\"Signup1\");\r\n          }}\r\n        >\r\n          <Text style={styles.buttonText}>Create an Account</Text>\r\n        </TouchableOpacity>\r\n\r\n        <Button\r\n          title=\"Cancel\"\r\n          onPress={() => {\r\n            navigation.goBack();\r\n          }}\r\n        />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  serverTitle: {\r\n    fontSize: 40,\r\n    fontWeight: \"bold\",\r\n    marginTop: 10, // Add a small margin to control space\r\n  },\r\n  container: {\r\n    flex: 1, // Adjusted to 1 to take full height, not 2\r\n  },\r\n  centeredView: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n  },\r\n  inviteLink: {\r\n    fontSize: 20,\r\n    color: \"#808080\",\r\n  },\r\n  imgContainer: {\r\n    flex: 0.5,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  image: {\r\n    width: 200,\r\n    height: 200,\r\n    borderRadius: 100,\r\n  },\r\n  buttonContainer: {\r\n    width: \"100%\",\r\n    paddingHorizontal: 20,\r\n    marginTop: 30,\r\n  },\r\n  filledButton: {\r\n    backgroundColor: \"#111\", // Filled button color\r\n    paddingVertical: 15,\r\n    borderRadius: 5,\r\n    marginBottom: 15,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  buttonText: {\r\n    color: \"#fff\", // White text for filled button\r\n    fontSize: 16,\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Platform,\r\n  Dimensions,\r\n  Button,\r\n  KeyboardAvoidingView,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { useSignup } from \"./SignUpContext\";\r\nimport Toast from \"react-native-toast-message\";\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nconst isLandscape = width > height;\r\n\r\nexport const SignupFirstScreen = ({ navigation }: { navigation: any }) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const { updateFormData } = useSignup();\r\n\r\n  const handleNext = () => {\r\n    if (!firstName || !lastName) {\r\n      Toast.show({\r\n        text1: \"Please fill all fields to continue.\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    updateFormData(\"firstName\", firstName);\r\n    updateFormData(\"lastName\", lastName);\r\n    navigation.navigate(\"Signup2\");\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n    >\r\n      <SafeAreaView>\r\n        {/* Back Button */}\r\n        {/* <TouchableOpacity style={styles.backButton} onPress={handleBack}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"black\" />\r\n        </TouchableOpacity> */}\r\n        {/* Platform-specific Layout */}\r\n        <View\r\n          style={[\r\n            styles.rowContainer,\r\n            { flexDirection: Platform.OS === \"web\" ? \"row\" : \"column\" },\r\n          ]}\r\n        >\r\n          {/* Left Side: Create Account Text */}\r\n          <View style={styles.leftSide}>\r\n            <Text style={styles.serverName}>Fairy Tail</Text>\r\n\r\n            <Text style={styles.subTitle}>\r\n              Sign up to create your account and start your journey!\r\n            </Text>\r\n          </View>\r\n\r\n          {/* Right Side: Signup Form */}\r\n          <View style={styles.formContainer}>\r\n            {/* First Name Input */}\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"First Name\"\r\n              value={firstName}\r\n              onChangeText={setFirstName}\r\n            />\r\n\r\n            {/* First Name Input */}\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Last Name\"\r\n              value={lastName}\r\n              onChangeText={setLastName}\r\n            />\r\n\r\n            {/* Signup Button */}\r\n            <TouchableOpacity onPress={handleNext} style={styles.button}>\r\n              <Text style={styles.buttonText}>Continue</Text>\r\n            </TouchableOpacity>\r\n\r\n            {/* back to previous screen */}\r\n            <TouchableOpacity\r\n              onPress={() => {\r\n                navigation.goBack();\r\n              }}\r\n              style={styles.secondaryButton}\r\n            >\r\n              <Text style={styles.secondaryButtonText}>Cancel</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </SafeAreaView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\n// Styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n    backgroundColor: \"#FDFDFF\", // Off-White background\r\n    marginTop: -140,\r\n  },\r\n  rowContainer: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    fontSize: Platform.OS === \"web\" ? 30 : 24, // Larger font size for web\r\n    // Additional flex properties for responsive layout\r\n    maxWidth: 1200, // Max width for the content container\r\n  },\r\n  leftSide: {\r\n    marginRight: Platform.OS === \"web\" ? 0 : 0, // Margin for spacing on the web version\r\n    alignItems: \"flex-start\", // Align text to the left on web\r\n    width: Platform.OS === \"web\" ? \"30%\" : \"100%\",\r\n    marginBottom: 60,\r\n  },\r\n  backButton: {\r\n    padding: 10,\r\n    marginTop: 30, // Adjust for iOS devices\r\n  },\r\n  formContainer: {\r\n    width: Platform.OS === \"web\" ? \"60%\" : \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  //   title: {\r\n  //     fontSize: 24,\r\n  //     fontWeight: \"bold\",\r\n  //     marginBottom: 10,\r\n  //     color: \"#393D3F\", // Charcoal Grey\r\n  //     textAlign: Platform.OS === \"web\" ? \"left\" : \"center\", // Align to left for web\r\n  //   },\r\n\r\n  serverName: {\r\n    fontSize: 40,\r\n    fontWeight: \"bold\",\r\n    marginBottom: 0,\r\n    color: \"#393D3F\", // Charcoal Grey\r\n    textAlign: Platform.OS === \"web\" ? \"left\" : \"center\", // Align to left for web\r\n  },\r\n\r\n  subTitle: {\r\n    fontSize: 20,\r\n    marginBottom: 10,\r\n    color: \"#393D3F\", // Charcoal Grey\r\n    // textAlign: Platform.OS === \"web\" ? \"left\" : \"center\", // Align to left for web\r\n  },\r\n\r\n  input: {\r\n    width: \"100%\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderWidth: 2,\r\n    borderColor: \"#ccc\",\r\n    marginBottom: 15,\r\n    borderRadius: 5,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#4A90E2\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderRadius: 5,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n    marginBottom: 5,\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n  },\r\n\r\n  secondaryButton: {\r\n    // Larger padding for mobile\r\n    borderRadius: 5,\r\n    padding: Platform.OS === \"web\" ? 15 : 20,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n\r\n    marginBottom: 20,\r\n  },\r\n  secondaryButtonText: {\r\n    color: \"#4A90E2\",\r\n    fontSize: 16,\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    marginBottom: 10,\r\n    textAlign: \"center\",\r\n  },\r\n  footer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  link: {\r\n    color: \"#007bff\",\r\n    textDecorationLine: \"underline\",\r\n  },\r\n});\r\n\r\nexport default SignupFirstScreen;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Platform,\r\n  Dimensions,\r\n  Button,\r\n  KeyboardAvoidingView,\r\n  SafeAreaView,\r\n  Modal,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { useSignup } from \"./SignUpContext\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport { sendOTP, verifyOTP } from \"../../api/auth/authApi\";\r\nimport { ApiError } from \"../../api/utils/apiResponse\";\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nconst isLandscape = width > height;\r\n\r\nexport const SignupPhoneScreen = ({ navigation }: { navigation: any }) => {\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [verification, setVerification] = useState(\"\");\r\n  const [phoneVerificationModelVisible, setPhoneVerificationModelVisible] =\r\n    useState(false);\r\n\r\n  // using signup context\r\n  const { updateFormData } = useSignup();\r\n\r\n  function validatePhoneNumber(phoneNumer: string): boolean {\r\n    if (!phoneNumer.startsWith(\"+61\")) {\r\n      phoneNumer = \"+61\" + phoneNumer;\r\n    }\r\n\r\n    if (phoneNumer.length != 12) return false;\r\n    const newNum = Number.parseInt(phoneNumer.slice(0));\r\n    console.log(newNum);\r\n    if (!isNaN(newNum)) return true;\r\n    else return false;\r\n  }\r\n\r\n  const handleNext = () => {\r\n    updateFormData(\"phoneNumber\", \"+61\" + phone);\r\n    setPhoneVerificationModelVisible(false);\r\n    navigation.navigate(\"SignupPassword\");\r\n  };\r\n\r\n  const handleSendVerification = async () => {\r\n    console.log(\"Pressed\");\r\n    if (!phone) {\r\n      Toast.show({\r\n        text1: \"Enter your phone number first\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!validatePhoneNumber(phone)) {\r\n      Toast.show({\r\n        text1: \"Phone Number is Invalid.\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    await sendVerification(phone);\r\n  };\r\n\r\n  const sendVerification = async (phoneNumber: string) => {\r\n    try {\r\n      if (!phoneNumber.startsWith(\"+61\")) {\r\n        phoneNumber = \"+61\" + phoneNumber;\r\n      }\r\n      console.log(phoneNumber);\r\n      const res = await sendOTP({ phoneNumber: phoneNumber });\r\n      if (res.success) {\r\n        Toast.show({\r\n          text1: \"Verification Code Sent.\",\r\n          type: \"success\",\r\n          position: \"bottom\",\r\n        });\r\n        setPhoneVerificationModelVisible(true);\r\n      } else if (res instanceof ApiError) {\r\n        console.log(res.message);\r\n        Toast.show({\r\n          text1: res.message,\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    } catch (err) {\r\n      Toast.show({\r\n        text1: \"Something went wrong\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOtpVerification = async (phoneNumber: string) => {\r\n    try {\r\n      if (!phoneNumber.startsWith(\"+61\")) {\r\n        phoneNumber = \"+61\" + phoneNumber;\r\n      }\r\n\r\n      const res = await verifyOTP({\r\n        code: verification,\r\n        phoneNumber: phoneNumber,\r\n      });\r\n      if (res.success) {\r\n        handleNext();\r\n        Toast.show({\r\n          text1: res.message,\r\n          type: \"success\",\r\n          position: \"bottom\",\r\n        });\r\n      } else if (res instanceof ApiError) {\r\n        Alert.alert(res.message);\r\n\r\n        // Toast.show({\r\n        //   text1: res.message,\r\n        //   type: \"error\",\r\n        //   position: \"bottom\",\r\n        // });\r\n      }\r\n    } catch (err) {\r\n      Toast.show({\r\n        text1: \"Something went wrong\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n      >\r\n        <SafeAreaView>\r\n          <View\r\n            style={[\r\n              styles.rowContainer,\r\n              { flexDirection: Platform.OS === \"web\" ? \"row\" : \"column\" },\r\n            ]}\r\n          >\r\n            {/* Right Side: Signup Form */}\r\n            <View style={styles.formContainer}>\r\n              <View style={styles.inputContainer}>\r\n                <TextInput\r\n                  style={styles.countryCode}\r\n                  value={\"+61\"}\r\n                  disabled={true}\r\n                  focusable={false}\r\n                  editable={false}\r\n                />\r\n\r\n                <TextInput\r\n                  maxLength={9}\r\n                  autoFocus={true}\r\n                  style={styles.input}\r\n                  placeholder=\"Phone Number\"\r\n                  value={phone}\r\n                  onChangeText={setPhone}\r\n                />\r\n              </View>\r\n\r\n              {/* Open Verification Modal Button */}\r\n              <TouchableOpacity\r\n                onPress={() => handleSendVerification()}\r\n                style={styles.button}\r\n              >\r\n                <Text style={styles.buttonText}>Continue</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.footer}>\r\n                <Text>Already have an account? </Text>\r\n                <TouchableOpacity onPress={() => navigation.navigate(\"Login\")}>\r\n                  <Text style={styles.link}>Login</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n              {/* back to previous screen */}\r\n            </View>\r\n          </View>\r\n        </SafeAreaView>\r\n      </KeyboardAvoidingView>\r\n\r\n      <Modal\r\n        presentationStyle=\"pageSheet\"\r\n        visible={phoneVerificationModelVisible}\r\n        animationType=\"slide\"\r\n        onRequestClose={() => {\r\n          setPhoneVerificationModelVisible(!phoneVerificationModelVisible);\r\n        }}\r\n      >\r\n        <View style={styles.container}>\r\n          <View style={styles.formContainer}>\r\n            <Text style={styles.verificationText}>\r\n              A 6 digit verification code has been sent to your phone.\r\n            </Text>\r\n            <TextInput\r\n              maxLength={6}\r\n              autoFocus={true}\r\n              style={styles.verifyInput}\r\n              placeholder=\"6 Digit Code\"\r\n              value={verification}\r\n              onChangeText={setVerification}\r\n            />\r\n\r\n            <TouchableOpacity\r\n              onPress={() => handleOtpVerification(phone)}\r\n              style={styles.button}\r\n            >\r\n              <Text style={styles.buttonText}>Verify </Text>\r\n            </TouchableOpacity>\r\n\r\n            <View style={styles.footer}>\r\n              <Text>Didn't receive code? </Text>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  // resend button\r\n                }}\r\n              >\r\n                <Text style={styles.link}>Resend</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\n// Styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n    backgroundColor: \"#FDFDFF\", // Off-White background\r\n    marginTop: -140,\r\n  },\r\n  rowContainer: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    fontSize: Platform.OS === \"web\" ? 30 : 24, // Larger font size for web\r\n    // Additional flex properties for responsive layout\r\n    maxWidth: 1200, // Max width for the content container\r\n  },\r\n  leftSide: {\r\n    marginRight: Platform.OS === \"web\" ? 0 : 0, // Margin for spacing on the web version\r\n    alignItems: \"flex-start\", // Align text to the left on web\r\n    width: Platform.OS === \"web\" ? \"30%\" : \"100%\",\r\n    marginBottom: 60,\r\n  },\r\n\r\n  formContainer: {\r\n    width: Platform.OS === \"web\" ? \"60%\" : \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  inputContainer: {\r\n    alignItems: \"center\",\r\n    marginBottom: 15,\r\n    flexDirection: \"row\",\r\n  },\r\n  countryCode: {\r\n    flex: 1,\r\n    fontSize: 16,\r\n    marginBottom: 15,\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderWidth: 2,\r\n    borderColor: \"#ccc\",\r\n    marginRight: 10,\r\n    borderRadius: 5,\r\n  },\r\n\r\n  input: {\r\n    flex: 7,\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderWidth: 2,\r\n    borderColor: \"#ccc\",\r\n    marginBottom: 15,\r\n    borderRadius: 5,\r\n  },\r\n  verifyInput: {\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: Platform.OS === \"web\" ? 15 : 25, // Larger padding for mobile\r\n    borderWidth: 2,\r\n    borderColor: \"#ccc\",\r\n    marginBottom: 15,\r\n    borderRadius: 5,\r\n  },\r\n  headingText: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    color: \"#ff\",\r\n    textAlign: \"left\",\r\n    marginBottom: 10,\r\n  },\r\n  verificationText: {\r\n    fontSize: 16,\r\n    color: \"#888888\",\r\n    textAlign: \"left\",\r\n    marginTop: 5,\r\n    marginBottom: 10,\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#4A90E2\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderRadius: 5,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n    marginBottom: 5,\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n  },\r\n\r\n  secondaryButton: {\r\n    // Larger padding for mobile\r\n    borderRadius: 5,\r\n    padding: Platform.OS === \"web\" ? 15 : 20,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n\r\n    marginBottom: 20,\r\n  },\r\n  secondaryButtonText: {\r\n    color: \"#4A90E2\",\r\n    fontSize: 20,\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    marginBottom: 10,\r\n    textAlign: \"center\",\r\n  },\r\n  footer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  link: {\r\n    color: \"#007bff\",\r\n    textDecorationLine: \"underline\",\r\n  },\r\n});\r\n\r\nexport default SignupPhoneScreen;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Platform,\r\n  Dimensions,\r\n  Button,\r\n  KeyboardAvoidingView,\r\n  SafeAreaView,\r\n  Alert,\r\n} from \"react-native\";\r\nimport { useSignup } from \"./SignUpContext\";\r\nimport { registerUser } from \"../../api/auth/authApi\";\r\nimport { RegisterRequest } from \"../../api/auth/auth\";\r\nimport { AxiosError } from \"axios\";\r\nimport { ApiError } from \"../../api/utils/apiResponse\";\r\nimport Toast from \"react-native-toast-message\";\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nconst isLandscape = width > height;\r\n\r\nexport const SignupPasswordScreen = ({ navigation }: { navigation: any }) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const { updateFormData, formData } = useSignup();\r\n\r\n  const handleSignup = async () => {\r\n    // update the password\r\n\r\n    try {\r\n      if (password !== confirmPassword) {\r\n        Toast.show({\r\n          text1: \"Both passwod must be same\",\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      updateFormData(\"password\", password);\r\n      const response = await registerUser(formData as RegisterRequest);\r\n\r\n      if (response instanceof ApiError || response instanceof AxiosError) {\r\n        Alert.alert(response.message);\r\n        // Toast.show({\r\n        //   text1: \"Error\",\r\n        //   text2: response.message,\r\n\r\n        //   type: \"error\",\r\n        //   position: \"bottom\",\r\n        // });\r\n        console.log(response);\r\n      } else {\r\n        navigation.navigate(\"Login\");\r\n        Toast.show({\r\n          text1: response.message,\r\n          type: \"success\",\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n\r\n      // Redirect user after successful signup (you can adjust the flow)\r\n    } catch (err) {\r\n      console.error(\"Signup error:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n    >\r\n      <SafeAreaView>\r\n        {/* Back Button */}\r\n        {/* <TouchableOpacity style={styles.backButton} onPress={handleBack}>\r\n          <Ionicons name=\"arrow-back\" size={24} color=\"black\" />\r\n        </TouchableOpacity> */}\r\n        {/* Platform-specific Layout */}\r\n        <View\r\n          style={[\r\n            styles.rowContainer,\r\n            { flexDirection: Platform.OS === \"web\" ? \"row\" : \"column\" },\r\n          ]}\r\n        >\r\n          {/* Right Side: Signup Form */}\r\n          <View style={styles.formContainer}>\r\n            {/* Password Input */}\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChangeText={setPassword}\r\n              secureTextEntry\r\n            />\r\n\r\n            {/* Confirm Password Input */}\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChangeText={setConfirmPassword}\r\n              secureTextEntry\r\n            />\r\n            {/* Next Button */}\r\n            <TouchableOpacity onPress={handleSignup} style={styles.button}>\r\n              <Text style={styles.buttonText}>Continue</Text>\r\n            </TouchableOpacity>\r\n\r\n            <View style={styles.footer}>\r\n              <Text>Already have an account? </Text>\r\n              <TouchableOpacity onPress={handleSignup}>\r\n                <Text style={styles.link}>Login</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            {/* back to previous screen */}\r\n          </View>\r\n        </View>\r\n      </SafeAreaView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\n// Styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n    backgroundColor: \"#FDFDFF\", // Off-White background\r\n    marginTop: -140,\r\n  },\r\n  rowContainer: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    fontSize: Platform.OS === \"web\" ? 30 : 24, // Larger font size for web\r\n    // Additional flex properties for responsive layout\r\n    maxWidth: 1200, // Max width for the content container\r\n  },\r\n  leftSide: {\r\n    marginRight: Platform.OS === \"web\" ? 0 : 0, // Margin for spacing on the web version\r\n    alignItems: \"flex-start\", // Align text to the left on web\r\n    width: Platform.OS === \"web\" ? \"30%\" : \"100%\",\r\n    marginBottom: 60,\r\n  },\r\n  backButton: {\r\n    padding: 10,\r\n    marginTop: 30, // Adjust for iOS devices\r\n  },\r\n  formContainer: {\r\n    width: Platform.OS === \"web\" ? \"60%\" : \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    width: \"100%\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderWidth: 2,\r\n    borderColor: \"#ccc\",\r\n    marginBottom: 15,\r\n    borderRadius: 5,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#4A90E2\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderRadius: 5,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n    marginBottom: 5,\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n  },\r\n\r\n  secondaryButton: {\r\n    // Larger padding for mobile\r\n    borderRadius: 5,\r\n    padding: Platform.OS === \"web\" ? 15 : 20,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n\r\n    marginBottom: 20,\r\n  },\r\n  secondaryButtonText: {\r\n    color: \"#4A90E2\",\r\n    fontSize: 20,\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    marginBottom: 10,\r\n    textAlign: \"center\",\r\n  },\r\n  footer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  link: {\r\n    color: \"#007bff\",\r\n    textDecorationLine: \"underline\",\r\n  },\r\n});\r\n\r\nexport default SignupPasswordScreen;\r\n","export type ChannelResponse = {\r\n  id: string;\r\n  name: string;\r\n  highestRoleToAccessChannel: string;\r\n};\r\n\r\nexport interface createChannelResponse {\r\n  serverId: string;\r\n  channelName: string;\r\n}\r\n\r\nexport interface userJoinedServerResponse {\r\n  serverId: string;\r\n  name: string;\r\n}\r\n\r\nexport interface SearchServerResponse {\r\n  id: string;\r\n  name: string;\r\n  idVerificationRequired: string;\r\n  ownerId: string;\r\n}\r\n\r\nexport interface joinAServerResponse {\r\n  id: string;\r\n  name: string;\r\n  idVerificationRequired: boolean;\r\n  inviteLink: string;\r\n}\r\n\r\nexport enum Role {\r\n  ADMIN = \"admin\",\r\n  EMPLOYEE = \"employee\",\r\n  MANAGER = \"manager\",\r\n}\r\n\r\nexport interface ChannelDetailsResponse {\r\n  id: string;\r\n  name: string;\r\n  highestRoleToAccessChannel: Role;\r\n  serverId: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n}\r\n\r\nexport interface EmployeeDetails {\r\n  id: string;\r\n  serverId: string;\r\n  createdAt: Date;\r\n  updatedAt: Date;\r\n  Employee: Employee;\r\n}\r\n\r\nexport interface EmployeeStatus {\r\n  Active: \"Active\";\r\n  Inactive: \"Inactive\";\r\n}\r\n\r\nexport interface Employee {\r\n  id: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phoneNumber: string;\r\n  employmentStatus: EmployeeStatus;\r\n  profileImage?: string | null;\r\n  role: Role;\r\n}\r\nexport interface EmployeeDetailsPayload {\r\n  id: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  phone: string;\r\n  email: string;\r\n  role: Role;\r\n  employmentStatus: EmployeeStatus;\r\n}\r\n\r\nexport interface getAllChannelForCurrentServerResponse\r\n  extends ChannelResponse {}\r\nexport interface createChannelResponse extends ChannelResponse {}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Dimensions,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Modal,\r\n  Alert,\r\n  Image,\r\n} from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { fetchAllUsers } from \"../../../api/server/serverApi\";\r\nimport { ApiError, ApiResponse } from \"../../../api/utils/apiResponse\";\r\nimport { AxiosError } from \"axios\";\r\nimport { MaterialIcons } from \"@expo/vector-icons\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport { EmployeeDetails } from \"../../../api/server/server\";\r\nimport { kickEmployee } from \"../../../api/server/serverApi\";\r\nimport {\r\n  partialregisterEmployee,\r\n  updateEmployeeDetails,\r\n} from \"../../../api/server/serverApi\";\r\nimport { getLoggedInUserServer } from \"../../../api/server/serverApi\";\r\nimport { Role, EmployeeStatus } from \"../../../api/server/server\";\r\nimport { getToken, Plat, saveToken } from \"../../../api/auth/token\";\r\n\r\ninterface Employee {\r\n  id: string;\r\n  firstName: string;\r\n  lastName: string;\r\n  email: string;\r\n  phone: string;\r\n  role: string;\r\n\r\n  status: string;\r\n  profileImage?: string;\r\n  joinedDate?: string;\r\n  updatedDate?: string;\r\n}\r\n\r\nconst formFields: (keyof Employee)[] = [\r\n  \"id\",\r\n  \"firstName\",\r\n  \"lastName\",\r\n  \"email\",\r\n  \"phone\",\r\n  \"role\",\r\n\r\n  \"status\",\r\n];\r\n\r\nconst roles = [\"Choose Role\", \"Admin\", \"Manager\", \"Employee\"];\r\nconst statuses = [\"Choose Employment Status\", \"Active\", \"Inactive\"];\r\n\r\n// Role mapper (string → Role enum)\r\nconst roleMapper: Record<\"Admin\" | \"Manager\" | \"Employee\", Role> = {\r\n  Admin: Role.ADMIN,\r\n  Manager: Role.MANAGER,\r\n  Employee: Role.EMPLOYEE,\r\n};\r\n\r\n// Status mapper (string → EmployeeStatus type)\r\nconst statusMapper: Record<\"Active\" | \"Inactive\", EmployeeStatus> = {\r\n  Active: {\r\n    Active: \"Active\",\r\n    Inactive: \"Inactive\",\r\n  },\r\n  Inactive: {\r\n    Inactive: \"Inactive\",\r\n    Active: \"Active\",\r\n  },\r\n};\r\n\r\nconst EmployeeManagementScreen = () => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [selectedTab, setSelectedTab] = useState(\"EmployeeManagement\");\r\n  const [screenWidth, setScreenWidth] = useState(\r\n    Dimensions.get(\"window\").width\r\n  );\r\n  const [search, setSearch] = useState(\"\");\r\n  const [employees, setEmployees] = useState<Employee[]>([]);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [editingEmployee, setEditingEmployee] = useState<Employee | null>(null);\r\n  const [formData, setFormData] = useState<Employee>({\r\n    id: \"\",\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    role: \"\",\r\n\r\n    status: \"\",\r\n  });\r\n  const [errors, setErrors] = useState<{ [K in keyof Employee]?: string }>({});\r\n  const [sortBy, setSortBy] = useState<keyof Employee | \"\">(\"\");\r\n  const [sortOrder, setSortOrder] = useState<\"asc\" | \"desc\">(\"asc\");\r\n\r\n  const isMobile = screenWidth <= 768;\r\n  const [employeesArr, setEmployeesArr] = useState<EmployeeDetails[]>([]);\r\n  const [serverId, setServerId] = useState<string | null>(null);\r\n\r\n  const handleFetchUsers = async () => {\r\n    try {\r\n      const res = await fetchAllUsers();\r\n\r\n      if (res instanceof ApiError || res instanceof AxiosError) {\r\n        console.log(res.message);\r\n        Toast.show({\r\n          text1: \"Error\",\r\n          text2: res.message,\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n        });\r\n      } else {\r\n        const employeeList: Employee[] = res.data.map(\r\n          (emp: EmployeeDetails) => {\r\n            return {\r\n              id: emp.Employee.id,\r\n              //   firstNamename: `${emp.Employee.firstName} ${emp.Employee.lastName}`,\r\n              firstName: emp.Employee.firstName,\r\n              lastName: emp.Employee.lastName,\r\n              email: emp.Employee.email,\r\n              phone: emp.Employee.phoneNumber,\r\n              role:\r\n                emp.Employee.role.charAt(0).toUpperCase() +\r\n                emp.Employee.role.slice(1),\r\n\r\n              status:\r\n                typeof emp.Employee.employmentStatus === \"string\"\r\n                  ? emp.Employee.employmentStatus\r\n                  : Object.keys(emp.Employee.employmentStatus)[0],\r\n              profileImage: emp.Employee.profileImage ?? undefined,\r\n              joinedDate: emp.createdAt\r\n                ? new Date(emp.createdAt).toLocaleDateString()\r\n                : \"Unknown\",\r\n              updatedDate: emp.updatedAt\r\n                ? new Date(emp.updatedAt).toLocaleDateString()\r\n                : \"Unknown\",\r\n            };\r\n          }\r\n        );\r\n\r\n        //   console.log(\"✅ Mapped Employees:\", employeeList);\r\n        setEmployees(employeeList);\r\n\r\n        Toast.show({\r\n          text1: \"Successfully fetched all employees\",\r\n          type: \"success\",\r\n          position: \"bottom\",\r\n          autoHide: true,\r\n          swipeable: true,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.log(\"Unexpected error during fetchAllUsers()\");\r\n    }\r\n  };\r\n\r\n  const fetchServerId = async () => {\r\n    const token = await getToken(\"accessToken\", Plat.WEB);\r\n\r\n    console.log(\"Acess token:\", token);\r\n    console.log(\"--------------------------------------------------:\", token);\r\n    try {\r\n      const res = await getLoggedInUserServer(Plat.WEB);\r\n      console.log(\"🧪 getLoggedInUserServer response:\", res);\r\n\r\n      if (res instanceof ApiError) {\r\n        Toast.show({\r\n          type: \"error\",\r\n          text1: \"Server ID Error\",\r\n          text2: res.message,\r\n        });\r\n      } else if (\"statusCode\" in res && \"data\" in res && res.data.serverId) {\r\n        console.log(\"✅ Server ID found:\", res.data.serverId);\r\n        setServerId(res.data.serverId);\r\n        saveToken(\"serverId\", res.data.serverId, Plat.WEB);\r\n      } else {\r\n        console.warn(\"⚠️ Server ID not found in response data\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"❌ Unexpected error in fetchServerId:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleFetchUsers();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const updateWidth = () => setScreenWidth(Dimensions.get(\"window\").width);\r\n    const subscription = Dimensions.addEventListener(\"change\", updateWidth);\r\n    return () => subscription?.remove();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchServerId();\r\n  }, []);\r\n\r\n  const handleSort = (field: keyof Employee) => {\r\n    if (sortBy === field) {\r\n      setSortOrder((prev) => (prev === \"asc\" ? \"desc\" : \"asc\"));\r\n    } else {\r\n      setSortBy(field);\r\n      setSortOrder(\"asc\");\r\n    }\r\n  };\r\n\r\n  const sortedEmployees = [...employees].sort((a, b) => {\r\n    if (!formFields.includes(sortBy as keyof Employee)) return 0;\r\n    const fieldA = a[sortBy as keyof Employee]?.toString().toLowerCase() || \"\";\r\n    const fieldB = b[sortBy as keyof Employee]?.toString().toLowerCase() || \"\";\r\n    if (fieldA < fieldB) return sortOrder === \"asc\" ? -1 : 1;\r\n    if (fieldA > fieldB) return sortOrder === \"asc\" ? 1 : -1;\r\n    return 0;\r\n  });\r\n\r\n  const filteredEmployees = sortedEmployees.filter(\r\n    (emp: Employee) =>\r\n      //   emp.name.toLowerCase().includes(search.toLowerCase()) ||\r\n      emp.id.toLowerCase().includes(search.toLowerCase()) ||\r\n      emp.email.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  const activeCount = employees.filter((emp) => emp.status === \"Active\").length;\r\n  const onLeaveCount = employees.filter(\r\n    (emp) => emp.status === \"On Leave\"\r\n  ).length;\r\n  const terminatedCount = employees.filter(\r\n    (emp) => emp.status === \"Terminated\"\r\n  ).length;\r\n\r\n  const handleEdit = (emp: Employee) => {\r\n    setEditingEmployee(emp);\r\n    setFormData({\r\n      id: emp.id,\r\n      firstName: emp.firstName,\r\n      lastName: emp.lastName,\r\n      email: emp.email,\r\n      phone: emp.phone,\r\n      role: emp.role,\r\n      status: emp.status,\r\n      joinedDate: emp.joinedDate,\r\n      updatedDate: emp.updatedDate,\r\n      profileImage: emp.profileImage,\r\n    });\r\n    setModalVisible(true);\r\n    setErrors({});\r\n  };\r\n\r\n  const handleKickEmployee = async (userId: string) => {\r\n    try {\r\n      const res = await kickEmployee(userId);\r\n      if (res instanceof ApiError || res instanceof AxiosError) {\r\n        Toast.show({\r\n          text1: \"Error\",\r\n          text2: res.message,\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n        });\r\n      } else {\r\n        Toast.show({\r\n          text1: \"Employee removed successfully\",\r\n          type: \"success\",\r\n          position: \"bottom\",\r\n        });\r\n\r\n        // remove employee from local state\r\n        setEmployees((prev) => prev.filter((emp) => emp.id !== userId));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Unexpected error while kicking employee:\", error);\r\n    }\r\n  };\r\n\r\n  //validation\r\n  const validateEmail = (email: string) => /^\\S+@\\S+\\.\\S+$/.test(email);\r\n  const validatePhone = (phone: string) => /^(\\+614|614|04)\\d{8}$/.test(phone);\r\n\r\n  const validateForm = () => {\r\n    const newErrors: { [K in keyof Employee]?: string } = {};\r\n    formFields.forEach((field) => {\r\n      if (!formData[field]) {\r\n        newErrors[field] = `${\r\n          field.charAt(0).toUpperCase() + field.slice(1)\r\n        } is required`;\r\n      }\r\n    });\r\n    if (formData.role === \"\" || formData.role === \"Choose Role\")\r\n      newErrors.role = \"Role is required\";\r\n    if (\r\n      formData.status === \"\" ||\r\n      formData.status === \"Choose Employment Status\"\r\n    )\r\n      newErrors.status = \"Employment status is required\";\r\n    if (!validateEmail(formData.email))\r\n      newErrors.email = \"Invalid email format\";\r\n    if (!validatePhone(formData.phone))\r\n      newErrors.phone = \"Phone must be 10 digits\";\r\n    if (!editingEmployee && employees.find((emp) => emp.id === formData.id))\r\n      newErrors.id = \"Employee ID must be unique\";\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    //todo : cors error\r\n    if (!validateForm()) return;\r\n\r\n    const roleNormalized = formData.role.trim();\r\n\r\n    if (editingEmployee) {\r\n      try {\r\n        const payload = {\r\n          id: formData.id,\r\n          firstName: formData.firstName,\r\n          lastName: formData.lastName,\r\n          phone: formData.phone,\r\n          email: formData.email,\r\n          role: roleMapper[formData.role as \"Admin\" | \"Manager\" | \"Employee\"],\r\n          employmentStatus:\r\n            statusMapper[formData.status as \"Active\" | \"Inactive\"],\r\n        };\r\n\r\n        const res = await updateEmployeeDetails(payload);\r\n\r\n        if (res instanceof ApiError || res instanceof AxiosError) {\r\n          Toast.show({\r\n            text1: \"Error\",\r\n            text2: res.message,\r\n            type: \"error\",\r\n            position: \"bottom\",\r\n          });\r\n          return;\r\n        }\r\n\r\n        await handleFetchUsers(); // refresh list after update\r\n\r\n        Toast.show({\r\n          text1: \"Employee updated successfully!\",\r\n          type: \"success\",\r\n          position: \"bottom\",\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Unexpected error while updating employee:\", error);\r\n      }\r\n    } else {\r\n      if (!serverId) {\r\n        Toast.show({\r\n          text1: \"Error\",\r\n          text2: \"Server ID not found. Please refresh the page.\",\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n        });\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const payload = {\r\n          serverId,\r\n          email: formData.email,\r\n          firstName: formData.firstName,\r\n          lastName: formData.lastName,\r\n          phone: formData.phone,\r\n          //   role: Role[roleNormalized.toUpperCase() as keyof typeof Role],\r\n          role: roleNormalized as any, // adjust if Role enum\r\n        };\r\n\r\n        const res = await partialregisterEmployee(payload);\r\n\r\n        if (res instanceof ApiError || res instanceof AxiosError) {\r\n          Toast.show({\r\n            text1: \"Error\",\r\n            text2: res.message,\r\n            type: \"error\",\r\n            position: \"bottom\",\r\n          });\r\n          return;\r\n        }\r\n\r\n        // Refresh list after successful registration\r\n        await handleFetchUsers();\r\n\r\n        Toast.show({\r\n          text1: \"Employee created successfully!\",\r\n          type: \"success\",\r\n          position: \"bottom\",\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Unexpected error while creating employee:\", error);\r\n      }\r\n    }\r\n\r\n    // Reset modal\r\n    setModalVisible(false);\r\n    setEditingEmployee(null);\r\n    setFormData({\r\n      id: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      role: \"\",\r\n      status: \"\",\r\n    });\r\n    setErrors({});\r\n  };\r\n\r\n  const handleInputChange = <K extends keyof Employee>(\r\n    key: K,\r\n    value: Employee[K]\r\n  ) => {\r\n    setFormData((prev) => ({ ...prev, [key]: value }));\r\n  };\r\n\r\n  const getRoleBadgeStyle = (role: string) => {\r\n    switch (role.trim().toLowerCase()) {\r\n      case \"admin\":\r\n        return styles.adminBadge;\r\n      case \"manager\":\r\n        return styles.managerBadge;\r\n      case \"employee\":\r\n        return styles.employeeBadge;\r\n      default:\r\n        return { backgroundColor: \"#999\" };\r\n    }\r\n  };\r\n\r\n  const getInitials = (name: string) =>\r\n    name\r\n      .split(\" \")\r\n      .map((n) => n[0])\r\n      .join(\"\")\r\n      .toUpperCase();\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Header\r\n        isSidebarOpen={isSidebarOpen}\r\n        toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\r\n      />\r\n      <Sidebar\r\n        isOpen={isSidebarOpen}\r\n        toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\r\n        selectedTab={selectedTab}\r\n        handleTabChange={setSelectedTab}\r\n      />\r\n\r\n      <View\r\n        style={[\r\n          styles.mainContent,\r\n          { marginLeft: isMobile ? 0 : isSidebarOpen ? 250 : 0 },\r\n        ]}\r\n      >\r\n        <Text style={styles.title}>\r\n          Employee Management\r\n          <TouchableOpacity\r\n            onPress={handleFetchUsers}\r\n            style={styles.reloadIcon}\r\n          >\r\n            <MaterialIcons name=\"refresh\" size={24} color=\"#4A90E2\" />\r\n          </TouchableOpacity>\r\n        </Text>\r\n\r\n        <View style={{ paddingHorizontal: 20, marginTop: 20 }}>\r\n          <Text style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 10 }}>\r\n            Employee Status Summary\r\n          </Text>\r\n          <View style={{ flexDirection: \"row\", gap: 20, marginBottom: 20 }}>\r\n            <Text>✅ Active: {activeCount}</Text>\r\n            <Text>🟡 Inactive: {onLeaveCount}</Text>\r\n            {/* <Text>❌ Terminated: {terminatedCount}</Text> */}\r\n          </View>\r\n        </View>\r\n\r\n        <View style={styles.actionsRow}>\r\n          <TextInput\r\n            style={styles.searchInput}\r\n            placeholder=\"Search by name, ID, or email\"\r\n            value={search}\r\n            onChangeText={setSearch}\r\n          />\r\n          <TouchableOpacity\r\n            style={styles.addButton}\r\n            onPress={() => {\r\n              setEditingEmployee(null);\r\n              setFormData({\r\n                id: \"\",\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                role: \"\",\r\n\r\n                status: \"\",\r\n              });\r\n              setModalVisible(true);\r\n              setErrors({});\r\n            }}\r\n          >\r\n            <Text style={{ color: \"#fff\" }}>+ Add Employee</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        <ScrollView horizontal={!isMobile}>\r\n          <View style={styles.table}>\r\n            <View style={styles.tableHeader}>\r\n              <Text style={styles.headerCell}>ID</Text>\r\n              <Text style={styles.headerCell}>NAME</Text>\r\n              <Text style={styles.headerCell}>EMAIL</Text>\r\n              <Text style={styles.headerCell}>PHONE</Text>\r\n              <Text style={styles.headerCell}>ROLE</Text>\r\n\r\n              <Text style={styles.headerCell}>STATUS</Text>\r\n              <Text style={styles.headerCell}>JOINED DATE</Text>\r\n              <Text style={styles.headerCell}>UPDATED DATE</Text>\r\n              <Text style={styles.headerCell}>ACTIONS</Text>\r\n            </View>\r\n\r\n            {filteredEmployees.map((emp, index) => (\r\n              <View key={index} style={styles.row}>\r\n                {formFields.map((field) => {\r\n                  if (field === \"firstName\") {\r\n                    return (\r\n                      <View key=\"name\" style={[styles.cell, styles.nameCell]}>\r\n                        {emp.profileImage ? (\r\n                          <Image\r\n                            source={{ uri: emp.profileImage }}\r\n                            style={styles.avatar}\r\n                          />\r\n                        ) : (\r\n                          <View style={styles.initialsCircle}>\r\n                            <Text style={styles.initialsText}>\r\n                              {getInitials(emp.firstName + \" \" + emp.lastName)}\r\n                            </Text>\r\n                          </View>\r\n                        )}\r\n                        <Text style={styles.nameText}>\r\n                          {emp.firstName} {emp.lastName}\r\n                        </Text>\r\n                      </View>\r\n                    );\r\n                  } else if (field === \"lastName\") {\r\n                    return null;\r\n                  } else if (field === \"role\") {\r\n                    return (\r\n                      <View\r\n                        key={field}\r\n                        style={[styles.cell, styles.roleBadgeWrapper]}\r\n                      >\r\n                        <Text\r\n                          style={[\r\n                            styles.roleBadge,\r\n                            getRoleBadgeStyle(emp.role),\r\n                          ]}\r\n                        >\r\n                          {emp.role}\r\n                        </Text>\r\n                      </View>\r\n                    );\r\n                  }\r\n                  return (\r\n                    <Text key={field} style={styles.cell}>\r\n                      {emp[field] || \"-\"}\r\n                    </Text>\r\n                  );\r\n                })}\r\n                {/* Show these two fields separately */}\r\n                <Text style={styles.cell}>{emp.joinedDate || \"-\"}</Text>\r\n                <Text style={styles.cell}>{emp.updatedDate || \"-\"}</Text>\r\n\r\n                <View style={styles.actionButtons}>\r\n                  <TouchableOpacity onPress={() => handleEdit(emp)}>\r\n                    <Text style={styles.actionText}>Edit</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity onPress={() => handleKickEmployee(emp.id)}>\r\n                    <Text style={[styles.actionText, { color: \"red\" }]}>\r\n                      Delete\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        </ScrollView>\r\n\r\n        <Modal visible={modalVisible} animationType=\"slide\" transparent>\r\n          <View style={styles.modalOverlay}>\r\n            <View style={styles.modalContent}>\r\n              <Text style={styles.modalTitle}>\r\n                {editingEmployee ? \"Edit\" : \"Add\"} Employee\r\n              </Text>\r\n              {formFields.map((field) =>\r\n                field === \"role\" ? (\r\n                  <Picker\r\n                    key={field}\r\n                    selectedValue={formData.role}\r\n                    onValueChange={(value) => handleInputChange(\"role\", value)}\r\n                    style={styles.input}\r\n                  >\r\n                    {roles.map((role) => (\r\n                      <Picker.Item\r\n                        key={role}\r\n                        label={role}\r\n                        value={role === \"Choose Role\" ? \"\" : role}\r\n                      />\r\n                    ))}\r\n                  </Picker>\r\n                ) : field === \"status\" ? (\r\n                  <Picker\r\n                    key={field}\r\n                    selectedValue={formData.status}\r\n                    onValueChange={(value) =>\r\n                      handleInputChange(\"status\", value)\r\n                    }\r\n                    style={styles.input}\r\n                  >\r\n                    {statuses.map((status) => (\r\n                      <Picker.Item\r\n                        key={status}\r\n                        label={status}\r\n                        value={\r\n                          status === \"Choose Employment Status\" ? \"\" : status\r\n                        }\r\n                      />\r\n                    ))}\r\n                  </Picker>\r\n                ) : (\r\n                  <View key={field}>\r\n                    <TextInput\r\n                      style={styles.input}\r\n                      placeholder={\r\n                        field.charAt(0).toUpperCase() + field.slice(1)\r\n                      }\r\n                      value={formData[field]}\r\n                      onChangeText={(text) =>\r\n                        handleInputChange(field as keyof Employee, text)\r\n                      }\r\n                    />\r\n                    {errors[field] && (\r\n                      <Text style={{ color: \"red\", marginBottom: 6 }}>\r\n                        {errors[field]}\r\n                      </Text>\r\n                    )}\r\n                  </View>\r\n                )\r\n              )}\r\n              <View style={styles.modalActions}>\r\n                <TouchableOpacity\r\n                  onPress={() => setModalVisible(false)}\r\n                  style={styles.cancelBtn}\r\n                >\r\n                  <Text style={{ color: \"#fff\" }}>Cancel</Text>\r\n                </TouchableOpacity>\r\n                <TouchableOpacity onPress={handleSave} style={styles.saveBtn}>\r\n                  <Text style={{ color: \"#fff\" }}>Save</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  roleBadgeWrapper: { alignItems: \"center\" },\r\n  roleBadge: {\r\n    paddingHorizontal: 10,\r\n    paddingVertical: 4,\r\n    borderRadius: 20,\r\n    color: \"#fff\",\r\n    fontWeight: \"600\",\r\n    textAlign: \"center\",\r\n    overflow: \"hidden\",\r\n    fontSize: 13,\r\n  },\r\n  adminBadge: { backgroundColor: \"#8e44ad\" },\r\n  managerBadge: { backgroundColor: \"#27ae60\" },\r\n  employeeBadge: { backgroundColor: \"#2980b9\" },\r\n  container: { flex: 1, flexDirection: \"row\" },\r\n  mainContent: { flex: 1, padding: 20, marginTop: 60 },\r\n  title: { fontSize: 24, fontWeight: \"bold\", marginBottom: 10 },\r\n  searchInput: {\r\n    flex: 1,\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 6,\r\n    padding: 10,\r\n    marginRight: 10,\r\n  },\r\n  actionsRow: { flexDirection: \"row\", marginBottom: 12, alignItems: \"center\" },\r\n  addButton: {\r\n    backgroundColor: \"#4A90E2\",\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 10,\r\n    borderRadius: 6,\r\n  },\r\n  table: { minWidth: 1000 },\r\n  tableHeader: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#eee\",\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#ccc\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    paddingVertical: 12,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#f0f0f0\",\r\n    alignItems: \"center\",\r\n  },\r\n  headerCell: {\r\n    flex: 1,\r\n    fontWeight: \"bold\",\r\n    paddingHorizontal: 68,\r\n    textAlign: \"center\",\r\n  },\r\n  cell: {\r\n    flex: 1,\r\n    // paddingHorizontal: 20,\r\n    textAlign: \"center\",\r\n  },\r\n  actionButtons: {\r\n    flex: 1,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-evenly\",\r\n  },\r\n  actionText: { color: \"#4A90E2\", textDecorationLine: \"underline\" },\r\n  modalOverlay: {\r\n    flex: 1,\r\n    backgroundColor: \"#000000aa\",\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n  },\r\n  modalContent: {\r\n    backgroundColor: \"#fff\",\r\n    padding: 20,\r\n    borderRadius: 10,\r\n  },\r\n  modalTitle: { fontSize: 20, fontWeight: \"bold\", marginBottom: 10 },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 6,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  },\r\n  modalActions: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    gap: 10,\r\n    marginTop: 10,\r\n  },\r\n  cancelBtn: {\r\n    backgroundColor: \"#888\",\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 10,\r\n    borderRadius: 6,\r\n  },\r\n  saveBtn: {\r\n    backgroundColor: \"#4A90E2\",\r\n    paddingHorizontal: 16,\r\n    paddingVertical: 10,\r\n    borderRadius: 6,\r\n  },\r\n  reloadIcon: {\r\n    marginLeft: 10,\r\n\r\n    // padding: 4,\r\n  },\r\n  avatarCell: {\r\n    width: 60,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  avatar: {\r\n    width: 36,\r\n    height: 36,\r\n    borderRadius: 18,\r\n  },\r\n  initialsCircle: {\r\n    width: 36,\r\n    height: 36,\r\n    borderRadius: 18,\r\n    backgroundColor: \"#ccc\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  initialsText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  nameText: {\r\n    fontWeight: \"500\",\r\n  },\r\n  nameCell: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    gap: 10,\r\n    paddingHorizontal: 8,\r\n  },\r\n});\r\n\r\nexport default EmployeeManagementScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  Dimensions,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Linking,\r\n  Platform,\r\n} from 'react-native';\r\nimport Header from '../components/Header';\r\nimport Sidebar from '../components/Sidebar';\r\n\r\nconst mockClockData = [\r\n  {\r\n    employee: 'Sabin',\r\n    clockIn: '2025-03-28T09:00:00',\r\n    clockOut: '2025-03-28T17:00:00',\r\n    location: 'Melbourne',\r\n    expected: 'Melbourne',\r\n    lat: -37.8136,\r\n    lng: 144.9631,\r\n  },\r\n  {\r\n    employee: 'Pranish',\r\n    clockIn: '2025-03-27T09:15:00',\r\n    clockOut: '2025-03-27T17:10:00',\r\n    location: 'Sydney',\r\n    expected: 'Melbourne',\r\n    lat: -33.8688,\r\n    lng: 151.2093,\r\n  },\r\n  {\r\n    employee: 'Aashish',\r\n    clockIn: '2025-03-26T08:55:00',\r\n    clockOut: '',\r\n    location: 'Melbourne',\r\n    expected: 'Melbourne',\r\n    lat: -37.8136,\r\n    lng: 144.9631,\r\n  },\r\n  {\r\n    employee: 'Pranish',\r\n    clockIn: new Date().toISOString(),\r\n    clockOut: '',\r\n    location: 'Melbourne',\r\n    expected: 'Melbourne',\r\n    lat: -37.8136,\r\n    lng: 144.9631,\r\n  },\r\n];\r\n\r\nconst ClockInOutScreen = () => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [selectedTab, setSelectedTab] = useState('ClockInOut');\r\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n  const [searchEmployee, setSearchEmployee] = useState('');\r\n  const [searchDate, setSearchDate] = useState('');\r\n  const [dateError, setDateError] = useState('');\r\n\r\n  const isMobile = screenWidth <= 768;\r\n  const today = new Date().toISOString().slice(0, 10);\r\n\r\n  useEffect(() => {\r\n    const updateWidth = () => setScreenWidth(Dimensions.get('window').width);\r\n    const subscription = Dimensions.addEventListener('change', updateWidth);\r\n    return () => subscription.remove();\r\n  }, []);\r\n\r\n  const formatTime = (iso: string) => iso ? new Date(iso).toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' }) : '—';\r\n  const formatDate = (iso: string) => iso ? new Date(iso).toISOString().slice(0, 10) : '—';\r\n\r\n  const openMap = (lat: number, lng: number) => {\r\n    const url = `https://www.google.com/maps?q=${lat},${lng}`;\r\n    Linking.openURL(url);\r\n  };\r\n\r\n  const isValidDate = (date: string) => /^\\d{4}-\\d{2}-\\d{2}$/.test(date);\r\n\r\n  const handleDateChange = (text: string) => {\r\n    setSearchDate(text);\r\n    setDateError(isValidDate(text) || text === '' ? '' : 'Invalid format. Use YYYY-MM-DD');\r\n  };\r\n\r\n  const filteredData = mockClockData.filter(entry => {\r\n    const matchesEmployee = entry.employee.toLowerCase().includes(searchEmployee.toLowerCase());\r\n    const matchesDate = searchDate && isValidDate(searchDate)\r\n      ? new Date(entry.clockIn).toISOString().slice(0, 10) === searchDate\r\n      : !searchDate;\r\n    return matchesEmployee && matchesDate;\r\n  });\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Header isSidebarOpen={isSidebarOpen} toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)} />\r\n      <Sidebar\r\n        isOpen={isSidebarOpen}\r\n        toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\r\n        selectedTab={selectedTab}\r\n        handleTabChange={setSelectedTab}\r\n      />\r\n\r\n      <View style={[styles.mainContent, { marginLeft: isMobile ? 0 : isSidebarOpen ? 250 : 0 }]}>\r\n        <Text style={styles.title}>Clock In/Out Records</Text>\r\n\r\n        <TextInput\r\n          style={styles.searchInput}\r\n          placeholder=\"Search employee...\"\r\n          value={searchEmployee}\r\n          onChangeText={setSearchEmployee}\r\n        />\r\n\r\n        <TextInput\r\n          style={styles.searchInput}\r\n          placeholder=\"Filter by date (YYYY-MM-DD)\"\r\n          value={searchDate}\r\n          onChangeText={handleDateChange}\r\n        />\r\n        {dateError !== '' && <Text style={styles.errorText}>{dateError}</Text>}\r\n\r\n        <ScrollView horizontal={!isMobile}>\r\n          <View style={[styles.table, isMobile && styles.mobileTable]}>\r\n            <View style={styles.tableHeader}>\r\n              <Text style={styles.headerCell}>Date</Text>\r\n              <Text style={styles.headerCell}>Employee</Text>\r\n              <Text style={styles.headerCell}>Clock In</Text>\r\n              <Text style={styles.headerCell}>Clock Out</Text>\r\n              <Text style={styles.headerCell}>Location</Text>\r\n              <Text style={styles.headerCell}>Expected</Text>\r\n              <Text style={styles.headerCell}>Status</Text>\r\n              <Text style={styles.headerCell}>Map</Text>\r\n            </View>\r\n\r\n            {filteredData.map((entry, index) => {\r\n              const verified = entry.location === entry.expected;\r\n              const status = !entry.clockOut ? '🕒 Working' : verified ? '✅ Verified' : '❌ Wrong Place';\r\n              const isToday = formatDate(entry.clockIn) === today;\r\n              return (\r\n                <View key={index} style={[styles.row, isToday && styles.todayRow]}>\r\n                  <Text style={styles.cell}>{formatDate(entry.clockIn)}</Text>\r\n                  <Text style={styles.cell}>{entry.employee}</Text>\r\n                  <Text style={styles.cell}>{formatTime(entry.clockIn)}</Text>\r\n                  <Text style={styles.cell}>{formatTime(entry.clockOut)}</Text>\r\n                  <Text style={styles.cell}>{entry.location}</Text>\r\n                  <Text style={styles.cell}>{entry.expected}</Text>\r\n                  <Text style={[styles.cell, status.includes('❌') && styles.errorStatus]}>{status}</Text>\r\n                  <TouchableOpacity onPress={() => openMap(entry.lat, entry.lng)}>\r\n                    <Text style={[styles.cell, styles.mapLink]}>🗺️ View</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              );\r\n            })}\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, flexDirection: 'row' },\r\n  mainContent: { flex: 1, padding: 20, marginTop: 60 },\r\n  title: { fontSize: 24, fontWeight: 'bold', marginBottom: 20 },\r\n  searchInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 6,\r\n    padding: 10,\r\n    marginBottom: 12,\r\n  },\r\n  errorText: {\r\n    color: '#D9534F',\r\n    marginBottom: 10,\r\n    fontWeight: 'bold',\r\n  },\r\n  table: { minWidth: 800 },\r\n  mobileTable: { width: '100%' },\r\n  tableHeader: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#eee',\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#ccc',\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    paddingVertical: 12,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#f0f0f0',\r\n  },\r\n  todayRow: {\r\n    backgroundColor: '#e9f6ff',\r\n  },\r\n  headerCell: { flex: 1, fontWeight: 'bold', paddingHorizontal: 8 },\r\n  cell: { flex: 1, paddingHorizontal: 8 },\r\n  errorStatus: { color: '#D9534F', fontWeight: 'bold' },\r\n  mapLink: { color: '#4A90E2', textDecorationLine: 'underline' },\r\n});\r\n\r\nexport default ClockInOutScreen;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  TextInput,\r\n  Switch,\r\n  TouchableOpacity,\r\n  Dimensions,\r\n  Platform,\r\n} from 'react-native';\r\nimport Header from '../components/Header';\r\nimport Sidebar from '../components/Sidebar';\r\nimport { ChevronDown, ChevronUp } from 'lucide-react';\r\n\r\nconst SettingsScreen = () => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [selectedTab, setSelectedTab] = useState('Settings');\r\n  const [screenWidth, setScreenWidth] = useState(Dimensions.get('window').width);\r\n  const [darkMode, setDarkMode] = useState(false);\r\n  const [notificationsEnabled, setNotificationsEnabled] = useState(true);\r\n  const [collapsedSections, setCollapsedSections] = useState<{ [key: string]: boolean }>({\r\n    'Profile': true,\r\n    'Preferences': true,\r\n    'Company Info': true,\r\n    'App Configuration': true,\r\n    'Leave & Attendance Rules': true,\r\n    'Support': true,\r\n  });\r\n\r\n  const isMobile = screenWidth <= 768;\r\n\r\n  useEffect(() => {\r\n    const updateWidth = () => setScreenWidth(Dimensions.get('window').width);\r\n    const subscription = Dimensions.addEventListener('change', updateWidth);\r\n    return () => subscription.remove();\r\n  }, []);\r\n\r\n  const toggleSection = (section: string) => {\r\n    setCollapsedSections(prev => ({ ...prev, [section]: !prev[section] }));\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Header isSidebarOpen={isSidebarOpen} toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)} />\r\n      <Sidebar\r\n        isOpen={isSidebarOpen}\r\n        toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\r\n        selectedTab={selectedTab}\r\n        handleTabChange={setSelectedTab}\r\n      />\r\n\r\n      <View style={[styles.scrollWrapper, { marginLeft: isMobile ? 0 : isSidebarOpen ? 250 : 0 }]}>  \r\n        <ScrollView\r\n          style={styles.scrollView}\r\n          contentContainerStyle={styles.scrollContent}\r\n          showsVerticalScrollIndicator={true}\r\n        >\r\n          <View style={styles.mainContent}>\r\n            <Text style={styles.title}>Settings</Text>\r\n\r\n            {[\r\n              {\r\n                title: 'Profile',\r\n                content: (\r\n                  <>\r\n                    <TextInput style={styles.input} placeholder=\"Name\" />\r\n                    <TextInput style={styles.input} placeholder=\"Email\" />\r\n                    <TextInput style={styles.input} placeholder=\"Phone\" />\r\n                    <TextInput style={styles.input} placeholder=\"Change Password\" secureTextEntry />\r\n                    <TouchableOpacity style={styles.saveBtn}><Text style={styles.saveText}>Save</Text></TouchableOpacity>\r\n                  </>\r\n                )\r\n              },\r\n              {\r\n                title: 'Preferences',\r\n                content: (\r\n                  <>\r\n                    <View style={styles.preferenceRow}>\r\n                      <Text>Dark Mode</Text>\r\n                      <Switch value={darkMode} onValueChange={setDarkMode} />\r\n                    </View>\r\n                    <View style={styles.preferenceRow}>\r\n                      <Text>Notifications</Text>\r\n                      <Switch value={notificationsEnabled} onValueChange={setNotificationsEnabled} />\r\n                    </View>\r\n                    <TouchableOpacity style={styles.saveBtn}><Text style={styles.saveText}>Save</Text></TouchableOpacity>\r\n                  </>\r\n                )\r\n              },\r\n              {\r\n                title: 'Company Info',\r\n                content: (\r\n                  <>\r\n                    <TextInput style={styles.input} placeholder=\"Company Name\" />\r\n                    <TextInput style={styles.input} placeholder=\"ABN\" />\r\n                    <TextInput style={styles.input} placeholder=\"Business Address\" />\r\n                    <TextInput style={styles.input} placeholder=\"Support Email\" />\r\n                    <TouchableOpacity style={styles.saveBtn}><Text style={styles.saveText}>Save</Text></TouchableOpacity>\r\n                  </>\r\n                )\r\n              },\r\n              {\r\n                title: 'App Configuration',\r\n                content: (\r\n                  <>\r\n                    <TextInput style={styles.input} placeholder=\"App Version\" />\r\n                    <TextInput style={styles.input} placeholder=\"Default Timezone\" />\r\n                    <TouchableOpacity style={styles.saveBtn}><Text style={styles.saveText}>Save</Text></TouchableOpacity>\r\n                  </>\r\n                )\r\n              },\r\n              {\r\n                title: 'Leave & Attendance Rules',\r\n                content: (\r\n                  <>\r\n                    <TextInput style={styles.input} placeholder=\"Max Leave Days per Year\" keyboardType=\"numeric\" />\r\n                    <TextInput style={styles.input} placeholder=\"Attendance Tolerance (minutes)\" keyboardType=\"numeric\" />\r\n                    <TouchableOpacity style={styles.saveBtn}><Text style={styles.saveText}>Save</Text></TouchableOpacity>\r\n                  </>\r\n                )\r\n              },\r\n              {\r\n                title: 'Support',\r\n                content: (\r\n                  <>\r\n                    <TouchableOpacity><Text style={styles.link}>Privacy Policy</Text></TouchableOpacity>\r\n                    <TouchableOpacity><Text style={styles.link}>Terms & Conditions</Text></TouchableOpacity>\r\n                    <TouchableOpacity><Text style={styles.link}>Contact Us</Text></TouchableOpacity>\r\n                  </>\r\n                )\r\n              },\r\n            ].map(section => (\r\n              <View style={styles.section} key={section.title}>\r\n                <TouchableOpacity style={styles.sectionTitleRow} onPress={() => toggleSection(section.title)}>\r\n                  <Text style={styles.sectionTitle}>{section.title}</Text>\r\n                  {collapsedSections[section.title] ? <ChevronDown size={18} /> : <ChevronUp size={18} />}\r\n                </TouchableOpacity>\r\n                {!collapsedSections[section.title] && section.content}\r\n              </View>\r\n            ))}\r\n\r\n            <TouchableOpacity style={styles.logoutBtn}>\r\n              <Text style={styles.logoutText}>Logout</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    flexDirection: 'row',\r\n  },\r\n  scrollWrapper: {\r\n    flex: 1,\r\n    height: '100%',\r\n    ...Platform.select({\r\n      web: { overflowY: 'scroll' },\r\n    }),\r\n  },\r\n  scrollView: {\r\n    flex: 1,\r\n  },\r\n  scrollContent: {\r\n    flexGrow: 1,\r\n    paddingBottom: 100,\r\n  },\r\n  mainContent: {\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n    marginTop: 40,\r\n  },\r\n  section: {\r\n    marginBottom: 30,\r\n  },\r\n  sectionTitleRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: '#ccc',\r\n    borderRadius: 6,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  },\r\n  preferenceRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginBottom: 10,\r\n  },\r\n  link: {\r\n    color: '#4A90E2',\r\n    textDecorationLine: 'underline',\r\n    marginBottom: 8,\r\n  },\r\n  logoutBtn: {\r\n    backgroundColor: '#D9534F',\r\n    paddingVertical: 12,\r\n    borderRadius: 6,\r\n    marginTop: 20,\r\n    alignItems: 'center',\r\n  },\r\n  logoutText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n    fontSize: 16,\r\n  },\r\n  saveBtn: {\r\n    backgroundColor: '#4A90E2',\r\n    borderRadius: 6,\r\n    paddingVertical: 10,\r\n    alignItems: 'center',\r\n    marginTop: 10,\r\n    marginBottom: 10,\r\n  },\r\n  saveText: {\r\n    color: '#fff',\r\n    fontWeight: '600',\r\n  }\r\n});\r\n\r\nexport default SettingsScreen;","// GrossPaymentScreen.tsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Modal,\r\n  Alert,\r\n} from \"react-native\";\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport { BarChart } from \"react-native-chart-kit\";\r\nimport { Dimensions } from \"react-native\";\r\n\r\ninterface GrossPayment {\r\n  id: string;\r\n  employeeId: string;\r\n  employeeName: string;\r\n  payPeriodStart: string;\r\n  payPeriodEnd: string;\r\n  payFrequency: \"Weekly\" | \"Fortnightly\" | \"Monthly\";\r\n  hoursWorked: number;\r\n  hourlyRate: number;\r\n  bonuses?: number;\r\n  deductions?: number;\r\n  grossPay: number;\r\n  netPay: number;\r\n  status: \"Pending\" | \"Approved\" | \"Paid\";\r\n}\r\n\r\nconst calculateTax = (gross: number): number => {\r\n  if (gross <= 300) return 0;\r\n  if (gross <= 500) return gross * 0.1;\r\n  if (gross <= 800) return gross * 0.15;\r\n  if (gross <= 1200) return gross * 0.2;\r\n  return gross * 0.25;\r\n};\r\n\r\nconst DEFAULT_PAY_FREQUENCY: GrossPayment[\"payFrequency\"] = \"Fortnightly\";\r\n\r\nconst initialPayments: GrossPayment[] = [\r\n  {\r\n    id: \"PAY001\",\r\n    employeeId: \"EMP001\",\r\n    employeeName: \"Sabin\",\r\n    payPeriodStart: \"2024-04-01\",\r\n    payPeriodEnd: \"2024-04-07\",\r\n    payFrequency: DEFAULT_PAY_FREQUENCY,\r\n    hoursWorked: 38,\r\n    hourlyRate: 30,\r\n    bonuses: 100,\r\n    deductions: 50,\r\n    grossPay: 1190,\r\n    netPay: 1140,\r\n    status: \"Pending\",\r\n  },\r\n  {\r\n    id: \"PAY002\",\r\n    employeeId: \"EMP002\",\r\n    employeeName: \"Pranish\",\r\n    payPeriodStart: \"2024-04-01\",\r\n    payPeriodEnd: \"2024-04-07\",\r\n    payFrequency: DEFAULT_PAY_FREQUENCY,\r\n    hoursWorked: 40,\r\n    hourlyRate: 28,\r\n    bonuses: 0,\r\n    deductions: 30,\r\n    grossPay: 1150,\r\n    netPay: 1120,\r\n    status: \"Approved\",\r\n  },\r\n];\r\n\r\nconst GrossPaymentScreen = () => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [selectedTab, setSelectedTab] = useState(\"GrossPaymentScreen\");\r\n  const [payments, setPayments] = useState<GrossPayment[]>(initialPayments);\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [formData, setFormData] = useState<GrossPayment | null>(null);\r\n  const [globalPayFrequency, setGlobalPayFrequency] = useState<\r\n    GrossPayment[\"payFrequency\"]\r\n  >(DEFAULT_PAY_FREQUENCY);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const handleEdit = (payment: GrossPayment) => {\r\n    setFormData(payment);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleDelete = (id: string) => {\r\n    Alert.alert(\"Confirm Delete\", \"Delete this payment?\", [\r\n      { text: \"Cancel\", style: \"cancel\" },\r\n      {\r\n        text: \"Delete\",\r\n        style: \"destructive\",\r\n        onPress: () => {\r\n          setPayments((prev) => prev.filter((p) => p.id !== id));\r\n        },\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const handleInputChange = (\r\n    key: keyof GrossPayment,\r\n    value: string | number\r\n  ) => {\r\n    setFormData((prev) => (prev ? { ...prev, [key]: value } : null));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!formData) return;\r\n    const updatedGrossPay =\r\n      formData.hoursWorked * formData.hourlyRate + (formData.bonuses || 0);\r\n    const updatedDeductions = calculateTax(updatedGrossPay);\r\n    const updatedNetPay = updatedGrossPay - updatedDeductions;\r\n    const newData = {\r\n      ...formData,\r\n      payFrequency: globalPayFrequency,\r\n      grossPay: updatedGrossPay,\r\n      deductions: updatedDeductions,\r\n      netPay: updatedNetPay,\r\n    };\r\n\r\n    setPayments((prev) => {\r\n      const existingIndex = prev.findIndex((p) => p.id === newData.id);\r\n      if (existingIndex !== -1) {\r\n        const updated = [...prev];\r\n        updated[existingIndex] = newData;\r\n        return updated;\r\n      }\r\n      return [...prev, newData];\r\n    });\r\n    setModalVisible(false);\r\n    setFormData(null);\r\n  };\r\n\r\n  const getStatusBadgeStyle = (status: GrossPayment[\"status\"]) => {\r\n    switch (status) {\r\n      case \"Approved\":\r\n        return {\r\n          backgroundColor: \"#27ae60\",\r\n          color: \"white\",\r\n          padding: 4,\r\n          borderRadius: 4,\r\n        };\r\n      case \"Paid\":\r\n        return {\r\n          backgroundColor: \"#2980b9\",\r\n          color: \"white\",\r\n          padding: 4,\r\n          borderRadius: 4,\r\n        };\r\n      default:\r\n        return {\r\n          backgroundColor: \"#f39c12\",\r\n          color: \"white\",\r\n          padding: 4,\r\n          borderRadius: 4,\r\n        };\r\n    }\r\n  };\r\n\r\n  const filteredPayments = payments.filter(\r\n    (p) =>\r\n      p.employeeName.toLowerCase().includes(search.toLowerCase()) ||\r\n      p.id.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Header\r\n        isSidebarOpen={isSidebarOpen}\r\n        toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\r\n      />\r\n      <Sidebar\r\n        isOpen={isSidebarOpen}\r\n        toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\r\n        selectedTab={selectedTab}\r\n        handleTabChange={setSelectedTab}\r\n      />\r\n      <View\r\n        style={[styles.mainContent, { marginLeft: isSidebarOpen ? 250 : 0 }]}\r\n      >\r\n        <Text style={styles.title}>Gross Payments</Text>\r\n\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Search by Employee Name or ID\"\r\n          value={search}\r\n          onChangeText={setSearch}\r\n        />\r\n\r\n        <View\r\n          style={{\r\n            flexDirection: \"row\",\r\n            alignItems: \"center\",\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          <Text style={{ marginRight: 10 }}>Pay Frequency:</Text>\r\n          <Picker\r\n            selectedValue={globalPayFrequency}\r\n            onValueChange={(value) =>\r\n              setGlobalPayFrequency(value as GrossPayment[\"payFrequency\"])\r\n            }\r\n            style={{ flex: 1 }}\r\n          >\r\n            {[\"Weekly\", \"Fortnightly\", \"Monthly\"].map((freq) => (\r\n              <Picker.Item label={freq} value={freq} key={freq} />\r\n            ))}\r\n          </Picker>\r\n        </View>\r\n\r\n        <ScrollView horizontal>\r\n          <View style={styles.table}>\r\n            <View style={styles.tableHeader}>\r\n              {[\r\n                \"ID\",\r\n                \"Name\",\r\n                \"Pay Period\",\r\n                \"Freq\",\r\n                \"Hours\",\r\n                \"Rate\",\r\n                \"Bonus\",\r\n                \"Tax\",\r\n                \"Gross\",\r\n                \"Net\",\r\n                \"Status\",\r\n                \"Actions\",\r\n              ].map((h) => (\r\n                <Text style={styles.headerCell} key={h}>\r\n                  {h}\r\n                </Text>\r\n              ))}\r\n            </View>\r\n            {filteredPayments.map((p) => (\r\n              <View key={p.id} style={styles.row}>\r\n                <Text style={styles.cell}>{p.id}</Text>\r\n                <Text style={styles.cell}>{p.employeeName}</Text>\r\n                <Text\r\n                  style={styles.cell}\r\n                >{`${p.payPeriodStart} - ${p.payPeriodEnd}`}</Text>\r\n                <Text style={styles.cell}>{p.payFrequency}</Text>\r\n                <Text style={styles.cell}>{p.hoursWorked}</Text>\r\n                <Text style={styles.cell}>${p.hourlyRate}</Text>\r\n                <Text style={styles.cell}>${p.bonuses ?? 0}</Text>\r\n                <Text style={styles.cell}>${p.deductions ?? 0}</Text>\r\n                <Text style={styles.cell}>${p.grossPay}</Text>\r\n                <Text style={styles.cell}>${p.netPay}</Text>\r\n                <Text style={[styles.cell, getStatusBadgeStyle(p.status)]}>\r\n                  {p.status}\r\n                </Text>\r\n                <View style={styles.cell}>\r\n                  <TouchableOpacity onPress={() => handleEdit(p)}>\r\n                    <Text>Edit</Text>\r\n                  </TouchableOpacity>\r\n                  <TouchableOpacity onPress={() => handleDelete(p.id)}>\r\n                    <Text style={{ color: \"red\" }}>Delete</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        </ScrollView>\r\n\r\n        <Text\r\n          style={{\r\n            marginTop: 10,\r\n            fontStyle: \"italic\",\r\n            fontSize: 12,\r\n            color: \"gray\",\r\n          }}\r\n        >\r\n          *Note: Tax calculations are approximate and for demonstration purposes\r\n          only.\r\n        </Text>\r\n\r\n        <Text style={styles.chartTitle}>Salary Insights</Text>\r\n        <BarChart\r\n          data={{\r\n            labels: filteredPayments.map((p) => p.employeeName),\r\n            datasets: [{ data: filteredPayments.map((p) => p.netPay) }],\r\n          }}\r\n          width={Dimensions.get(\"window\").width - 40}\r\n          height={220}\r\n          yAxisLabel=\"$\"\r\n          yAxisSuffix=\"\"\r\n          chartConfig={{\r\n            backgroundColor: \"#f7f7f7\",\r\n            backgroundGradientFrom: \"#f7f7f7\",\r\n            backgroundGradientTo: \"#f7f7f7\",\r\n            decimalPlaces: 2,\r\n            color: () => \"#4A90E2\",\r\n            labelColor: () => \"#333\",\r\n          }}\r\n          style={{ marginTop: 20, borderRadius: 10 }}\r\n        />\r\n\r\n        <Modal visible={modalVisible} animationType=\"slide\" transparent>\r\n          <View\r\n            style={{\r\n              flex: 1,\r\n              backgroundColor: \"#00000099\",\r\n              justifyContent: \"center\",\r\n              padding: 20,\r\n            }}\r\n          >\r\n            <View\r\n              style={{\r\n                backgroundColor: \"white\",\r\n                padding: 20,\r\n                borderRadius: 10,\r\n              }}\r\n            >\r\n              <Text\r\n                style={{ fontWeight: \"bold\", fontSize: 18, marginBottom: 10 }}\r\n              >\r\n                Edit Hourly Rate\r\n              </Text>\r\n              {formData && (\r\n                <>\r\n                  <Text style={styles.inputLabel}>\r\n                    Employee: {formData.employeeName}\r\n                  </Text>\r\n                  <Text style={styles.inputLabel}>\r\n                    Hours Worked: {formData.hoursWorked}\r\n                  </Text>\r\n                  <Text style={styles.inputLabel}>\r\n                    Bonuses: ${formData.bonuses ?? 0}\r\n                  </Text>\r\n                  <Text style={styles.inputLabel}>\r\n                    Tax Deduction: ${formData.deductions ?? 0}\r\n                  </Text>\r\n                  <TextInput\r\n                    style={styles.input}\r\n                    placeholder=\"Hourly Rate\"\r\n                    keyboardType=\"numeric\"\r\n                    value={formData.hourlyRate.toString()}\r\n                    onChangeText={(text) =>\r\n                      handleInputChange(\"hourlyRate\", parseFloat(text) || 0)\r\n                    }\r\n                  />\r\n                  <Picker\r\n                    selectedValue={formData.status}\r\n                    onValueChange={(value) =>\r\n                      handleInputChange(\r\n                        \"status\",\r\n                        value as GrossPayment[\"status\"]\r\n                      )\r\n                    }\r\n                  >\r\n                    {[\"Pending\", \"Approved\", \"Paid\"].map((status) => (\r\n                      <Picker.Item label={status} value={status} key={status} />\r\n                    ))}\r\n                  </Picker>\r\n\r\n                  <View\r\n                    style={{\r\n                      flexDirection: \"row\",\r\n                      justifyContent: \"flex-end\",\r\n                      marginTop: 10,\r\n                    }}\r\n                  >\r\n                    <TouchableOpacity\r\n                      onPress={() => setModalVisible(false)}\r\n                      style={[\r\n                        styles.addButton,\r\n                        { backgroundColor: \"#aaa\", marginRight: 10 },\r\n                      ]}\r\n                    >\r\n                      <Text style={{ color: \"#fff\" }}>Cancel</Text>\r\n                    </TouchableOpacity>\r\n                    <TouchableOpacity\r\n                      onPress={handleSave}\r\n                      style={styles.addButton}\r\n                    >\r\n                      <Text style={{ color: \"#fff\" }}>Save</Text>\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                </>\r\n              )}\r\n            </View>\r\n          </View>\r\n        </Modal>\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, flexDirection: \"row\" },\r\n  mainContent: { flex: 1, padding: 20, marginTop: 60 },\r\n  title: { fontSize: 24, fontWeight: \"bold\", marginBottom: 10 },\r\n  chartTitle: { fontSize: 18, fontWeight: \"600\", marginTop: 20 },\r\n  addButton: {\r\n    backgroundColor: \"#4A90E2\",\r\n    padding: 10,\r\n    borderRadius: 6,\r\n    alignSelf: \"flex-start\",\r\n    marginBottom: 10,\r\n  },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    padding: 10,\r\n    borderRadius: 6,\r\n    marginBottom: 10,\r\n  },\r\n  inputLabel: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: 5,\r\n  },\r\n  table: { minWidth: 1100 },\r\n  tableHeader: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#eee\",\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#ccc\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    paddingVertical: 12,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#eee\",\r\n  },\r\n  headerCell: { flex: 1, fontWeight: \"bold\", textAlign: \"center\" },\r\n  cell: { flex: 1, textAlign: \"center\" },\r\n});\r\n\r\nexport default GrossPaymentScreen;\r\n","// LeaveRequestScreen.tsx\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  Alert,\r\n  Modal,\r\n} from \"react-native\";\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\n\r\ninterface LeaveRequest {\r\n  id: string;\r\n  employeeId: string;\r\n  employeeName: string;\r\n  leaveType: string;\r\n  startDate: string;\r\n  endDate: string;\r\n  reason: string;\r\n  status: \"Pending\" | \"Approved\" | \"Rejected\";\r\n  balance: number;\r\n  totalDays: number;\r\n  history?: LeaveRequest[];\r\n  adminComment?: string;\r\n}\r\n\r\nconst initialRequests: LeaveRequest[] = [\r\n  {\r\n    id: \"LEAVE001\",\r\n    employeeId: \"EMP001\",\r\n    employeeName: \"Sabin\",\r\n    leaveType: \"Annual Leave\",\r\n    startDate: \"2024-04-10\",\r\n    endDate: \"2024-04-15\",\r\n    reason: \"Family trip\",\r\n    status: \"Pending\",\r\n    balance: 10,\r\n    totalDays: 5,\r\n    history: [],\r\n    adminComment: \"\",\r\n  },\r\n  {\r\n    id: \"LEAVE002\",\r\n    employeeId: \"EMP002\",\r\n    employeeName: \"Pranish\",\r\n    leaveType: \"Sick Leave\",\r\n    startDate: \"2024-04-05\",\r\n    endDate: \"2024-04-06\",\r\n    reason: \"Fever\",\r\n    status: \"Approved\",\r\n    balance: 6,\r\n    totalDays: 2,\r\n    history: [],\r\n    adminComment: \"\",\r\n  },\r\n];\r\n\r\nconst LeaveRequestScreen = () => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [selectedTab, setSelectedTab] = useState(\"LeaveRequestScreen\");\r\n  const [requests, setRequests] = useState<LeaveRequest[]>(initialRequests);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [commentModalVisible, setCommentModalVisible] = useState(false);\r\n  const [selectedRequestId, setSelectedRequestId] = useState<string | null>(\r\n    null\r\n  );\r\n  const [adminComment, setAdminComment] = useState(\"\");\r\n  const [selectedAction, setSelectedAction] = useState<\r\n    \"Approved\" | \"Rejected\" | null\r\n  >(null);\r\n  const [historyModalVisible, setHistoryModalVisible] = useState(false);\r\n  const [selectedHistory, setSelectedHistory] = useState<LeaveRequest[] | null>(\r\n    null\r\n  );\r\n\r\n  const handleUpdateStatus = (id: string, action: \"Approved\" | \"Rejected\") => {\r\n    setSelectedRequestId(id);\r\n    setSelectedAction(action);\r\n    setCommentModalVisible(true);\r\n  };\r\n\r\n  const confirmStatusUpdate = () => {\r\n    if (!selectedRequestId || !selectedAction) return;\r\n\r\n    setRequests((prev) =>\r\n      prev.map((r) => {\r\n        if (r.id === selectedRequestId) {\r\n          const historyEntry = { ...r };\r\n          return {\r\n            ...r,\r\n            status: selectedAction,\r\n            adminComment,\r\n            history: [...(r.history || []), historyEntry],\r\n          };\r\n        }\r\n        return r;\r\n      })\r\n    );\r\n\r\n    setCommentModalVisible(false);\r\n    setAdminComment(\"\");\r\n    setSelectedRequestId(null);\r\n    setSelectedAction(null);\r\n  };\r\n\r\n  const filtered = requests.filter(\r\n    (r) =>\r\n      r.employeeName.toLowerCase().includes(search.toLowerCase()) ||\r\n      r.id.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n\r\n  const openHistory = (history: LeaveRequest[] | undefined) => {\r\n    if (history && history.length > 0) {\r\n      setSelectedHistory(history);\r\n      setHistoryModalVisible(true);\r\n    } else {\r\n      Alert.alert(\"No history found for this request.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Header\r\n        isSidebarOpen={isSidebarOpen}\r\n        toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\r\n      />\r\n      <Sidebar\r\n        isOpen={isSidebarOpen}\r\n        toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\r\n        selectedTab={selectedTab}\r\n        handleTabChange={setSelectedTab}\r\n      />\r\n      <View\r\n        style={[styles.mainContent, { marginLeft: isSidebarOpen ? 250 : 0 }]}\r\n      >\r\n        <Text style={styles.title}>Leave Requests</Text>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Search by Employee Name or Request ID\"\r\n          value={search}\r\n          onChangeText={setSearch}\r\n        />\r\n        <ScrollView horizontal>\r\n          <View style={styles.table}>\r\n            <View style={styles.tableHeader}>\r\n              {[\r\n                \"ID\",\r\n                \"Name\",\r\n                \"Leave Type\",\r\n                \"Dates\",\r\n                \"Days\",\r\n                \"Reason\",\r\n                \"Balance\",\r\n                \"Status\",\r\n                \"Admin Comment\",\r\n                \"Actions\",\r\n              ].map((h) => (\r\n                <Text style={styles.headerCell} key={h}>\r\n                  {h}\r\n                </Text>\r\n              ))}\r\n            </View>\r\n            {filtered.map((r) => (\r\n              <View key={r.id} style={styles.row}>\r\n                <Text style={styles.cell}>{r.id}</Text>\r\n                <Text style={styles.cell}>{r.employeeName}</Text>\r\n                <Text style={styles.cell}>{r.leaveType}</Text>\r\n                <Text\r\n                  style={styles.cell}\r\n                >{`${r.startDate} - ${r.endDate}`}</Text>\r\n                <Text style={styles.cell}>{r.totalDays}</Text>\r\n                <Text style={styles.cell}>{r.reason}</Text>\r\n                <Text style={styles.cell}>{r.balance}</Text>\r\n                <Text\r\n                  style={[styles.cell, (styles as any)[r.status.toLowerCase()]]}\r\n                >\r\n                  {r.status}\r\n                </Text>\r\n                <Text style={styles.cell}>{r.adminComment || \"-\"}</Text>\r\n                <View style={styles.cell}>\r\n                  {r.status === \"Pending\" ? (\r\n                    <>\r\n                      <TouchableOpacity\r\n                        onPress={() => handleUpdateStatus(r.id, \"Approved\")}\r\n                      >\r\n                        <Text style={{ color: \"green\" }}>Approve</Text>\r\n                      </TouchableOpacity>\r\n                      <TouchableOpacity\r\n                        onPress={() => handleUpdateStatus(r.id, \"Rejected\")}\r\n                      >\r\n                        <Text style={{ color: \"red\" }}>Reject</Text>\r\n                      </TouchableOpacity>\r\n                    </>\r\n                  ) : (\r\n                    <TouchableOpacity onPress={() => openHistory(r.history)}>\r\n                      <Text style={{ color: \"#4A90E2\" }}>View History</Text>\r\n                    </TouchableOpacity>\r\n                  )}\r\n                </View>\r\n              </View>\r\n            ))}\r\n          </View>\r\n        </ScrollView>\r\n      </View>\r\n\r\n      <Modal visible={commentModalVisible} transparent animationType=\"slide\">\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"#000000aa\",\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              padding: 20,\r\n              borderRadius: 8,\r\n              width: \"90%\",\r\n            }}\r\n          >\r\n            <Text\r\n              style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 10 }}\r\n            >\r\n              Add Admin Comment\r\n            </Text>\r\n            <TextInput\r\n              placeholder=\"Enter comment...\"\r\n              value={adminComment}\r\n              onChangeText={setAdminComment}\r\n              style={{\r\n                borderWidth: 1,\r\n                borderColor: \"#ccc\",\r\n                borderRadius: 6,\r\n                padding: 10,\r\n                height: 80,\r\n                marginBottom: 10,\r\n              }}\r\n              multiline\r\n            />\r\n            <View style={{ flexDirection: \"row\", justifyContent: \"flex-end\" }}>\r\n              <TouchableOpacity\r\n                onPress={() => setCommentModalVisible(false)}\r\n                style={{ marginRight: 10 }}\r\n              >\r\n                <Text style={{ color: \"red\" }}>Cancel</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity onPress={confirmStatusUpdate}>\r\n                <Text style={{ color: \"green\" }}>Submit</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n\r\n      <Modal visible={historyModalVisible} transparent animationType=\"slide\">\r\n        <View\r\n          style={{\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            backgroundColor: \"#000000aa\",\r\n          }}\r\n        >\r\n          <View\r\n            style={{\r\n              backgroundColor: \"#fff\",\r\n              padding: 20,\r\n              borderRadius: 8,\r\n              width: \"90%\",\r\n              maxHeight: \"80%\",\r\n            }}\r\n          >\r\n            <Text\r\n              style={{ fontSize: 18, fontWeight: \"bold\", marginBottom: 10 }}\r\n            >\r\n              Leave History\r\n            </Text>\r\n            <ScrollView>\r\n              {selectedHistory?.map((h, index) => (\r\n                <View key={index} style={{ marginBottom: 10 }}>\r\n                  <Text>\r\n                    <Text style={{ fontWeight: \"bold\" }}>Type:</Text>{\" \"}\r\n                    {h.leaveType}\r\n                  </Text>\r\n                  <Text>\r\n                    <Text style={{ fontWeight: \"bold\" }}>Dates:</Text>{\" \"}\r\n                    {h.startDate} - {h.endDate}\r\n                  </Text>\r\n                  <Text>\r\n                    <Text style={{ fontWeight: \"bold\" }}>Days:</Text>{\" \"}\r\n                    {h.totalDays}\r\n                  </Text>\r\n                  <Text>\r\n                    <Text style={{ fontWeight: \"bold\" }}>Status:</Text>{\" \"}\r\n                    {h.status}\r\n                  </Text>\r\n                  <Text>\r\n                    <Text style={{ fontWeight: \"bold\" }}>Comment:</Text>{\" \"}\r\n                    {h.adminComment || \"-\"}\r\n                  </Text>\r\n                </View>\r\n              )) || <Text>No history available.</Text>}\r\n            </ScrollView>\r\n            <TouchableOpacity\r\n              onPress={() => setHistoryModalVisible(false)}\r\n              style={{ marginTop: 10 }}\r\n            >\r\n              <Text style={{ color: \"red\", textAlign: \"right\" }}>Close</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, flexDirection: \"row\" },\r\n  mainContent: { flex: 1, padding: 20, marginTop: 60 },\r\n  title: { fontSize: 24, fontWeight: \"bold\", marginBottom: 10 },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    padding: 10,\r\n    borderRadius: 6,\r\n    marginBottom: 10,\r\n  },\r\n  table: { minWidth: 1200 },\r\n  tableHeader: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#eee\",\r\n    paddingVertical: 10,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#ccc\",\r\n  },\r\n  row: {\r\n    flexDirection: \"row\",\r\n    paddingVertical: 12,\r\n    borderBottomWidth: 1,\r\n    borderColor: \"#eee\",\r\n  },\r\n  headerCell: { flex: 1, fontWeight: \"bold\", textAlign: \"center\" },\r\n  cell: { flex: 1, textAlign: \"center\" },\r\n  pending: {\r\n    backgroundColor: \"#f39c12\",\r\n    color: \"white\",\r\n    padding: 4,\r\n    borderRadius: 4,\r\n  },\r\n  approved: {\r\n    backgroundColor: \"#2ecc71\",\r\n    color: \"white\",\r\n    padding: 4,\r\n    borderRadius: 4,\r\n  },\r\n  rejected: {\r\n    backgroundColor: \"#e74c3c\",\r\n    color: \"white\",\r\n    padding: 4,\r\n    borderRadius: 4,\r\n  },\r\n});\r\n\r\nexport default LeaveRequestScreen;\r\n","import React from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\r\n\r\ninterface Schedule {\r\n  id: number;\r\n  employee: string;\r\n  start: string;\r\n  end: string;\r\n  location: string;\r\n  desc: string;\r\n}\r\n\r\ninterface MonthViewProps {\r\n  currentDate: Date;\r\n  schedules: Schedule[];\r\n  onCellPress: (employee: string, date: string) => void;\r\n  onShiftPress: (shift: Schedule) => void;\r\n}\r\n\r\nconst employeeColors: { [name: string]: string } = {\r\n  Sabin: '#4A90E2',\r\n  Pranish: '#2ECC71',\r\n  Aashish: '#E67E22',\r\n};\r\n\r\nconst MonthView: React.FC<MonthViewProps> = ({\r\n  currentDate,\r\n  schedules,\r\n  onCellPress,\r\n  onShiftPress,\r\n}) => {\r\n  const getStartOfMonth = (date: Date) => {\r\n    const start = new Date(date.getFullYear(), date.getMonth(), 1);\r\n    const offset = start.getDay(); // Sunday = 0\r\n    start.setDate(start.getDate() - offset);\r\n    return start;\r\n  };\r\n\r\n  const getDaysInMonthGrid = () => {\r\n    const start = getStartOfMonth(currentDate);\r\n    const days = [];\r\n    for (let i = 0; i < 42; i++) {\r\n      const day = new Date(start);\r\n      day.setDate(start.getDate() + i);\r\n      days.push(day);\r\n    }\r\n    return days;\r\n  };\r\n\r\n  const getShiftsForDay = (date: Date) => {\r\n    return schedules.filter((shift) => {\r\n      const shiftDate = new Date(shift.start).toDateString();\r\n      return new Date(date).toDateString() === shiftDate;\r\n    });\r\n  };\r\n\r\n  const days = getDaysInMonthGrid();\r\n\r\n  return (\r\n    <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n      <View style={styles.weekRow}>\r\n        {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map((d) => (\r\n          <Text key={d} style={styles.weekdayHeader}>{d}</Text>\r\n        ))}\r\n      </View>\r\n\r\n      <View style={styles.grid}>\r\n        {days.map((day, index) => {\r\n          const isCurrentMonth = day.getMonth() === currentDate.getMonth();\r\n          const dayStr = day.getDate().toString();\r\n          const shiftItems = getShiftsForDay(day);\r\n\r\n          return (\r\n            <TouchableOpacity\r\n              key={index}\r\n              style={[styles.cell, !isCurrentMonth && styles.outsideMonth]}\r\n              onPress={() => onCellPress('', day.toISOString().split('T')[0])}\r\n            >\r\n              <Text style={styles.dayNumber}>{dayStr}</Text>\r\n              {shiftItems.map((shift) => (\r\n                <TouchableOpacity\r\n                  key={shift.id}\r\n                  onPress={() => onShiftPress(shift)}\r\n                  style={[styles.shiftBlock, { backgroundColor: employeeColors[shift.employee] || '#888' }]}\r\n                >\r\n                  <Text style={styles.shiftText}>{shift.employee}</Text>\r\n                  <Text style={styles.shiftText}>{shift.start.split('T')[1].slice(0, 5)}</Text>\r\n                </TouchableOpacity>\r\n              ))}\r\n            </TouchableOpacity>\r\n          );\r\n        })}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  scrollContainer: {\r\n    paddingBottom: 20,\r\n  },\r\n  weekRow: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#f0f0f0',\r\n  },\r\n  weekdayHeader: {\r\n    flex: 1,\r\n    padding: 8,\r\n    textAlign: 'center',\r\n    fontWeight: '600',\r\n    color: '#333',\r\n  },\r\n  grid: {\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n  },\r\n  cell: {\r\n    width: `${100 / 7}%`,\r\n    borderWidth: 0.5,\r\n    borderColor: '#ccc',\r\n    padding: 4,\r\n    minHeight: 80,\r\n  },\r\n  outsideMonth: {\r\n    backgroundColor: '#f9f9f9',\r\n  },\r\n  dayNumber: {\r\n    fontSize: 12,\r\n    fontWeight: '600',\r\n    color: '#333',\r\n  },\r\n  shiftBlock: {\r\n    marginTop: 4,\r\n    paddingVertical: 2,\r\n    paddingHorizontal: 4,\r\n    borderRadius: 4,\r\n  },\r\n  shiftText: {\r\n    fontSize: 10,\r\n    color: '#fff',\r\n    fontWeight: '500',\r\n  },\r\n});\r\n\r\nexport default MonthView;\r\n","import React, { useRef, useEffect } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  FlatList,\r\n} from 'react-native';\r\n\r\ninterface Schedule {\r\n  id: number;\r\n  employee: string;\r\n  start: string;\r\n  end: string;\r\n  location: string;\r\n  desc: string;\r\n}\r\n\r\ninterface WeekViewProps {\r\n  currentDate: Date;\r\n  schedules: Schedule[];\r\n  onCellPress: (employee: string, date: string) => void;\r\n  onShiftPress: (shift: Schedule) => void;\r\n}\r\n\r\nconst employeeColors: { [name: string]: string } = {\r\n  Sabin: '#4A90E2',\r\n  Pranish: '#2ECC71',\r\n  Aashish: '#E67E22',\r\n};\r\n\r\nconst WeekView: React.FC<WeekViewProps> = ({ currentDate, schedules, onCellPress, onShiftPress }) => {\r\n  const scrollRef = useRef<FlatList<any>>(null);\r\n  const hours = Array.from({ length: 24 }, (_, i) => i);\r\n\r\n  const getWeekDays = () => {\r\n    const start = new Date(currentDate);\r\n    start.setDate(start.getDate() - start.getDay());\r\n    return Array.from({ length: 7 }).map((_, i) => {\r\n      const d = new Date(start);\r\n      d.setDate(start.getDate() + i);\r\n      return d;\r\n    });\r\n  };\r\n\r\n  const days = getWeekDays();\r\n\r\n  useEffect(() => {\r\n    const hour = new Date().getHours();\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollToOffset({ offset: hour * 60, animated: true });\r\n    }\r\n  }, []);\r\n\r\n  const formatHour = (hour: number) => {\r\n    if (hour === 0) return '12 AM';\r\n    if (hour < 12) return `${hour} AM`;\r\n    if (hour === 12) return '12 PM';\r\n    return `${hour - 12} PM`;\r\n  };\r\n\r\n  const getShiftsForCell = (date: Date, hour: number) => {\r\n    const cellStart = new Date(date);\r\n    cellStart.setHours(hour, 0, 0, 0);\r\n    const cellEnd = new Date(cellStart);\r\n    cellEnd.setHours(hour + 1);\r\n\r\n    return schedules.filter((shift) => {\r\n      const shiftStart = new Date(shift.start);\r\n      const shiftEnd = new Date(shift.end);\r\n      return shiftStart < cellEnd && shiftEnd > cellStart;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.headerRow}>\r\n        <View style={styles.timeColumn}><Text style={styles.timeText}>Time</Text></View>\r\n        {days.map((day, idx) => (\r\n          <View style={styles.columnHeader} key={idx}>\r\n            <Text style={styles.columnHeaderText}>\r\n              {day.toLocaleDateString('en-US', { weekday: 'short' })}\r\n            </Text>\r\n            <Text style={styles.columnDate}>\r\n              {day.getMonth() + 1}/{day.getDate()}\r\n            </Text>\r\n          </View>\r\n        ))}\r\n      </View>\r\n\r\n      <FlatList\r\n        ref={scrollRef}\r\n        data={hours}\r\n        \r\n        style={{ flexGrow: 1, height:144 }}\r\n        keyExtractor={(item) => item.toString()}\r\n        renderItem={({ item: hour }) => (\r\n          <View style={styles.row}>\r\n            <View style={styles.timeColumn}>\r\n              <Text style={styles.timeText}>{formatHour(hour)}</Text>\r\n            </View>\r\n            {days.map((date, dayIdx) => (\r\n              <TouchableOpacity\r\n                key={dayIdx}\r\n                style={styles.cell}\r\n                onPress={() => onCellPress('', date.toISOString().split('T')[0])}\r\n              >\r\n                {getShiftsForCell(date, hour)\r\n  .filter((shift) => {\r\n    const shiftStart = new Date(shift.start);\r\n    return shiftStart.getHours() === hour; // Only render in start hour\r\n  })\r\n  .map((shift) => {\r\n    const shiftStart = new Date(shift.start);\r\n    const shiftEnd = new Date(shift.end);\r\n    const overlapStart = Math.max(shiftStart.getTime(), new Date(date.setHours(hour, 0, 0, 0)).getTime());\r\n    const overlapEnd = Math.min(shiftEnd.getTime(), new Date(date.setHours(hour + 1, 0, 0, 0)).getTime());\r\n    const duration = (shiftEnd.getTime() - shiftStart.getTime()) / (1000 * 60); // minutes\r\n    const topOffset = (Math.max(0, (overlapStart - new Date(date.setHours(hour, 0, 0, 0)).getTime())) / (1000 * 60)) * 60;\r\n\r\n    return (\r\n      <TouchableOpacity\r\n        key={shift.id}\r\n        onPress={() => onShiftPress(shift)}\r\n        style={[styles.shiftBlock, {\r\n          backgroundColor: employeeColors[shift.employee] || '#888',\r\n          top: topOffset,\r\n          height: (duration / 60) * 60,\r\n          position: 'absolute',\r\n          left: 2,\r\n          right: 2,\r\n        }]}\r\n      >\r\n        <Text style={styles.shiftText}>{shift.employee}</Text>\r\n        <Text style={styles.shiftText}>\r\n          {shift.start.split('T')[1].slice(0, 5)} - {shift.end.split('T')[1].slice(0, 5)}\r\n        </Text>\r\n      </TouchableOpacity>\r\n    );\r\n  })}\r\n              </TouchableOpacity>\r\n            ))}\r\n          </View>\r\n        )}\r\n        showsVerticalScrollIndicator={false}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex:1 },\r\n  headerRow: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#f9f9f9',\r\n    borderBottomWidth: 1,\r\n    borderColor: '#ccc',\r\n  },\r\n  timeColumn: {\r\n    width: 60,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRightWidth: 1,\r\n    borderColor: '#ccc',\r\n    padding: 4,\r\n  },\r\n  columnHeader: {\r\n    flex: 1,\r\n    padding: 4,\r\n    alignItems: 'center',\r\n    borderRightWidth: 1,\r\n    borderColor: '#ccc',\r\n  },\r\n  columnHeaderText: { fontWeight: 'bold', fontSize: 12, color: '#333' },\r\n  columnDate: { fontWeight: '600', color: '#4A90E2' },\r\n  timeText: { fontSize: 12, color: '#666' },\r\n  row: {\r\n    flexDirection: 'row',\r\n    borderBottomWidth: 1,\r\n    borderColor: '#eee',\r\n    minHeight: 60,\r\n  },\r\n  cell: {\r\n    flex: 1,\r\n    borderRightWidth: 1,\r\n    borderColor: '#eee',\r\n    position: 'relative',\r\n  },\r\n  shiftBlock: {\r\n    backgroundColor: '#4A90E2',\r\n    padding: 4,\r\n    borderRadius: 4,\r\n    zIndex: 10,\r\n  },\r\n  shiftText: {\r\n    color: '#fff',\r\n    fontSize: 10,\r\n    fontWeight: '600',\r\n  },\r\n});\r\n\r\nexport default WeekView;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { View, Text, StyleSheet, FlatList, TouchableOpacity } from 'react-native';\r\n\r\ninterface Schedule {\r\n  id: number;\r\n  employee: string;\r\n  start: string;\r\n  end: string;\r\n  location: string;\r\n  desc: string;\r\n}\r\n\r\ninterface DayViewProps {\r\n  currentDate: Date;\r\n  schedules: Schedule[];\r\n  onCellPress: (employee: string, date: string) => void;\r\n  onShiftPress: (shift: Schedule) => void;\r\n}\r\n\r\nconst employeeColors: { [name: string]: string } = {\r\n  Sabin: '#4A90E2',\r\n  Pranish: '#2ECC71',\r\n  Aashish: '#E67E22',\r\n};\r\n\r\nconst DayView: React.FC<DayViewProps> = ({ currentDate, schedules, onCellPress, onShiftPress }) => {\r\n  const scrollRef = useRef<FlatList<any>>(null);\r\n  const [conflictShifts, setConflictShifts] = useState<Schedule[]>([]);\r\n  const hours = Array.from({ length: 24 }, (_, i) => i);\r\n\r\n  useEffect(() => {\r\n    const hour = new Date().getHours();\r\n    if (scrollRef.current) {\r\n      scrollRef.current.scrollToOffset({ offset: hour * 60, animated: true });\r\n    }\r\n  }, []);\r\n\r\n  const formatHour = (hour: number) => {\r\n    if (hour === 0) return '12 AM';\r\n    if (hour < 12) return `${hour} AM`;\r\n    if (hour === 12) return '12 PM';\r\n    return `${hour - 12} PM`;\r\n  };\r\n\r\n  // Function to detect shift conflicts\r\n  const isConflicting = (shift1: Schedule, shift2: Schedule) => {\r\n    const shift1Start = new Date(shift1.start).getTime();\r\n    const shift1End = new Date(shift1.end).getTime();\r\n    const shift2Start = new Date(shift2.start).getTime();\r\n    const shift2End = new Date(shift2.end).getTime();\r\n\r\n    return (\r\n      (shift1Start < shift2End && shift1End > shift2Start) ||\r\n      (shift2Start < shift1End && shift2End > shift1Start)\r\n    );\r\n  };\r\n\r\n  // Function to find conflicting shifts for a new shift\r\n  const findConflicts = (newShift: Schedule) => {\r\n    const conflicts: Schedule[] = [];\r\n    schedules.forEach((shift) => {\r\n      if (isConflicting(newShift, shift)) {\r\n        conflicts.push(shift);\r\n      }\r\n    });\r\n    return conflicts;\r\n  };\r\n\r\n  // Update conflict shifts whenever schedules change\r\n  useEffect(() => {\r\n    setConflictShifts([]);\r\n    schedules.forEach((shift) => {\r\n      const conflicts = findConflicts(shift);\r\n      if (conflicts.length > 0) {\r\n        setConflictShifts((prevConflicts) => [...prevConflicts, ...conflicts]);\r\n      }\r\n    });\r\n  }, [schedules]);\r\n\r\n  const getShiftsForHour = (hour: number) => {\r\n    const cellStart = new Date(currentDate);\r\n    cellStart.setHours(hour, 0, 0, 0);\r\n    const cellEnd = new Date(cellStart);\r\n    cellEnd.setHours(hour + 1, 0, 0, 0);\r\n\r\n    return schedules.filter((shift) => {\r\n      const shiftStart = new Date(shift.start);\r\n      return shiftStart >= cellStart && shiftStart < cellEnd;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <View style={styles.header}>\r\n        <Text style={styles.dateTitle}>\r\n          {currentDate.toLocaleDateString('en-US', {\r\n            weekday: 'long',\r\n            month: 'long',\r\n            day: 'numeric',\r\n            year: 'numeric',\r\n          })}\r\n        </Text>\r\n      </View>\r\n\r\n      <FlatList\r\n        ref={scrollRef}\r\n        data={hours}\r\n        contentContainerStyle={{ flexGrow: 1 }}\r\n        style={{ flexGrow: 1, height: 144 }}\r\n        keyExtractor={(item) => item.toString()}\r\n        renderItem={({ item: hour }) => {\r\n          const shiftsInThisHour = getShiftsForHour(hour);\r\n\r\n          return (\r\n            <View style={styles.row}>\r\n              <View style={styles.timeColumn}>\r\n                <Text style={styles.timeText}>{formatHour(hour)}</Text>\r\n              </View>\r\n\r\n              <TouchableOpacity\r\n                style={styles.cell}\r\n                onPress={() => onCellPress('', currentDate.toISOString().split('T')[0])}\r\n              >\r\n                {shiftsInThisHour.map((shift) => {\r\n                  const shiftStart = new Date(shift.start);\r\n                  const shiftEnd = new Date(shift.end);\r\n                  const durationMinutes = (shiftEnd.getTime() - shiftStart.getTime()) / (1000 * 60); // in minutes\r\n                  const offsetTop = shiftStart.getMinutes(); // from the top of the hour\r\n\r\n                  // Check for conflicts\r\n                  const isConflict = conflictShifts.some((conflictShift) => conflictShift.id === shift.id);\r\n\r\n                  return (\r\n                    <TouchableOpacity\r\n                      key={shift.id}\r\n                      onPress={() => onShiftPress(shift)}\r\n                      style={[\r\n                        styles.shiftBlock,\r\n                        {\r\n                          backgroundColor: isConflict ? '#d9534f' : employeeColors[shift.employee] || '#888',\r\n                          top: (offsetTop / 60) * 60,\r\n                          height: (durationMinutes / 60) * 60,\r\n                          position: 'absolute',\r\n                          left: 2,\r\n                          right: 2,\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Text style={styles.shiftText}>{shift.employee}</Text>\r\n                      <Text style={styles.shiftText}>\r\n                        {shift.start.split('T')[1].slice(0, 5)} - {shift.end.split('T')[1].slice(0, 5)}\r\n                      </Text>\r\n                    </TouchableOpacity>\r\n                  );\r\n                })}\r\n              </TouchableOpacity>\r\n            </View>\r\n          );\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1 },\r\n  header: {\r\n    paddingVertical: 12,\r\n    alignItems: 'center',\r\n    backgroundColor: '#f9f9f9',\r\n    borderBottomWidth: 1,\r\n    borderColor: '#ccc',\r\n  },\r\n  dateTitle: {\r\n    fontSize: 18,\r\n    fontWeight: '600',\r\n    color: '#333',\r\n  },\r\n  row: {\r\n    flexDirection: 'row',\r\n    borderBottomWidth: 1,\r\n    borderColor: '#eee',\r\n    minHeight: 60,\r\n    backgroundColor: '#fff',\r\n  },\r\n  timeColumn: {\r\n    width: 60,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    borderRightWidth: 1,\r\n    borderColor: '#ccc',\r\n  },\r\n  timeText: {\r\n    fontSize: 12,\r\n    color: '#666',\r\n  },\r\n  cell: {\r\n    flex: 1,\r\n    position: 'relative',\r\n    borderRightWidth: 1,\r\n    borderColor: '#eee',\r\n  },\r\n  shiftBlock: {\r\n    backgroundColor: '#4A90E2',\r\n    padding: 4,\r\n    borderRadius: 4,\r\n    zIndex: 10,\r\n  },\r\n  shiftText: {\r\n    color: '#fff',\r\n    fontSize: 10,\r\n    fontWeight: '600',\r\n  },\r\n});\r\n\r\nexport default DayView;\r\n","// GridCalendarView.tsx\r\nimport React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView } from 'react-native';\r\nimport MonthView from './MonthView';\r\nimport WeekView from './WeekView';\r\nimport DayView from './DayView';\r\n\r\ninterface Schedule {\r\n  id: number;\r\n  employee: string;\r\n  start: string;\r\n  end: string;\r\n  location: string;\r\n  desc: string;\r\n}\r\n\r\ninterface GridCalendarViewProps {\r\n  schedules: Schedule[];\r\n  onCellPress: (employee: string, date: string) => void;\r\n  onShiftPress: (shift: Schedule) => void;\r\n}\r\n\r\nconst GridCalendarView: React.FC<GridCalendarViewProps> = ({\r\n  schedules,\r\n  onCellPress,\r\n  onShiftPress,\r\n}) => {\r\n  const [viewMode, setViewMode] = useState<'month' | 'week' | 'day'>('month');\r\n  const [dateCursor, setDateCursor] = useState(new Date());\r\n  const [editingShift, setEditingShift] = useState<any | null>(null);\r\n\r\n\r\n  const handlePrev = () => {\r\n    const newDate = new Date(dateCursor);\r\n    if (viewMode === 'month') newDate.setMonth(dateCursor.getMonth() - 1);\r\n    else newDate.setDate(dateCursor.getDate() - (viewMode === 'week' ? 7 : 1));\r\n    setDateCursor(newDate);\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const newDate = new Date(dateCursor);\r\n    if (viewMode === 'month') newDate.setMonth(dateCursor.getMonth() + 1);\r\n    else newDate.setDate(dateCursor.getDate() + (viewMode === 'week' ? 7 : 1));\r\n    setDateCursor(newDate);\r\n  };\r\n\r\n  const handleToday = () => setDateCursor(new Date());\r\n\r\n  const getDateHeaderText = () => {\r\n    if (viewMode === 'month') {\r\n      return dateCursor.toLocaleDateString('en-US', {\r\n        month: 'long',\r\n        year: 'numeric',\r\n      });\r\n    } else if (viewMode === 'week') {\r\n      const start = new Date(dateCursor);\r\n      start.setDate(start.getDate() - start.getDay());\r\n      const end = new Date(start);\r\n      end.setDate(start.getDate() + 6);\r\n      return `${start.toLocaleDateString('en-US', {\r\n        month: 'short',\r\n        day: 'numeric',\r\n      })} - ${end.toLocaleDateString('en-US', {\r\n        month: 'short',\r\n        day: 'numeric',\r\n        year: 'numeric',\r\n      })}`;\r\n    } else {\r\n      return dateCursor.toLocaleDateString('en-US', {\r\n        weekday: 'long',\r\n        month: 'long',\r\n        day: 'numeric',\r\n        year: 'numeric',\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {/* Navigation Bar */}\r\n      <View style={styles.navBar}>\r\n        <View style={styles.leftNav}>\r\n          <TouchableOpacity onPress={handlePrev}><Text style={styles.navButton}>{'<'}</Text></TouchableOpacity>\r\n          <TouchableOpacity onPress={handleToday}><Text style={styles.navButton}>Today</Text></TouchableOpacity>\r\n          <TouchableOpacity onPress={handleNext}><Text style={styles.navButton}>{'>'}</Text></TouchableOpacity>\r\n        </View>\r\n\r\n        <View style={styles.rightNav}>\r\n          {['month', 'week', 'day'].map((mode) => (\r\n            <TouchableOpacity key={mode} onPress={() => setViewMode(mode as any)}>\r\n              <Text\r\n                style={[\r\n                  styles.viewToggle,\r\n                  viewMode === mode && styles.activeToggle,\r\n                ]}\r\n              >\r\n                {mode}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n      </View>\r\n\r\n      {/* Dynamic Date Header */}\r\n      <View style={styles.header}>\r\n        <Text style={styles.headerText}>{getDateHeaderText()}</Text>\r\n      </View>\r\n\r\n      {/* Calendar View */}\r\n      <ScrollView\r\n        style={{ flex: 1 }}\r\n        contentContainerStyle={{ flexGrow: 1 }}\r\n        showsVerticalScrollIndicator={true}\r\n      >\r\n        {viewMode === 'month' && (\r\n          <MonthView\r\n            currentDate={dateCursor}\r\n            schedules={schedules}\r\n            onCellPress={onCellPress}\r\n            onShiftPress={onShiftPress}\r\n          />\r\n        )}\r\n        {viewMode === 'week' && (\r\n          <WeekView\r\n            currentDate={dateCursor}\r\n            schedules={schedules}\r\n            onCellPress={onCellPress}\r\n            onShiftPress={onShiftPress}\r\n          />\r\n        )}\r\n        {viewMode === 'day' && (\r\n          <DayView\r\n            currentDate={dateCursor}\r\n            schedules={schedules}\r\n            onCellPress={onCellPress}\r\n            onShiftPress={onShiftPress}\r\n          />\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 10,\r\n    backgroundColor: '#fff',\r\n    minHeight: '100%',\r\n  },\r\n  navBar: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    marginBottom: 10,\r\n    alignItems: 'center',\r\n  },\r\n  leftNav: {\r\n    flexDirection: 'row',\r\n    gap: 10,\r\n  },\r\n  rightNav: {\r\n    flexDirection: 'row',\r\n    backgroundColor: '#f1f1f1',\r\n    borderRadius: 6,\r\n    overflow: 'hidden',\r\n  },\r\n  navButton: {\r\n    fontSize: 14,\r\n    fontWeight: '600',\r\n    color: '#333',\r\n    marginHorizontal: 8,\r\n    paddingVertical: 4,\r\n  },\r\n  viewToggle: {\r\n    paddingHorizontal: 12,\r\n    paddingVertical: 6,\r\n    color: '#333',\r\n  },\r\n  activeToggle: {\r\n    backgroundColor: '#4A90E2',\r\n    color: '#fff',\r\n  },\r\n  header: {\r\n    alignItems: 'center',\r\n    marginBottom: 8,\r\n  },\r\n  headerText: {\r\n    fontSize: 16,\r\n    fontWeight: '600',\r\n  },\r\n});\r\n\r\nexport default GridCalendarView;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Modal,\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n} from \"react-native\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport Toast from \"react-native-toast-message\";\r\n\r\ninterface Props {\r\n  visible: boolean;\r\n  onClose: () => void;\r\n  onSave: (data: any) => void;\r\n  employees: { id: string; name: string }[];\r\n  // locations: {id : string; name: string}[]; use this\r\n  locations: string[];\r\n  selectedEmployee?: string;\r\n  selectedDate?: string;\r\n  editingShift?: any;\r\n  onDelete?: () => void;\r\n}\r\n\r\nconst WebScheduleModal: React.FC<Props> = ({\r\n  visible,\r\n  onClose,\r\n  onSave,\r\n  employees,\r\n  locations,\r\n  selectedEmployee,\r\n  selectedDate,\r\n  editingShift,\r\n  onDelete,\r\n}) => {\r\n  const [employee, setEmployee] = useState(\"\");\r\n  const [location, setLocation] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [start, setStart] = useState(\"\");\r\n  const [end, setEnd] = useState(\"\");\r\n  const [errors, setErrors] = useState<{ [key: string]: string }>({});\r\n\r\n  useEffect(() => {\r\n    if (visible) {\r\n      if (editingShift) {\r\n        setEmployee(editingShift.employee);\r\n        setLocation(editingShift.location);\r\n        setDesc(editingShift.desc);\r\n        setStart(editingShift.start);\r\n        setEnd(editingShift.end);\r\n      } else {\r\n        setEmployee(selectedEmployee || \"\");\r\n        setStart(selectedDate ? `${selectedDate}T09:00` : \"\");\r\n        setEnd(selectedDate ? `${selectedDate}T17:00` : \"\");\r\n        setLocation(\"\");\r\n        setDesc(\"\");\r\n      }\r\n      setErrors({});\r\n    }\r\n  }, [visible, selectedEmployee, selectedDate, editingShift]);\r\n\r\n  const validate = () => {\r\n    const err: any = {};\r\n    if (!employee) err.employee = \"Select employee\";\r\n    if (!location) err.location = \"Select location\";\r\n    if (!desc) err.desc = \"Add description\";\r\n    if (!start || !end || new Date(start) >= new Date(end))\r\n      err.time = \"Start must be before end\";\r\n    setErrors(err);\r\n\r\n    if (Object.keys(err).length > 0) {\r\n      Toast.show({\r\n        type: \"error\",\r\n        text1: \"Validation Error\",\r\n        text2: \"Please fill out all fields correctly.\",\r\n      });\r\n    }\r\n\r\n    return Object.keys(err).length === 0;\r\n  };\r\n\r\n  const handleSave = () => {\r\n    if (!validate()) return;\r\n    onSave({ employee, location, desc, start, end });\r\n    Toast.show({\r\n      type: \"success\",\r\n      text1: editingShift ? \"Shift Updated\" : \"Schedule Created\",\r\n      text2: `${employee}'s shift has been ${\r\n        editingShift ? \"updated\" : \"scheduled\"\r\n      } successfully.`,\r\n    });\r\n    onClose();\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    onDelete?.();\r\n    Toast.show({\r\n      type: \"info\",\r\n      text1: \"Shift Deleted\",\r\n      text2: `${employee}'s shift was removed.`,\r\n    });\r\n    onClose();\r\n  };\r\n\r\n  return (\r\n    <Modal visible={visible} animationType=\"fade\" transparent>\r\n      <View style={styles.overlay}>\r\n        <View style={styles.modal}>\r\n          <Text style={styles.title}>\r\n            {editingShift ? \"Edit Shift\" : \"Create Schedule\"}\r\n          </Text>\r\n\r\n          <View style={styles.row}>\r\n            <View style={styles.field}>\r\n              <Text style={styles.label}>Employee</Text>\r\n              <View style={styles.pickerWrapper}>\r\n                <Picker selectedValue={employee} onValueChange={setEmployee}>\r\n                  <Picker.Item label=\"Select Employee\" value=\"\" />\r\n                  {employees.map((e) => (\r\n                    <Picker.Item key={e.id} label={e.name} value={e.id} />\r\n                  ))}\r\n                </Picker>\r\n              </View>\r\n              {errors.employee && (\r\n                <Text style={styles.error}>{errors.employee}</Text>\r\n              )}\r\n            </View>\r\n\r\n            <View style={styles.field}>\r\n              <Text style={styles.label}>Location</Text>\r\n              <View style={styles.pickerWrapper}>\r\n                <Picker selectedValue={location} onValueChange={setLocation}>\r\n                  {/* <Picker.Item label=\"Select Location\" value=\"\" />\r\n                  {locations.map((l) => (\r\n  <Picker.Item key={l.id} label={l.name} value={l.id} />\r\n))} */}\r\n                  {locations.map((l) => (\r\n                    <Picker.Item key={l} label={l} value={l} />\r\n                  ))}\r\n                </Picker>\r\n              </View>\r\n              {errors.location && (\r\n                <Text style={styles.error}>{errors.location}</Text>\r\n              )}\r\n            </View>\r\n          </View>\r\n\r\n          <View style={styles.row}>\r\n            <View style={styles.field}>\r\n              <Text style={styles.label}>Start Time</Text>\r\n              <TextInput\r\n                value={start}\r\n                onChangeText={setStart}\r\n                style={styles.input}\r\n                placeholder=\"YYYY-MM-DDTHH:mm\"\r\n              />\r\n            </View>\r\n            <View style={styles.field}>\r\n              <Text style={styles.label}>End Time</Text>\r\n              <TextInput\r\n                value={end}\r\n                onChangeText={setEnd}\r\n                style={styles.input}\r\n                placeholder=\"YYYY-MM-DDTHH:mm\"\r\n              />\r\n            </View>\r\n          </View>\r\n          {errors.time && <Text style={styles.error}>{errors.time}</Text>}\r\n\r\n          <View>\r\n            <Text style={styles.label}>Description</Text>\r\n            <TextInput\r\n              style={[styles.input, { height: 60 }]}\r\n              multiline\r\n              value={desc}\r\n              onChangeText={setDesc}\r\n              placeholder=\"Shift description...\"\r\n            />\r\n            {errors.desc && <Text style={styles.error}>{errors.desc}</Text>}\r\n          </View>\r\n\r\n          <View style={styles.actions}>\r\n            {editingShift && (\r\n              <TouchableOpacity\r\n                onPress={handleDelete}\r\n                style={[styles.btn, styles.delete]}\r\n              >\r\n                <Text style={styles.btnText}>Delete</Text>\r\n              </TouchableOpacity>\r\n            )}\r\n            <TouchableOpacity\r\n              onPress={onClose}\r\n              style={[styles.btn, styles.cancel]}\r\n            >\r\n              <Text style={styles.btnText}>Cancel</Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              onPress={handleSave}\r\n              style={[styles.btn, styles.save]}\r\n            >\r\n              <Text style={styles.btnText}>Save</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  overlay: {\r\n    flex: 1,\r\n    backgroundColor: \"#00000088\",\r\n    justifyContent: \"center\",\r\n    paddingHorizontal: 50,\r\n  },\r\n  modal: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 12,\r\n    padding: 30,\r\n    gap: 14,\r\n  },\r\n  title: {\r\n    fontSize: 22,\r\n    fontWeight: \"bold\",\r\n    textAlign: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  row: { flexDirection: \"row\", gap: 20 },\r\n  field: { flex: 1 },\r\n  label: { fontWeight: \"600\", marginBottom: 4, fontSize: 14 },\r\n  input: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 6,\r\n    padding: 10,\r\n    fontSize: 14,\r\n  },\r\n  pickerWrapper: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ccc\",\r\n    borderRadius: 6,\r\n    overflow: \"hidden\",\r\n  },\r\n  error: { color: \"#d9534f\", fontSize: 12, marginTop: 4 },\r\n  actions: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"flex-end\",\r\n    gap: 12,\r\n    marginTop: 20,\r\n  },\r\n  btn: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 18,\r\n    borderRadius: 6,\r\n  },\r\n  save: { backgroundColor: \"#4A90E2\" },\r\n  cancel: { backgroundColor: \"#888\" },\r\n  delete: { backgroundColor: \"#d9534f\" },\r\n  btnText: { color: \"#fff\", fontWeight: \"bold\" },\r\n});\r\n\r\nexport default WebScheduleModal;\r\n","import axios, { AxiosError } from \"axios\";\r\nimport { ApiError, ApiResponse } from \"../utils/apiResponse\";\r\nimport { getToken, Plat } from \"./token\";\r\n\r\nexport const API = axios.create({\r\n  baseURL: \r\n  \"https://workhive.space\",\r\n  // \"https://8c1f-2406-2d40-4d55-6c10-bdc3-9abf-864e-c64f.ngrok-free.app\",\r\n  // \"http://localhost:3000\",\r\n\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\ntype getShiftsForLoggedInUserResponse = {\r\n  id: string;\r\n  employeeId: string;\r\n  officeId: string;\r\n  startTime: string;\r\n  endTime: string;\r\n};\r\n\r\nexport class Shifts {\r\n  id: string;\r\n  employeeId: string;\r\n  employeeName: string;\r\n  officeId: string;\r\n  startTime: string;\r\n  endTime: string;\r\n  officeLocation: OfficeLocation;\r\n\r\n  constructor(\r\n    id: string,\r\n    employeeId: string,\r\n    employeeName: string,\r\n    officeId: string,\r\n    startTime: string,\r\n    endTime: string,\r\n    officeLocation: OfficeLocation\r\n  ) {\r\n    this.id = id;\r\n    this.employeeId = employeeId;\r\n    this.employeeName = employeeName;\r\n    this.officeId = officeId;\r\n    this.startTime = startTime;\r\n    this.endTime = endTime;\r\n    this.officeLocation = officeLocation;\r\n  }\r\n}\r\nclass OfficeLocation {\r\n  id: string;\r\n  name: string;\r\n  latitude: string;\r\n  longitude: string;\r\n  radius: number;\r\n\r\n  constructor(\r\n    id: string,\r\n    name: string,\r\n    latitude: string,\r\n    longitude: string,\r\n    radius: number\r\n  ) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.latitude = latitude;\r\n    this.longitude = longitude;\r\n    this.radius = radius;\r\n  }\r\n\r\n  getCoordinates(): string {\r\n    return `Latitude: ${this.latitude}, Longitude: ${this.longitude}`;\r\n  }\r\n}\r\n\r\nexport const getShiftsForLoggedInUser = async () => {\r\n  try {\r\n    const accessToken = (await getToken(\"accessToken\")) ?? \"\";\r\n    const response = await API.get(\"api/roster/getShiftsForLoggedInUser\", {\r\n      params: { accessToken },\r\n    });\r\n\r\n    const res = response.data as ApiResponse<[Shifts]>;\r\n    return res;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n//for manager/admin: fetch all shifts for all users\r\nexport const getShiftsForAllUsers = async () => {\r\n  try {\r\n    const accessToken = (await getToken(\"accessToken\")) ?? \"\";\r\n    const response = await API.get(\"api/roster/\", {\r\n      params: { accessToken },\r\n    });\r\n    const res = response.data as ApiResponse<Shifts[]>;\r\n    return res;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n//for manager/admin: create a shift\r\nexport const createShift = async (\r\n  employeeId: string,\r\n  officeId: string,\r\n  startTime: string,\r\n  endTime: string,\r\n  date: string,\r\n  description: string\r\n) => {\r\n  try {\r\n    const accessToken = (await getToken(\"accessToken\", Plat.WEB)) ?? \"\";\r\n    const response = await API.post(\r\n      \"api/roster/createShift\",\r\n      { employeeId, officeId, startTime, endTime, date, description },\r\n      {\r\n        params: { accessToken },\r\n      }\r\n    );\r\n    const res = response.data as ApiResponse<Shifts>;\r\n    return res;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n//for manager/admin: update a shift\r\nexport const updateShift = async (\r\n  shiftId: string,\r\n  employeeId: string,\r\n  officeId: string,\r\n  startTime: string,\r\n  endTime: string\r\n) => {\r\n  try {\r\n    const accessToken = (await getToken(\"accessToken\")) ?? \"\";\r\n    const response = await API.put(\r\n      `api/roster/updateShift/${shiftId}`,\r\n      { employeeId, officeId, startTime, endTime },\r\n      {\r\n        params: { accessToken },\r\n      }\r\n    );\r\n    const res = response.data as ApiResponse<Shifts>;\r\n    return res;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n\r\n//for manager/admin: delete a shift\r\nexport const deleteShift = async (shiftId: string) => {\r\n  try {\r\n    const accessToken = (await getToken(\"accessToken\")) ?? \"\";\r\n    const response = await API.delete(`api/roster/deleteShift/${shiftId}`, {\r\n      params: { accessToken },\r\n    });\r\n    const res = response.data as ApiResponse<Shifts>;\r\n    return res;\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    } else {\r\n      return new ApiError(400, {}, \"Something went wrong\");\r\n    }\r\n  }\r\n};\r\n","// SchedulesScreen.tsx (Pro Version)\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  Dimensions,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  FlatList,\r\n  Modal,\r\n} from \"react-native\";\r\nimport Header from \"../components/Header\";\r\nimport Sidebar from \"../components/Sidebar\";\r\nimport GridCalendarView from \"../components/schedule/GridCalendarView\";\r\nimport WebScheduleModal from \"../components/schedule/WebScheduleModal\";\r\nimport { fetchAllUsers } from \"../../../api/server/serverApi\";\r\nimport { EmployeeDetails } from \"../../../api/server/server\";\r\nimport { ApiError } from \"../../../api/utils/apiResponse\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport { createShift } from \"../../../api/auth/shiftApi\";\r\n// import FilterControls from '../components/FilterControls';\r\n\r\nconst initialSchedules = [\r\n  {\r\n    id: 1,\r\n    employee: \"Sabin\",\r\n    start: \"2025-04-10T09:00:00\",\r\n    end: \"2025-04-10T17:00:00\",\r\n    location: \"Melbourne\",\r\n    desc: \"Morning shift\",\r\n  },\r\n  {\r\n    id: 2,\r\n    employee: \"Pranish\",\r\n    start: \"2025-04-11T22:00:00\",\r\n    end: \"2025-04-12T06:00:00\",\r\n    location: \"Sydney\",\r\n    desc: \"Night shift\",\r\n  },\r\n];\r\n\r\nconst employees = [\"Sabin\", \"Pranish\", \"Aashish\"];\r\nconst locations = [\"Melbourne\", \"Sydney\", \"Brisbane\"];\r\n\r\nconst SchedulesScreen: React.FC = () => {\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const [activeTab, setActiveTab] = useState<\"calendar\" | \"list\" | \"auto\">(\r\n    \"calendar\"\r\n  );\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [selectedEmployee, setSelectedEmployee] = useState(\"\");\r\n  const [employeeNames, setEmployeeNames] = useState<\r\n    { id: string; name: string }[]\r\n  >([]);\r\n\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const [schedules, setSchedules] = useState(initialSchedules);\r\n  const [employeeFilter, setEmployeeFilter] = useState(\"\");\r\n  const [locationFilter, setLocationFilter] = useState(\"\");\r\n  const [editingShift, setEditingShift] = useState<any | null>(null);\r\n\r\n  const isMobile = Dimensions.get(\"window\").width <= 768;\r\n\r\n  useEffect(() => {\r\n    const fetchEmployees = async () => {\r\n      const res = await fetchAllUsers();\r\n      if (!(res instanceof ApiError)) {\r\n        const mapped = res.data.map((emp: EmployeeDetails) => ({\r\n          id: emp.Employee.id,\r\n          name: `${emp.Employee.firstName} ${emp.Employee.lastName}`,\r\n        }));\r\n        setEmployeeNames(mapped);\r\n      }\r\n    };\r\n\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  //todo (error: backend missing/incomplete)\r\n  const handleCreateSchedule = async (newSchedule: any) => {\r\n    const payload = {\r\n      employeeId: newSchedule.employee,\r\n      officeId: newSchedule.location,\r\n      startTime: newSchedule.start,\r\n      endTime: newSchedule.end,\r\n      date: newSchedule.start.split(\"T\")[0],\r\n      description: newSchedule.desc,\r\n    };\r\n\r\n    try {\r\n      const res = await createShift(\r\n        payload.employeeId,\r\n        payload.officeId,\r\n        payload.startTime,\r\n        payload.endTime,\r\n        payload.date,\r\n        payload.description\r\n      );\r\n\r\n      if (res instanceof ApiError) {\r\n        Toast.show({\r\n          type: \"error\",\r\n          text1: \"Failed to create shift\",\r\n          text2: res.message,\r\n        });\r\n      } else {\r\n        Toast.show({\r\n          type: \"success\",\r\n          text1: \"Shift created!\",\r\n          text2: \"The shift has been added successfully.\",\r\n        });\r\n\r\n        // Optional: update local state\r\n        const name =\r\n          employeeNames.find((e) => e.id === newSchedule.employee)?.name ||\r\n          newSchedule.employee;\r\n        setSchedules((prev) => [\r\n          ...prev,\r\n          {\r\n            id: prev.length + 1, //res.data.id,\r\n            employee: name, // show name in UI\r\n            location: newSchedule.location,\r\n            desc: newSchedule.desc,\r\n            start: newSchedule.start,\r\n            end: newSchedule.end,\r\n          },\r\n        ]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Unexpected error while creating shift:\", err);\r\n      Toast.show({\r\n        type: \"error\",\r\n        text1: \"Error\",\r\n        text2: \"Something went wrong while creating the shift.\",\r\n      });\r\n    }\r\n\r\n    setModalVisible(false);\r\n  };\r\n\r\n  const handleDeleteSchedule = (id: number) => {\r\n    setSchedules((prev) => prev.filter((shift) => shift.id !== id));\r\n  };\r\n\r\n  const filteredSchedules = schedules.filter((s) => {\r\n    const matchEmployee = employeeFilter ? s.employee === employeeFilter : true;\r\n    const matchLocation = locationFilter ? s.location === locationFilter : true;\r\n    return matchEmployee && matchLocation;\r\n  });\r\n\r\n  const handleEditSchedule = (shift: any) => {\r\n    setEditingShift(shift);\r\n    setModalVisible(true);\r\n  };\r\n\r\n  const handleUpdateSchedule = (updatedShift: any) => {\r\n    setSchedules((prev) =>\r\n      prev.map((shift) => (shift.id === updatedShift.id ? updatedShift : shift))\r\n    );\r\n    setModalVisible(false);\r\n    setEditingShift(null);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Header\r\n        isSidebarOpen={isSidebarOpen}\r\n        toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\r\n      />\r\n      <Sidebar\r\n        isOpen={isSidebarOpen}\r\n        toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)}\r\n        selectedTab=\"Schedules\"\r\n        handleTabChange={() => setActiveTab(\"calendar\")}\r\n      />\r\n\r\n      <View\r\n        style={[\r\n          styles.mainContent,\r\n          { marginLeft: isMobile ? 0 : isSidebarOpen ? 250 : 0 },\r\n        ]}\r\n      >\r\n        {/* Tabs */}\r\n        <View style={styles.tabBar}>\r\n          {[\"calendar\", \"list\", \"auto\"].map((tab) => (\r\n            <TouchableOpacity\r\n              key={tab}\r\n              style={[styles.tabButton, activeTab === tab && styles.tabActive]}\r\n              onPress={() => setActiveTab(tab as any)}\r\n            >\r\n              <Text style={styles.tabText}>\r\n                {tab === \"calendar\"\r\n                  ? \"Calendar View\"\r\n                  : tab === \"list\"\r\n                  ? \"List View\"\r\n                  : \"Auto-Assign\"}\r\n              </Text>\r\n            </TouchableOpacity>\r\n          ))}\r\n        </View>\r\n\r\n        {/* Filters\r\n        <FilterControls\r\n          employees={employees}\r\n          locations={locations}\r\n          employeeFilter={employeeFilter}\r\n          locationFilter={locationFilter}\r\n          setEmployeeFilter={setEmployeeFilter}\r\n          setLocationFilter={setLocationFilter}\r\n        /> */}\r\n\r\n        {/* Content Views */}\r\n        {activeTab === \"calendar\" && (\r\n          <GridCalendarView\r\n            schedules={filteredSchedules}\r\n            onCellPress={(emp, date) => {\r\n              setSelectedEmployee(emp);\r\n              setSelectedDate(date);\r\n              setModalVisible(true);\r\n            }}\r\n            onShiftPress={(shift) => {\r\n              setEditingShift(shift); // Pass the selected shift\r\n              setModalVisible(true);\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {/* List View */}\r\n        {activeTab === \"list\" && (\r\n          <FlatList\r\n            data={filteredSchedules}\r\n            keyExtractor={(item) => item.id.toString()}\r\n            renderItem={({ item }) => (\r\n              <View style={styles.card}>\r\n                <Text style={styles.cardTitle}>{item.employee}</Text>\r\n                <Text>\r\n                  {new Date(item.start).toLocaleString()} -{\" \"}\r\n                  {new Date(item.end).toLocaleString()}\r\n                </Text>\r\n                <Text>{item.location}</Text>\r\n                <Text>{item.desc}</Text>\r\n\r\n                <View style={styles.cardActions}>\r\n                  <TouchableOpacity\r\n                    style={styles.editButton}\r\n                    onPress={() => handleEditSchedule(item)}\r\n                  >\r\n                    <Text style={styles.buttonText}>Edit</Text>\r\n                  </TouchableOpacity>\r\n\r\n                  <TouchableOpacity\r\n                    style={styles.deleteButton}\r\n                    onPress={() => handleDeleteSchedule(item.id)}\r\n                  >\r\n                    <Text style={styles.buttonText}>Delete</Text>\r\n                  </TouchableOpacity>\r\n                </View>\r\n              </View>\r\n            )}\r\n          />\r\n        )}\r\n\r\n        {activeTab === \"auto\" && (\r\n          <View>\r\n            <Text style={styles.autoAssignTitle}>\r\n              Auto-Assign coming soon...\r\n            </Text>\r\n          </View>\r\n        )}\r\n\r\n        <WebScheduleModal\r\n          visible={modalVisible}\r\n          onClose={() => {\r\n            setModalVisible(false);\r\n            setEditingShift(null);\r\n          }}\r\n          onSave={handleCreateSchedule}\r\n          onDelete={() => {\r\n            if (editingShift) {\r\n              handleDeleteSchedule(editingShift.id);\r\n              setEditingShift(null);\r\n              setModalVisible(false);\r\n            }\r\n          }}\r\n          employees={employeeNames}\r\n          locations={locations}\r\n          selectedEmployee={selectedEmployee}\r\n          selectedDate={selectedDate}\r\n          editingShift={editingShift}\r\n        />\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1 },\r\n  mainContent: { flex: 1, padding: 20, marginTop: 60 },\r\n  tabBar: { flexDirection: \"row\", gap: 10, marginBottom: 20 },\r\n  tabButton: {\r\n    backgroundColor: \"#f2f2f2\",\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 16,\r\n    borderRadius: 6,\r\n  },\r\n  tabActive: {\r\n    backgroundColor: \"#fff\",\r\n    borderWidth: 1,\r\n    borderColor: \"#4A90E2\",\r\n  },\r\n  tabText: { fontSize: 16, fontWeight: \"500\" },\r\n  listItem: {\r\n    backgroundColor: \"#fff\",\r\n    padding: 14,\r\n    borderRadius: 8,\r\n    marginBottom: 10,\r\n    elevation: 2,\r\n  },\r\n  bold: { fontWeight: \"bold\", fontSize: 16 },\r\n  autoAssignTitle: { fontSize: 18, fontWeight: \"bold\", padding: 20 },\r\n  card: {\r\n    backgroundColor: \"#fff\",\r\n    padding: 14,\r\n    borderRadius: 8,\r\n    marginBottom: 10,\r\n    elevation: 2,\r\n  },\r\n  cardTitle: { fontSize: 18, fontWeight: \"bold\" },\r\n  cardActions: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginTop: 10,\r\n  },\r\n  editButton: {\r\n    backgroundColor: \"#4A90E2\",\r\n    padding: 8,\r\n    borderRadius: 4,\r\n  },\r\n  deleteButton: {\r\n    backgroundColor: \"#D9534F\",\r\n    padding: 8,\r\n    borderRadius: 4,\r\n  },\r\n  buttonText: { color: \"#fff\" },\r\n});\r\nexport default SchedulesScreen;\r\n","import JWT from \"expo-jwt\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  TextInput,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Text,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { getToken } from \"../../../api/auth/token\";\r\nimport { editCurrentUserDetail } from \"../../../api/auth/profileApi\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport { editUserDetail } from \"../../../api/auth/authApi\";\r\nimport { AxiosError } from \"axios\";\r\nimport { ApiError } from \"../../../api/utils/apiResponse\";\r\n\r\nconst EditUserDetailScreens = () => {\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n\r\n  const handleChangePassword = async () => {\r\n    if (!currentPassword || !newPassword || !confirmNewPassword) {\r\n      Toast.show({\r\n        text1: \"Please fill in all fields\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    if (newPassword !== confirmNewPassword) {\r\n      Toast.show({\r\n        text1: \"New password doesn't match\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (newPassword.length < 8 || currentPassword.length < 8) {\r\n      Toast.show({\r\n        text1: \"Password length must be at le 8 characters. \",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Call the backend API to change password\r\n      const accessToken = await getToken(\"accessToken\");\r\n      // Ensure we have a valid access token\r\n      if (!accessToken) {\r\n        alert(\"Token is missing. Please log in again.\");\r\n        return;\r\n      }\r\n\r\n      //   const response = await editCurrentUserDetail(\r\n      //     currentPassword,\r\n      //     \"password\",\r\n      //     newPassword\r\n      //   );\r\n\r\n      const res = await editUserDetail({\r\n        editType: \"password\",\r\n        newDetail: newPassword,\r\n        password: currentPassword,\r\n      });\r\n\r\n      if (res.statusCode === 200) {\r\n        Toast.show({\r\n          text1: \"Password changed successfully! \",\r\n          type: \"success\",\r\n          position: \"bottom\",\r\n        });\r\n        setCurrentPassword(\"\");\r\n        setNewPassword(\"\");\r\n        setConfirmNewPassword(\"\");\r\n      } else if (res instanceof ApiError) {\r\n        Toast.show({\r\n          text1: res.message,\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n        });\r\n      } else {\r\n        Toast.show({\r\n          text1: \"Something went wrong\",\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Toast.show({\r\n        text1: \"Something went wrong\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.section}>\r\n      <Text style={styles.sectionTitle}>Change your password</Text>\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Current Password\"\r\n        secureTextEntry\r\n        value={currentPassword}\r\n        onChangeText={setCurrentPassword}\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"New Password\"\r\n        secureTextEntry\r\n        value={newPassword}\r\n        onChangeText={setNewPassword}\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Confirm New Password\"\r\n        secureTextEntry\r\n        value={confirmNewPassword}\r\n        onChangeText={setConfirmNewPassword}\r\n      />\r\n\r\n      <TouchableOpacity\r\n        style={styles.changePasswordButton}\r\n        onPress={handleChangePassword}\r\n      >\r\n        <Text style={styles.changePasswordButtonText}>Update Password</Text>\r\n      </TouchableOpacity>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  section: {\r\n    marginTop: 30,\r\n    margin: \"20\",\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    color: \"#393D3F\",\r\n    marginBottom: 15,\r\n  },\r\n\r\n  changePasswordButton: {\r\n    backgroundColor: \"#007BFF\",\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  changePasswordButtonText: {\r\n    color: \"white\",\r\n    fontSize: 18,\r\n  },\r\n\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E0E0E0\",\r\n    borderRadius: 10,\r\n    padding: 14,\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default EditUserDetailScreens;\r\n","import JWT from \"expo-jwt\";\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  TextInput,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Text,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { getToken } from \"../../../api/auth/token\";\r\nimport { editCurrentUserDetail } from \"../../../api/auth/profileApi\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport { editUserDetail } from \"../../../api/auth/authApi\";\r\nimport { AxiosError } from \"axios\";\r\nimport { ApiError } from \"../../../api/utils/apiResponse\";\r\n\r\nconst EditDetailScreens = () => {\r\n  const [currentPassword, setCurrentPassword] = useState(\"\");\r\n  const [newPassword, setNewPassword] = useState(\"\");\r\n  const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n\r\n  const handleChangePassword = async () => {\r\n    if (!currentPassword || !newPassword || !confirmNewPassword) {\r\n      Toast.show({\r\n        text1: \"Please fill in all fields\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    if (newPassword !== confirmNewPassword) {\r\n      Toast.show({\r\n        text1: \"New password doesn't match\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (newPassword.length < 8 || currentPassword.length < 8) {\r\n      Toast.show({\r\n        text1: \"Password length must be at le 8 characters. \",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Call the backend API to change password\r\n      const accessToken = await getToken(\"accessToken\");\r\n      // Ensure we have a valid access token\r\n      if (!accessToken) {\r\n        alert(\"Token is missing. Please log in again.\");\r\n        return;\r\n      }\r\n\r\n      //   const response = await editCurrentUserDetail(\r\n      //     currentPassword,\r\n      //     \"password\",\r\n      //     newPassword\r\n      //   );\r\n\r\n      const res = await editUserDetail({\r\n        editType: \"password\",\r\n        newDetail: newPassword,\r\n        password: currentPassword,\r\n      });\r\n\r\n      if (res.statusCode === 200) {\r\n        Toast.show({\r\n          text1: \"Password changed successfully! \",\r\n          type: \"success\",\r\n          position: \"bottom\",\r\n        });\r\n        setCurrentPassword(\"\");\r\n        setNewPassword(\"\");\r\n        setConfirmNewPassword(\"\");\r\n      } else if (res instanceof ApiError) {\r\n        Toast.show({\r\n          text1: res.message,\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n        });\r\n      } else {\r\n        Toast.show({\r\n          text1: \"Something went wrong\",\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      Toast.show({\r\n        text1: \"Something went wrong\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView style={styles.section}>\r\n      <Text style={styles.sectionTitle}>Change your password</Text>\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Current Password\"\r\n        secureTextEntry\r\n        value={currentPassword}\r\n        onChangeText={setCurrentPassword}\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"New Password\"\r\n        secureTextEntry\r\n        value={newPassword}\r\n        onChangeText={setNewPassword}\r\n      />\r\n\r\n      <TextInput\r\n        style={styles.input}\r\n        placeholder=\"Confirm New Password\"\r\n        secureTextEntry\r\n        value={confirmNewPassword}\r\n        onChangeText={setConfirmNewPassword}\r\n      />\r\n\r\n      <TouchableOpacity\r\n        style={styles.changePasswordButton}\r\n        onPress={handleChangePassword}\r\n      >\r\n        <Text style={styles.changePasswordButtonText}>Update Password</Text>\r\n      </TouchableOpacity>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  section: {\r\n    marginTop: 30,\r\n    margin: \"20\",\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    color: \"#393D3F\",\r\n    marginBottom: 15,\r\n  },\r\n\r\n  changePasswordButton: {\r\n    backgroundColor: \"#007BFF\",\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  changePasswordButtonText: {\r\n    color: \"white\",\r\n    fontSize: 18,\r\n  },\r\n\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E0E0E0\",\r\n    borderRadius: 10,\r\n    padding: 14,\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n});\r\n\r\nexport default EditDetailScreens;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Platform,\r\n  Dimensions,\r\n  Button,\r\n  KeyboardAvoidingView,\r\n  SafeAreaView,\r\n  Modal,\r\n  Alert,\r\n} from \"react-native\";\r\n\r\nimport Toast from \"react-native-toast-message\";\r\nimport { sendOTP, verifyOTP } from \"../../../api/auth/authApi\";\r\nimport { ApiError } from \"../../../api/utils/apiResponse\";\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nconst isLandscape = width > height;\r\n\r\nexport const PartialRegesterScreen = ({ navigation }: { navigation: any }) => {\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [verification, setVerification] = useState(\"\");\r\n  const [phoneVerificationModelVisible, setPhoneVerificationModelVisible] =\r\n    useState(false);\r\n\r\n  function validatePhoneNumber(phoneNumer: string): boolean {\r\n    if (!phoneNumer.startsWith(\"+61\")) {\r\n      phoneNumer = \"+61\" + phoneNumer;\r\n    }\r\n\r\n    if (phoneNumer.length != 12) return false;\r\n    const newNum = Number.parseInt(phoneNumer.slice(0));\r\n    console.log(newNum);\r\n    if (!isNaN(newNum)) return true;\r\n    else return false;\r\n  }\r\n\r\n  const handleNext = () => {\r\n    setPhoneVerificationModelVisible(false);\r\n    navigation.navigate(\"ParitalRegestrationPasswordScreen\");\r\n  };\r\n\r\n  const handleSendVerification = async () => {\r\n    console.log(\"Pressed\");\r\n    if (!phone) {\r\n      Toast.show({\r\n        text1: \"Enter your phone number first\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n\r\n    if (!validatePhoneNumber(phone)) {\r\n      Toast.show({\r\n        text1: \"Phone Number is Invalid.\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n      return;\r\n    }\r\n    await sendVerification(phone);\r\n  };\r\n\r\n  const sendVerification = async (phoneNumber: string) => {\r\n    try {\r\n      if (!phoneNumber.startsWith(\"+61\")) {\r\n        phoneNumber = \"+61\" + phoneNumber;\r\n      }\r\n      console.log(phoneNumber);\r\n      const res = await sendOTP({ phoneNumber: phoneNumber });\r\n      if (res.success) {\r\n        Toast.show({\r\n          text1: \"Verification Code Sent.\",\r\n          type: \"success\",\r\n          position: \"bottom\",\r\n        });\r\n        setPhoneVerificationModelVisible(true);\r\n      } else if (res instanceof ApiError) {\r\n        console.log(res.message);\r\n        Toast.show({\r\n          text1: res.message,\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    } catch (err) {\r\n      Toast.show({\r\n        text1: \"Something went wrong\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleOtpVerification = async (phoneNumber: string) => {\r\n    try {\r\n      if (!phoneNumber.startsWith(\"+61\")) {\r\n        phoneNumber = \"+61\" + phoneNumber;\r\n      }\r\n\r\n      const res = await verifyOTP({\r\n        code: verification,\r\n        phoneNumber: phoneNumber,\r\n      });\r\n      if (res.success) {\r\n        handleNext();\r\n        Toast.show({\r\n          text1: res.message,\r\n          type: \"success\",\r\n          position: \"bottom\",\r\n        });\r\n      } else if (res instanceof ApiError) {\r\n        Alert.alert(res.message);\r\n\r\n        // Toast.show({\r\n        //   text1: res.message,\r\n        //   type: \"error\",\r\n        //   position: \"bottom\",\r\n        // });\r\n      }\r\n    } catch (err) {\r\n      Toast.show({\r\n        text1: \"Something went wrong\",\r\n        type: \"error\",\r\n        position: \"bottom\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <KeyboardAvoidingView\r\n        behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n      >\r\n        <SafeAreaView>\r\n          <View\r\n            style={[\r\n              styles.rowContainer,\r\n              { flexDirection: Platform.OS === \"web\" ? \"row\" : \"column\" },\r\n            ]}\r\n          >\r\n            {/* Right Side: Signup Form */}\r\n            <View style={styles.formContainer}>\r\n              <View style={styles.inputContainer}>\r\n                <TextInput\r\n                  style={styles.countryCode}\r\n                  value={\"+61\"}\r\n                  disabled={true}\r\n                  focusable={false}\r\n                  editable={false}\r\n                />\r\n\r\n                <TextInput\r\n                  maxLength={9}\r\n                  autoFocus={true}\r\n                  style={styles.input}\r\n                  placeholder=\"Phone Number\"\r\n                  value={phone}\r\n                  onChangeText={setPhone}\r\n                />\r\n              </View>\r\n\r\n              {/* Open Verification Modal Button */}\r\n              <TouchableOpacity\r\n                onPress={() => handleSendVerification()}\r\n                style={styles.button}\r\n              >\r\n                <Text style={styles.buttonText}>Continue</Text>\r\n              </TouchableOpacity>\r\n\r\n              <View style={styles.footer}>\r\n                <Text>Already have an account? </Text>\r\n                <TouchableOpacity onPress={() => navigation.navigate(\"Login\")}>\r\n                  <Text style={styles.link}>Login</Text>\r\n                </TouchableOpacity>\r\n              </View>\r\n              {/* back to previous screen */}\r\n            </View>\r\n          </View>\r\n        </SafeAreaView>\r\n      </KeyboardAvoidingView>\r\n\r\n      <Modal\r\n        presentationStyle=\"pageSheet\"\r\n        visible={phoneVerificationModelVisible}\r\n        animationType=\"slide\"\r\n        onRequestClose={() => {\r\n          setPhoneVerificationModelVisible(!phoneVerificationModelVisible);\r\n        }}\r\n      >\r\n        <View style={styles.container}>\r\n          <View style={styles.formContainer}>\r\n            <Text style={styles.verificationText}>\r\n              A 6 digit verification code has been sent to your phone.\r\n            </Text>\r\n            <TextInput\r\n              maxLength={6}\r\n              autoFocus={true}\r\n              style={styles.verifyInput}\r\n              placeholder=\"6 Digit Code\"\r\n              value={verification}\r\n              onChangeText={setVerification}\r\n            />\r\n\r\n            <TouchableOpacity\r\n              onPress={() => handleOtpVerification(phone)}\r\n              style={styles.button}\r\n            >\r\n              <Text style={styles.buttonText}>Verify </Text>\r\n            </TouchableOpacity>\r\n\r\n            <View style={styles.footer}>\r\n              <Text>Didn't receive code? </Text>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  // resend button\r\n                }}\r\n              >\r\n                <Text style={styles.link}>Resend</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </View>\r\n  );\r\n};\r\n\r\n// Styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n    backgroundColor: \"#FDFDFF\", // Off-White background\r\n    marginTop: -140,\r\n  },\r\n  rowContainer: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    fontSize: Platform.OS === \"web\" ? 30 : 24, // Larger font size for web\r\n    // Additional flex properties for responsive layout\r\n    maxWidth: 1200, // Max width for the content container\r\n  },\r\n  leftSide: {\r\n    marginRight: Platform.OS === \"web\" ? 0 : 0, // Margin for spacing on the web version\r\n    alignItems: \"flex-start\", // Align text to the left on web\r\n    width: Platform.OS === \"web\" ? \"30%\" : \"100%\",\r\n    marginBottom: 60,\r\n  },\r\n\r\n  formContainer: {\r\n    width: Platform.OS === \"web\" ? \"60%\" : \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  inputContainer: {\r\n    alignItems: \"center\",\r\n    marginBottom: 15,\r\n    flexDirection: \"row\",\r\n  },\r\n  countryCode: {\r\n    flex: 1,\r\n    fontSize: 16,\r\n    marginBottom: 15,\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderWidth: 2,\r\n    borderColor: \"#ccc\",\r\n    marginRight: 10,\r\n    borderRadius: 5,\r\n  },\r\n\r\n  input: {\r\n    flex: 7,\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderWidth: 2,\r\n    borderColor: \"#ccc\",\r\n    marginBottom: 15,\r\n    borderRadius: 5,\r\n  },\r\n  verifyInput: {\r\n    fontSize: 16,\r\n    width: \"100%\",\r\n    padding: Platform.OS === \"web\" ? 15 : 25, // Larger padding for mobile\r\n    borderWidth: 2,\r\n    borderColor: \"#ccc\",\r\n    marginBottom: 15,\r\n    borderRadius: 5,\r\n  },\r\n  headingText: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    color: \"#ff\",\r\n    textAlign: \"left\",\r\n    marginBottom: 10,\r\n  },\r\n  verificationText: {\r\n    fontSize: 16,\r\n    color: \"#888888\",\r\n    textAlign: \"left\",\r\n    marginTop: 5,\r\n    marginBottom: 10,\r\n    padding: 10,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#4A90E2\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderRadius: 5,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n    marginBottom: 5,\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n  },\r\n\r\n  secondaryButton: {\r\n    // Larger padding for mobile\r\n    borderRadius: 5,\r\n    padding: Platform.OS === \"web\" ? 15 : 20,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n\r\n    marginBottom: 20,\r\n  },\r\n  secondaryButtonText: {\r\n    color: \"#4A90E2\",\r\n    fontSize: 20,\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    marginBottom: 10,\r\n    textAlign: \"center\",\r\n  },\r\n  footer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  link: {\r\n    color: \"#007bff\",\r\n    textDecorationLine: \"underline\",\r\n  },\r\n});\r\n\r\nexport default PartialRegesterScreen;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Platform,\r\n  Dimensions,\r\n  Button,\r\n  KeyboardAvoidingView,\r\n  SafeAreaView,\r\n  Alert,\r\n} from \"react-native\";\r\n\r\nimport {\r\n  editUserDetail,\r\n  partialregisterComplete,\r\n  registerUser,\r\n} from \"../../../api/auth/authApi\";\r\nimport { RegisterRequest } from \"../../../api/auth/auth\";\r\nimport { AxiosError } from \"axios\";\r\nimport { ApiError, ApiResponse } from \"../../../api/utils/apiResponse\";\r\nimport Toast from \"react-native-toast-message\";\r\n\r\nconst { width, height } = Dimensions.get(\"window\");\r\nconst isLandscape = width > height;\r\n\r\nexport const ParitalRegestrationPasswordScreen = ({\r\n  navigation,\r\n}: {\r\n  navigation: any;\r\n}) => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const handleSignup = async () => {\r\n    // update the password\r\n    try {\r\n      if (password !== confirmPassword) {\r\n        Toast.show({\r\n          text1: \"Both passwod must be same\",\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n        });\r\n        return;\r\n      }\r\n      const phoneNumber = \"+61412524317\";\r\n      const response = await partialregisterComplete(phoneNumber, password);\r\n\r\n      if (response instanceof ApiResponse) {\r\n        navigation.navigate(\"Login\");\r\n        Toast.show({\r\n          text1: response.message,\r\n          type: \"success\",\r\n          position: \"bottom\",\r\n        });\r\n      } else {\r\n        Toast.show({\r\n          text1: response.message,\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n        });\r\n        if (response.statusCode === 409) {\r\n          navigation.navigate(\"Login\");\r\n        }\r\n      }\r\n      // Redirect user after successful signup (you can adjust the flow)\r\n    } catch (err) {\r\n      console.error(\"Signup error:\", err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n    >\r\n      <SafeAreaView>\r\n        <View\r\n          style={[\r\n            styles.rowContainer,\r\n            { flexDirection: Platform.OS === \"web\" ? \"row\" : \"column\" },\r\n          ]}\r\n        >\r\n          {/* Right Side: Signup Form */}\r\n          <View style={styles.formContainer}>\r\n            {/* Password Input */}\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChangeText={setPassword}\r\n              secureTextEntry\r\n            />\r\n\r\n            {/* Confirm Password Input */}\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Confirm Password\"\r\n              value={confirmPassword}\r\n              onChangeText={setConfirmPassword}\r\n              secureTextEntry\r\n            />\r\n            {/* Next Button */}\r\n            <TouchableOpacity onPress={handleSignup} style={styles.button}>\r\n              <Text style={styles.buttonText}>Continue</Text>\r\n            </TouchableOpacity>\r\n\r\n            <View style={styles.footer}>\r\n              <Text>Already have an account? </Text>\r\n              <TouchableOpacity onPress={handleSignup}>\r\n                <Text style={styles.link}>Login</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n\r\n            {/* back to previous screen */}\r\n          </View>\r\n        </View>\r\n      </SafeAreaView>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\n// Styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    padding: 20,\r\n    backgroundColor: \"#FDFDFF\", // Off-White background\r\n    marginTop: -140,\r\n  },\r\n  rowContainer: {\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n    fontSize: Platform.OS === \"web\" ? 30 : 24, // Larger font size for web\r\n    // Additional flex properties for responsive layout\r\n    maxWidth: 1200, // Max width for the content container\r\n  },\r\n  leftSide: {\r\n    marginRight: Platform.OS === \"web\" ? 0 : 0, // Margin for spacing on the web version\r\n    alignItems: \"flex-start\", // Align text to the left on web\r\n    width: Platform.OS === \"web\" ? \"30%\" : \"100%\",\r\n    marginBottom: 60,\r\n  },\r\n  backButton: {\r\n    padding: 10,\r\n    marginTop: 30, // Adjust for iOS devices\r\n  },\r\n  formContainer: {\r\n    width: Platform.OS === \"web\" ? \"60%\" : \"100%\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  input: {\r\n    width: \"100%\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderWidth: 2,\r\n    borderColor: \"#ccc\",\r\n    marginBottom: 15,\r\n    borderRadius: 5,\r\n  },\r\n  button: {\r\n    backgroundColor: \"#4A90E2\",\r\n    padding: Platform.OS === \"web\" ? 15 : 20, // Larger padding for mobile\r\n    borderRadius: 5,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n    marginTop: 20,\r\n    marginBottom: 5,\r\n  },\r\n  buttonText: {\r\n    color: \"#fff\",\r\n    fontSize: 18,\r\n  },\r\n\r\n  secondaryButton: {\r\n    // Larger padding for mobile\r\n    borderRadius: 5,\r\n    padding: Platform.OS === \"web\" ? 15 : 20,\r\n    width: \"100%\",\r\n    alignItems: \"center\",\r\n\r\n    marginBottom: 20,\r\n  },\r\n  secondaryButtonText: {\r\n    color: \"#4A90E2\",\r\n    fontSize: 20,\r\n  },\r\n  errorText: {\r\n    color: \"red\",\r\n    marginBottom: 10,\r\n    textAlign: \"center\",\r\n  },\r\n  footer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    marginTop: 20,\r\n  },\r\n  link: {\r\n    color: \"#007bff\",\r\n    textDecorationLine: \"underline\",\r\n  },\r\n});\r\n\r\nexport default ParitalRegestrationPasswordScreen;\r\n","import { io } from \"socket.io-client\";\r\n\r\n// const SOCKET_URL = \"http://206.83.112.12:3000\";\r\nconst SOCKET_URL = \"http://192.168.1.104:3000\";\r\n\r\nconst socket = io(SOCKET_URL, {\r\n  transports: [\"websocket\"],\r\n  forceNew: true,\r\n});\r\n\r\nexport default socket;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  Animated,\r\n  Dimensions,\r\n  SafeAreaView,\r\n  ScrollView,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  Alert,\r\n  Modal,\r\n  Image,\r\n} from 'react-native';\r\nimport Sidebar from '../components/Sidebar';\r\nimport Header from '../components/Header';\r\nimport socket from '../../../config/Socket'; \r\nimport { BackgroundColor, TextColor } from '../../../utils/color';\r\nimport { useAuth } from '../../../context/AuthContext'; \r\nimport { changeChannelName, deleteChannel } from '../../../api/server/channelApi';\r\nimport Toast from 'react-native-toast-message';\r\nimport { ApiError } from '../../../api/utils/apiResponse';\r\nimport { Feather } from '@expo/vector-icons';\r\nimport { Channel } from '../../../types/Channel';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as FileSystem from 'expo-file-system';\r\n\r\n\r\nconst ChatScreen = ({ route, navigation }: any) => {\r\n  const { channelName, channelId, refreshChannels, allChannels } = route.params;\r\n\r\n  const [currentChannelName, setCurrentChannelName] = useState(channelName);\r\n  const [selectedTab, setSelectedTab] = useState(channelName);\r\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n  const sidebarWidth = useRef(new Animated.Value(250)).current;\r\n  const mainContentPadding = useRef(new Animated.Value(250)).current;\r\n  const [isMobile, setIsMobile] = useState(false);\r\n  const screenWidth = Dimensions.get('window').width;\r\n  const { userRole } = useAuth();\r\n  const canEdit = userRole === 'admin' || userRole === 'manager';\r\n  const [renameModalVisible, setRenameModalVisible] = useState(false);\r\n  const [newChannelName, setNewChannelName] = useState(channelName);\r\n  const [messages, setMessages] = useState<\r\n  { text: string; fromSelf: boolean; image?: string }[]\r\n>([]);\r\n\r\n  const [message, setMessage] = useState('');\r\n  const scrollRef = useRef<ScrollView>(null);\r\n\r\n  useEffect(() => {\r\n    socket.on('receive_message', (msg: { text: string; senderId: string }) => {\r\n      const currentUserId = 'your-user-id'; \r\n      setMessages((prev) => [...prev, { text: msg.text, fromSelf: msg.senderId === currentUserId }]);\r\n      setTimeout(() => scrollRef.current?.scrollToEnd({ animated: true }), 100);\r\n    });\r\n\r\n    return () => {\r\n      socket.off('receive_message');\r\n    };\r\n  }, []);\r\n\r\n  // 🔁 React to channel changes\r\n  useEffect(() => {\r\n    setCurrentChannelName(channelName);\r\n    setMessages([]); // Clear old messages\r\n    setSelectedTab(channelName);\r\n    setNewChannelName(channelName);\r\n  }, [channelId, channelName]);\r\n\r\n  const handleDeleteChannel = async () => {\r\n    const confirm = window.confirm(`Are you sure you want to delete #${currentChannelName}?`);\r\n    if (!confirm) return;\r\n  \r\n    try {\r\n      const res = await deleteChannel({ channelId, channelName: currentChannelName });\r\n  \r\n      if (res instanceof ApiError || !('statusCode' in res) || res.statusCode >= 400) {\r\n        throw new Error(res.message || 'Failed to delete channel');\r\n      }\r\n  \r\n      await refreshChannels?.();\r\n      Toast.show({ type: 'success', text1: 'Channel deleted' });\r\n  \r\n      const remainingChannels = allChannels?.filter((c: Channel) => c.id !== channelId);\r\n\r\n  \r\n      if (remainingChannels && remainingChannels.length > 0) {\r\n        const firstChannel = remainingChannels[0];\r\n        navigation.replace('ChatScreen', {\r\n          channelName: firstChannel.name,\r\n          channelId: firstChannel.id,\r\n          refreshChannels,\r\n          allChannels: remainingChannels,\r\n        });\r\n      } else {\r\n        navigation.goBack();\r\n      }\r\n    } catch (err: any) {\r\n      console.error(' Delete error:', err);\r\n      Toast.show({\r\n        type: 'error',\r\n        text1: 'Delete Failed',\r\n        text2: err.message || 'Something went wrong.',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handlePickImage = async () => {\r\n    try {\r\n      const result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        allowsEditing: false,\r\n        quality: 0.7,\r\n        base64: true,\r\n      });\r\n  \r\n      if (!result.canceled && result.assets.length > 0) {\r\n        const selectedAsset = result.assets[0];\r\n  \r\n        const base64Image = `data:${selectedAsset.type};base64,${selectedAsset.base64}`;\r\n  \r\n        // Send via socket or upload it to your server\r\n        socket.emit('send_message', {\r\n          text: '',\r\n          image: base64Image, // send image here\r\n          senderId: 'your-user-id',\r\n          channelName: currentChannelName,\r\n        });\r\n  \r\n        setMessages(prev => [...prev, { text: '[Image]', fromSelf: true }]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Image pick error:', error);\r\n      Toast.show({ type: 'error', text1: 'Image pick failed' });\r\n    }\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  const handleRenameChannel = async () => {\r\n    try {\r\n      const res = await changeChannelName({ channelId, newChannelName });\r\n\r\n      if (res instanceof ApiError || !('statusCode' in res) || res.statusCode >= 400) {\r\n        Toast.show({\r\n          type: 'error',\r\n          text1: 'Rename Failed',\r\n          text2: res.message || 'Something went wrong.',\r\n        });\r\n        return;\r\n      }\r\n\r\n      Toast.show({ type: 'success', text1: 'Channel renamed' });\r\n      setRenameModalVisible(false);\r\n      setCurrentChannelName(newChannelName);\r\n      setSelectedTab(newChannelName);\r\n      navigation.setParams({ channelName: newChannelName, channelId }); // force update\r\n      await refreshChannels?.();\r\n    } catch (err) {\r\n      console.error('Rename error:', err);\r\n      Toast.show({\r\n        type: 'error',\r\n        text1: 'Unexpected Error',\r\n        text2: 'Could not rename channel.',\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if (!message.trim()) return;\r\n    const currentUserId = 'your-user-id'; \r\n\r\n    socket.emit('send_message', { text: message, senderId: currentUserId, channelName: currentChannelName });\r\n\r\n    setMessages((prev) => [...prev, { text: message, fromSelf: true }]);\r\n    setMessage('');\r\n    setTimeout(() => scrollRef.current?.scrollToEnd({ animated: true }), 100);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (screenWidth <= 768) {\r\n      setIsMobile(true);\r\n      setIsSidebarOpen(false);\r\n    } else {\r\n      setIsMobile(false);\r\n      setIsSidebarOpen(true);\r\n    }\r\n  }, [screenWidth]);\r\n\r\n  useEffect(() => {\r\n    Animated.timing(sidebarWidth, {\r\n      toValue: isSidebarOpen ? 250 : 0,\r\n      duration: 300,\r\n      useNativeDriver: false,\r\n    }).start();\r\n\r\n    Animated.timing(mainContentPadding, {\r\n      toValue: isSidebarOpen ? 250 : 0,\r\n      duration: 300,\r\n      useNativeDriver: false,\r\n    }).start();\r\n  }, [isSidebarOpen]);\r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n      <Header isSidebarOpen={isSidebarOpen} toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)} />\r\n      <Sidebar isOpen={isSidebarOpen} toggleSidebar={() => setIsSidebarOpen(!isSidebarOpen)} selectedTab={selectedTab} handleTabChange={setSelectedTab} />\r\n\r\n      <Animated.View style={[styles.mainContent, { paddingLeft: isMobile ? 0 : mainContentPadding }]}>\r\n        <KeyboardAvoidingView behavior={Platform.OS === 'ios' ? 'padding' : undefined} style={{ flex: 1 }}>\r\n          <View style={styles.chatTitleRow}>\r\n            <Text style={styles.chatTitle}>#{currentChannelName}</Text>\r\n            {canEdit && (\r\n              <View style={styles.channelActions}>\r\n                <TouchableOpacity onPress={() => setRenameModalVisible(true)}>\r\n  <Feather name=\"edit\" size={18} color=\"#4A90E2\" />\r\n</TouchableOpacity>\r\n<TouchableOpacity onPress={handleDeleteChannel}>\r\n  <Feather name=\"trash\" size={18} color=\"#D9534F\" />\r\n</TouchableOpacity>\r\n              </View>\r\n            )}\r\n          </View>\r\n\r\n          <ScrollView ref={scrollRef} contentContainerStyle={styles.scrollContainer}>\r\n            {messages.map((msg, index) => (\r\n              <View key={index} style={[styles.messageBubble, msg.fromSelf ? styles.messageRight : styles.messageLeft]}>\r\n                {msg.image ? (\r\n  <Image\r\n    source={{ uri: msg.image }}\r\n    style={{ width: 200, height: 200, borderRadius: 8, marginBottom: 5 }}\r\n    resizeMode=\"cover\"\r\n  />\r\n) : (\r\n  <Text style={styles.messageText}>{msg.text}</Text>\r\n)}\r\n\r\n              </View>\r\n            ))}\r\n          </ScrollView>\r\n\r\n          <View style={styles.inputBar}>\r\n  <TextInput\r\n    style={styles.input}\r\n    value={message}\r\n    onChangeText={setMessage}\r\n    placeholder=\"Type a message...\"\r\n    placeholderTextColor=\"#aaa\"\r\n  />\r\n\r\n  <TouchableOpacity onPress={handlePickImage} style={styles.iconButton}>\r\n    <Feather name=\"image\" size={20} color=\"#4A90E2\" />\r\n  </TouchableOpacity>\r\n\r\n  <TouchableOpacity onPress={handleSendMessage} style={styles.sendButton}>\r\n    <Text style={styles.sendButtonText}>Send</Text>\r\n  </TouchableOpacity>\r\n</View>\r\n\r\n        </KeyboardAvoidingView>\r\n      </Animated.View>\r\n\r\n      <Modal visible={renameModalVisible} transparent animationType=\"slide\" onRequestClose={() => setRenameModalVisible(false)}>\r\n        <View style={styles.modalOverlay}>\r\n          <View style={styles.renameModal}>\r\n            <Text style={styles.modalTitle}>Rename Channel</Text>\r\n            <TextInput style={styles.input} value={newChannelName} onChangeText={setNewChannelName} />\r\n            <View style={styles.modalButtons}>\r\n              <TouchableOpacity style={[styles.button, styles.cancelButton]} onPress={() => setRenameModalVisible(false)}>\r\n                <Text style={styles.buttonText}>Cancel</Text>\r\n              </TouchableOpacity>\r\n              <TouchableOpacity style={[styles.button, styles.createButton]} onPress={handleRenameChannel}>\r\n                <Text style={[styles.buttonText, { color: '#fff' }]}>Save</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        </View>\r\n      </Modal>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, flexDirection: 'row', backgroundColor: BackgroundColor },\r\n  mainContent: { flex: 1, marginTop: 60, paddingHorizontal: 20, paddingBottom: 20, marginLeft: 30 },\r\n  scrollContainer: { paddingBottom: 80 },\r\n  chatTitle: { fontSize: 24, fontWeight: '700', color: TextColor },\r\n  chatTitleRow: { flexDirection: 'row', justifyContent: 'space-between', alignItems: 'center', marginBottom: 10 },\r\n  channelActions: { flexDirection: 'row', gap: 12 },\r\n  actionText: { fontSize: 18, color: '#777' },\r\n  renameModal: { backgroundColor: '#FDFDFF', padding: 20, marginHorizontal: 40, borderRadius: 12 },\r\n  modalOverlay: { flex: 1, justifyContent: 'center', backgroundColor: 'rgba(0,0,0,0.5)' },\r\n  messageBubble: { maxWidth: '80%', marginVertical: 6, padding: 12, borderRadius: 12 },\r\n  messageLeft: { alignSelf: 'flex-start', backgroundColor: '#f1f1f1' },\r\n  messageRight: { alignSelf: 'flex-end', backgroundColor: '#4A90E2' },\r\n  messageText: { color: '#fff', fontSize: 15 },\r\n  inputBar: { flexDirection: 'row', alignItems: 'center', paddingVertical: 10, borderTopWidth: 1, borderColor: '#ccc', marginTop: 10 },\r\n  input: { flex: 1, backgroundColor: '#fff', padding: 10, borderRadius: 20, fontSize: 15, marginRight: 10 },\r\n  sendButton: { backgroundColor: '#4A90E2', paddingVertical: 10, paddingHorizontal: 16, borderRadius: 20 },\r\n  sendButtonText: { color: '#fff', fontWeight: '600' },\r\n  modalTitle: { fontSize: 18, fontWeight: 'bold', color: TextColor, marginBottom: 10 },\r\n  modalButtons: { flexDirection: 'row', justifyContent: 'flex-end', gap: 10 },\r\n  button: { paddingVertical: 10, paddingHorizontal: 16, borderRadius: 8 },\r\n  cancelButton: { backgroundColor: '#eee' },\r\n  createButton: { backgroundColor: '#4A90E2' },\r\n  buttonText: { fontSize: 15, fontWeight: '600', color: '#333' },\r\n  iconButton: {\r\n    padding: 8,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  \r\n});\r\n\r\nexport default ChatScreen;\r\n","import { RosterAttributes } from \"../types/RosterAttributes\"; \r\n\r\nexport const mockShifts: RosterAttributes[] = [\r\n  {\r\n    id: \"shift-1\",\r\n    employeeId: \"emp-001\",\r\n    officeId: \"office-001\",\r\n    officeLocation: {\r\n      id: \"office-001\",\r\n      name: \"Main Office\",\r\n      latitude: \"40.7128\",\r\n      longitude: \"-74.0060\",\r\n      radius: 50,\r\n    },\r\n    startTime: new Date(\"2025-04-13T20:00:00\"),\r\n    endTime: new Date(\"2025-04-13T23:00:00\"),\r\n    date: new Date(\"2025-04-14\"),\r\n    description: \"Morning shift at reception\",\r\n  },\r\n  {\r\n    id: \"shift-2\",\r\n    employeeId: \"emp-002\",\r\n    officeId: \"office-002\",\r\n    startTime: new Date(\"2025-04-14T13:00:00\"),\r\n    endTime: new Date(\"2025-04-14T17:00:00\"),\r\n    date: new Date(\"2025-04-14\"),\r\n    description: \"Afternoon support duties\",\r\n    officeLocation: {\r\n      id: \"\",\r\n      name: \"\",\r\n      latitude: \"\",\r\n      longitude: \"\",\r\n      radius: 0\r\n    }\r\n  },\r\n  {\r\n    id: \"shift-3\",\r\n    employeeId: \"emp-003\",\r\n    officeId: \"office-001\",\r\n    startTime: new Date(\"2025-04-15T09:00:00\"),\r\n    endTime: new Date(\"2025-04-15T17:00:00\"),\r\n    date: new Date(\"2025-04-15\"),\r\n    description: \"Full-day field visit\",\r\n    officeLocation: {\r\n      id: \"\",\r\n      name: \"\",\r\n      latitude: \"\",\r\n      longitude: \"\",\r\n      radius: 0\r\n    }\r\n  },\r\n  {\r\n    id: \"shift-4\",\r\n    employeeId: \"emp-001\",\r\n    officeId: \"office-003\",\r\n    startTime: new Date(\"2025-04-16T07:00:00\"),\r\n    endTime: new Date(\"2025-04-16T15:00:00\"),\r\n    date: new Date(\"2025-04-16\"),\r\n    description: \"Warehouse supervision\",\r\n    officeLocation: {\r\n      id: \"\",\r\n      name: \"\",\r\n      latitude: \"\",\r\n      longitude: \"\",\r\n      radius: 0\r\n    }\r\n  },\r\n  {\r\n    id: \"shift-5\",\r\n    employeeId: \"emp-004\",\r\n    officeId: \"office-002\",\r\n    startTime: new Date(\"2025-04-17T14:00:00\"),\r\n    endTime: new Date(\"2025-04-17T22:00:00\"),\r\n    date: new Date(\"2025-04-17\"),\r\n    description: \"Evening coverage\",\r\n    officeLocation: {\r\n      id: \"office-002\",\r\n      name: \"Branch Office\",\r\n      latitude: \"34.0522\",\r\n      longitude: \"-118.2437\",\r\n      radius: 30,\r\n    }\r\n  },\r\n     \r\n  {\r\n    id: \"shift-6\",\r\n    employeeId: \"emp-002\",\r\n    officeId: \"office-003\",\r\n    startTime: new Date(\"2025-04-18T10:00:00\"),\r\n    endTime: new Date(\"2025-04-18T16:00:00\"),\r\n    date: new Date(\"2025-04-18\"),\r\n    description: \"Training and documentation\",\r\n    officeLocation: {\r\n      id: \"office-003\",\r\n      name: \"Remote Office\",\r\n      latitude: \"37.7749\",\r\n      longitude: \"-122.4194\",\r\n      radius: 20,\r\n    }\r\n  },\r\n \r\n  {\r\n    id: \"shift-7\",\r\n    employeeId: \"emp-003\",\r\n    officeId: \"office-001\",\r\n    startTime: new Date(\"2025-04-19T12:00:00\"),\r\n    endTime: new Date(\"2025-04-19T18:00:00\"),\r\n    date: new Date(\"2025-04-19\"),\r\n    description: \"Client visit assistance\",\r\n    officeLocation: {\r\n      id: \"office-001\",   \r\n      name: \"main office\",\r\n      latitude: \"40.7128\",\r\n      longitude: \"-74.0060\",\r\n      radius: 50,\r\n    }\r\n  },\r\n  {\r\n    id: \"shift-8\",\r\n    employeeId: \"emp-004\",\r\n    officeId: \"office-002\",\r\n    startTime: new Date(\"2025-04-20T08:30:00\"),\r\n    endTime: new Date(\"2025-04-20T14:30:00\"),\r\n    date: new Date(\"2025-04-13\"),\r\n    description: \"Facility maintenance\",\r\n    officeLocation: {\r\n      id: \"office-002\",\r\n      name: \"Branch Office\",\r\n      latitude: \"34.0522\",\r\n      longitude: \"-118.2437\",\r\n      radius: 30,\r\n    }\r\n  },\r\n      \r\n  {\r\n    id: \"shift-9\",\r\n    employeeId: \"emp-001\",\r\n    officeId: \"office-001\",\r\n    startTime: new Date(\"2025-04-13T09:00:00\"),\r\n    endTime: new Date(\"2025-04-13T20:00:00\"),\r\n    date: new Date(\"2025-04-13\"),\r\n    description: \"Office admin shift\",\r\n    officeLocation: {\r\n      id: \"office-001\",\r\n      name: \"Main Office\",\r\n      latitude: \"40.7128\",\r\n      longitude: \"-74.0060\",\r\n      radius: 50,\r\n    }\r\n  },\r\n     \r\n  {\r\n    id: \"shift-10\",\r\n    employeeId: \"emp-005\",\r\n    officeId: \"office-003\",\r\n    startTime: new Date(\"2025-04-22T11:00:00\"),\r\n    endTime: new Date(\"2025-04-22T19:00:00\"),\r\n    date: new Date(\"2025-04-22\"),\r\n    description: \"Backup shift for leave coverage\",\r\n    officeLocation: {\r\n      id: \"office-003\",\r\n      name: \"Remote Office\",\r\n      latitude: \"37.7749\",\r\n      longitude: \"-122.4194\",\r\n      radius: 20,\r\n    }\r\n  },\r\n      \r\n];\r\n","import { Platform } from \"react-native\";\r\nimport * as Device from \"expo-device\";\r\nimport * as Notifications from \"expo-notifications\";\r\nimport Constants from \"expo-constants\";\r\n\r\nNotifications.setNotificationHandler({\r\n  handleNotification: async () => ({\r\n    shouldShowAlert: true,\r\n    shouldPlaySound: true,\r\n    shouldSetBadge: true,\r\n  }),\r\n});\r\n\r\nexport async function sendPushNotification(expoPushToken: string) {\r\n  const message = {\r\n    to: expoPushToken,\r\n    sound: \"default\",\r\n    title: \"Original Title\",\r\n    body: \"And here is the body!\",\r\n    data: { someData: \"goes here\" },\r\n  };\r\n\r\n  await fetch(\"https://exp.host/--/api/v2/push/send\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      Accept: \"application/json\",\r\n      \"Accept-encoding\": \"gzip, deflate\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(message),\r\n  });\r\n}\r\n\r\nexport function handleRegistrationError(errorMessage: string) {\r\n  alert(errorMessage);\r\n  throw new Error(errorMessage);\r\n}\r\n\r\nexport async function registerForPushNotificationsAsync() {\r\n  if (Platform.OS === \"android\") {\r\n    Notifications.setNotificationChannelAsync(\"default\", {\r\n      name: \"default\",\r\n      importance: Notifications.AndroidImportance.MAX,\r\n      vibrationPattern: [0, 250, 250, 250],\r\n      lightColor: \"#FF231F7C\",\r\n    });\r\n  }\r\n\r\n  if (Device.isDevice) {\r\n    const { status: existingStatus } =\r\n      await Notifications.getPermissionsAsync();\r\n    let finalStatus = existingStatus;\r\n    if (existingStatus !== \"granted\") {\r\n      const { status } = await Notifications.requestPermissionsAsync();\r\n      finalStatus = status;\r\n    }\r\n    if (finalStatus !== \"granted\") {\r\n      handleRegistrationError(\r\n        \"Permission not granted to get push token for push notification!\"\r\n      );\r\n      return;\r\n    }\r\n    const projectId =\r\n      Constants?.expoConfig?.extra?.eas?.projectId ??\r\n      Constants?.easConfig?.projectId;\r\n    if (!projectId) {\r\n      handleRegistrationError(\"Project ID not found\");\r\n    }\r\n    try {\r\n      const pushTokenString = (\r\n        await Notifications.getExpoPushTokenAsync({\r\n          projectId,\r\n        })\r\n      ).data;\r\n      console.log(pushTokenString);\r\n      return pushTokenString;\r\n    } catch (e: unknown) {\r\n      handleRegistrationError(`${e}`);\r\n    }\r\n  } else {\r\n    handleRegistrationError(\"Must use physical device for push notifications\");\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  SafeAreaView,\r\n  Platform,\r\n} from \"react-native\";\r\nimport { useAuth } from \"../../../context/AuthContext\";\r\nimport BottomNav from \"../components/BottomNav\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport Menu from \"../components/Menu\";\r\nimport Notification from \"../components/Notification\";\r\nimport ChatWindow from \"../components/ChatWindow\";\r\nimport ShiftCard from \"../components/ShiftCard\";\r\nimport SchedulesScreen from \"./SchedulesScreen\";\r\nimport IncomeScreen from \"./IncomeScreen\";\r\nimport LeaveScreen from \"./LeaveScreen\";\r\nimport ProfileScreen from \"./ProfileScreen\";\r\nimport { getLoggedInUserServer } from \"../../../api/server/serverApi\";\r\nimport { ApiError, ApiResponse } from \"../../../api/utils/apiResponse\";\r\nimport { getToken, Plat, saveToken } from \"../../../api/auth/token\";\r\nimport { getAllChannelForCurrentServer } from \"../../../api/server/channelApi\";\r\nimport { getShiftsForLoggedInUser, Shifts } from \"../../../api/auth/shiftApi\";\r\nimport { mockShifts } from \"../../../mockData/mockShifts\";  //mock data\r\nimport \"react-native-gesture-handler\";\r\nimport AdminDashboard from \"../../../web/adminDashboard/screens/AdminDashboard\";\r\n\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { RootStackParamList } from \"../../../types/navigationTypes\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\n\r\nconst PrimaryColor = \"#4A90E2\";\r\nconst AccentColor = \"#2ECC71\";\r\nconst BackgroundColor = \"#FDFDFF\";\r\nconst TextColor = \"#393D3F\";\r\nconst ButtonRed = \"#D9534F\";\r\nconst ActiveTabColor = \"#88B6EC\";\r\nimport {\r\n  createDrawerNavigator,\r\n  DrawerNavigationProp,\r\n} from \"@react-navigation/drawer\";\r\n\r\ntype EmployeeDashboardProps = {\r\n  navigation: DrawerNavigationProp<any, any>;\r\n};\r\n\r\nimport { useRef } from \"react\";\r\nimport * as Device from \"expo-device\";\r\nimport * as Notifications from \"expo-notifications\";\r\nimport Constants from \"expo-constants\";\r\nimport { registerForPushNotificationsAsync } from \"../components/notifications\";\r\nimport { RosterAttributes } from \"../../../types/RosterAttributes\"; // mock data\r\n\r\nconst EmployeeDashboard: React.FC = () => {\r\n  const { firstName, lastName } = useAuth();\r\n  const [clockedIn, setClockedIn] = useState(false);\r\n  const [activeTab, setActiveTab] = useState<string>(\"home\");\r\n  const [contentTab, setContentTab] = useState<string>(\"dashboard\");\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n  const [isNotificationOpen, setIsNotificationOpen] = useState(false);\r\n  const navigation = useNavigation<StackNavigationProp<RootStackParamList>>();\r\n\r\n  // const [Shifts, setShifts] = useState<RosterAttributes[]>([]);\r\n\r\n  // Chat state\r\n  const [activeChannelId, setActiveChannelId] = useState<string | null>(null); // Default channel\r\n  const [activeChannelName, setActiveChannelName] = useState(\"\"); // Default channel name\r\n  const [isChatView, setIsChatView] = useState(false);\r\n\r\n  // notifications\r\n  const [expoPushToken, setExpoPushToken] = useState(\"\");\r\n  const [notification, setNotification] = useState<\r\n    Notifications.Notification | undefined\r\n  >(undefined);\r\n  const notificationListener = useRef<Notifications.EventSubscription>();\r\n  const responseListener = useRef<Notifications.EventSubscription>();\r\n\r\n  \r\n  useEffect(() => {\r\n    registerForPushNotificationsAsync()\r\n      .then((token) => setExpoPushToken(token ?? \"\"))\r\n      .catch((error: any) => setExpoPushToken(`${error}`));\r\n\r\n    notificationListener.current =\r\n      Notifications.addNotificationReceivedListener((notification) => {\r\n        setNotification(notification);\r\n      });\r\n\r\n    responseListener.current =\r\n      Notifications.addNotificationResponseReceivedListener((response) => {\r\n        console.log(response);\r\n      });\r\n\r\n    return () => {\r\n      notificationListener.current &&\r\n        Notifications.removeNotificationSubscription(\r\n          notificationListener.current\r\n        );\r\n      responseListener.current &&\r\n        Notifications.removeNotificationSubscription(responseListener.current);\r\n    };\r\n  }, []);\r\n\r\n \r\n  const handleTabChange = (tab: string) => {\r\n    setActiveTab(tab);\r\n    if (tab === \"home\") {\r\n      setContentTab(\"dashboard\");\r\n      setIsChatView(false);\r\n      setActiveChannelId(null);\r\n      setActiveChannelName(\"\");\r\n    } else if (tab === \"chat\") {\r\n      setIsChatView(true);\r\n    }\r\n  };\r\n\r\n  const handleContentTabChange = (tab: string) => {\r\n    setContentTab(tab);\r\n    setIsChatView(false);\r\n  };\r\n\r\n  const toggleMenu = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  };\r\n\r\n  const toggleNotification = () => {\r\n    setIsNotificationOpen(!isNotificationOpen);\r\n  };\r\n\r\n  const handleChannelSelect = (channelId: string, channelName: string) => {\r\n    setActiveChannelId(channelId);\r\n    setActiveChannelName(channelName);\r\n    setIsChatView(true);\r\n  };\r\n\r\n  const handleGetServerDetail = async () => {\r\n    const res = await getLoggedInUserServer(Plat.PHONE);\r\n    if (res instanceof ApiError) {\r\n      console.log(res.message);\r\n    } else if (\"statusCode\" in res && \"data\" in res) {\r\n      const serverId = res.data.serverId;\r\n      saveToken(\"serverId\", serverId);\r\n    } else {\r\n      console.log(\"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  //const [Shifts, setShifts] = useState<Shifts[]>([]); //todo: uncomment this to use real data\r\n   const [Shifts, setShifts] = useState<RosterAttributes[]>([]); //todo: remove mock data\r\n  // const handleGetCurrentUserRosterDetails = async () => {\r\n  //   const res = await getShiftsForLoggedInUser();\r\n  //   if (res instanceof ApiError) {\r\n  //     console.log(res.message);\r\n  //   } else if (\"statusCode\" in res && \"data\" in res) {\r\n  //     const data = res.data as Shifts[];\r\n  //     // setShifts(data);\r\n  //     setShifts((prevShifts) => [...prevShifts, ...data]);\r\n  //   } else {\r\n  //     console.log(\"Something went wrong\");\r\n  //   }\r\n  // };\r\n\r\n  // useEffect(() => {\r\n  //   handleGetCurrentUserRosterDetails();\r\n\r\n  //   handleGetServerDetail();\r\n  // }, []);\r\n\r\n  useEffect(() => {\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    const filtered = mockShifts.filter(\r\n      (shift) => shift.date.toISOString().split(\"T\")[0] === today\r\n    );\r\n    setShifts(filtered);\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <SafeAreaView style={styles.container}>\r\n  <ScrollView contentContainerStyle={styles.scrollContainer}>\r\n    {/* Welcome Header */}\r\n    <View style={styles.welcomeContainer}>\r\n      <Text style={styles.welcomeText}>Hi {firstName} </Text>\r\n      <Text style={styles.welcomeSubtext}>Here’s what’s happening today</Text>\r\n    </View>\r\n\r\n    {/* Today’s Shift Card */}\r\n    <View style={styles.shiftCard}>\r\n  {/* <Ionicons name=\"calendar-outline\" size={24} color={PrimaryColor} /> */}\r\n  <View style={{ marginLeft: 12, flex: 1 }}>\r\n    <Text style={styles.shiftLabel}>Today's Shifts</Text>\r\n\r\n    {Shifts.length > 0 ? (\r\n  Shifts.map((shift) => (\r\n    <View key={shift.id} style={styles.individualShiftCardRow}>\r\n      {/* Icon on the left */}\r\n      <Ionicons name=\"calendar-outline\" size={24} color={PrimaryColor} style={{ marginRight: 14, marginTop:19 }} />\r\n\r\n      {/* Text content on the right */}\r\n      <View style={{ flex: 1 }}>\r\n      {/* Time */}\r\n      <View style={styles.iconRow}>\r\n        <Ionicons name=\"time-outline\" size={16} color={PrimaryColor} style={styles.icon} />\r\n        <Text style={styles.shiftLineText}>\r\n          {new Date(shift.startTime).toLocaleTimeString([], {\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          })} –{\" \"}\r\n          {new Date(shift.endTime).toLocaleTimeString([], {\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          })}\r\n        </Text>\r\n      </View>\r\n\r\n      {/* Location */}\r\n      <View style={styles.iconRow}>\r\n        <Ionicons name=\"location-outline\" size={16} color={PrimaryColor} style={styles.icon} />\r\n        <Text style={styles.shiftLineText}>Office ID: {shift.officeId}</Text>\r\n      </View>\r\n\r\n      {/* Description */}\r\n      <View style={styles.iconRow}>\r\n        <Ionicons name=\"document-text-outline\" size={16} color={PrimaryColor} style={styles.icon} />\r\n        <Text style={styles.shiftLineText}>{shift.description}</Text>\r\n      </View>\r\n    </View>\r\n    </View>\r\n  ))\r\n) : (\r\n  <Text style={styles.noShiftText}>You have no shift today.</Text>\r\n)}\r\n\r\n  </View>\r\n</View>\r\n\r\n\r\n    {/* Clock In Shortcut */}\r\n    <TouchableOpacity\r\n      style={styles.clockButton}\r\n      onPress={() => navigation.navigate(\"ClockInOutScreenPhone\")}\r\n    >\r\n      <Ionicons name=\"time\" size={18} color=\"#fff\" style={{ marginRight: 8 }} />\r\n      <Text style={styles.clockButtonText}>Go to Clock In / Out</Text>\r\n    </TouchableOpacity>\r\n\r\n    {/* Quick Action Buttons */}\r\n    \r\n\r\n  </ScrollView>\r\n</SafeAreaView>\r\n\r\n  \r\n   \r\n  );\r\n};\r\n\r\n// Styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: BackgroundColor,\r\n  },\r\n  scrollContainer: {\r\n    flex: 1,\r\n    paddingHorizontal: 0,\r\n    paddingBottom: 100,\r\n  },\r\n  header: {\r\n    backgroundColor: PrimaryColor,\r\n    paddingVertical: 20,\r\n    paddingHorizontal: 10,\r\n    borderBottomLeftRadius: 40,\r\n    borderBottomRightRadius: 40,\r\n    flexDirection: \"column\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n    width: \"100%\",\r\n  },\r\n  chatViewContainer: {\r\n    flex: 1,\r\n  },\r\n  chatHeader: {\r\n    backgroundColor: PrimaryColor,\r\n    paddingVertical: 20,\r\n    paddingHorizontal: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    width: \"100%\",\r\n  },\r\n  backButton: {\r\n    position: \"absolute\",\r\n    right: 10,\r\n    top: 20,\r\n  },\r\n  headerText: {\r\n    color: \"white\",\r\n    fontSize: 22,\r\n    textAlign: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  menuButton: {\r\n    position: \"absolute\",\r\n    left: 10,\r\n    top: 20,\r\n  },\r\n  notificationButton: {\r\n    position: \"absolute\",\r\n    right: 10,\r\n    top: 20,\r\n  },\r\n  tabsContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    marginTop: 10,\r\n  },\r\n  tab: {\r\n    backgroundColor: PrimaryColor,\r\n    padding: 10,\r\n    borderRadius: 10,\r\n  },\r\n  tabText: {\r\n    backgroundColor: \"#88B6EC\",\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    fontSize: 10,\r\n    color: \"white\",\r\n  },\r\n  activeTab: {\r\n    borderBottomWidth: 2,\r\n    borderBottomColor: BackgroundColor,\r\n  },\r\n  activeTabText: {\r\n    backgroundColor: BackgroundColor,\r\n    color: TextColor,\r\n  },\r\n  contentContainer: {\r\n    marginTop: 20,\r\n    paddingHorizontal: 20,\r\n  },\r\n\r\n  sectionTitle: {\r\n    fontSize: 10,\r\n    fontWeight: \"light\",\r\n    color: \"#393D3F\",\r\n    left: 120,\r\n    marginBottom: 12,\r\n    marginTop: -30,\r\n  },\r\n\r\n  noShiftsText: {\r\n    fontSize: 16,\r\n    color: \"#8E9196\",\r\n    textAlign: \"center\",\r\n    marginVertical: 20,\r\n  },\r\n  //main content\r\n  welcomeContainer: {\r\n    paddingHorizontal: 20,\r\n    paddingTop: 20,\r\n  },\r\n  welcomeText: {\r\n    fontSize: 22,\r\n    fontWeight: \"700\",\r\n    color: TextColor,\r\n  },\r\n  welcomeSubtext: {\r\n    fontSize: 14,\r\n    color: \"#6C757D\",\r\n    marginTop: 4,\r\n  },\r\n  \r\n  shiftCard: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fff\",\r\n    marginTop: 20,\r\n    marginHorizontal: 20,\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.05,\r\n    shadowRadius: 8,\r\n    elevation: 4,\r\n  },\r\n  \r\n  shiftLabel: {\r\n    fontSize: 16,\r\n    fontWeight: \"600\",\r\n    color: TextColor,\r\n  },\r\n  shiftTime: {\r\n    fontSize: 14,\r\n    marginTop: 4,\r\n    color: \"#4A90E2\",\r\n  },\r\n  shiftLocation: {\r\n    fontSize: 13,\r\n    color: \"#6C757D\",\r\n    marginTop: 2,\r\n  },\r\n  noShiftText: {\r\n    color: \"#D9534F\",\r\n    marginTop: 4,\r\n  },\r\n  \r\n  clockButton: {\r\n    backgroundColor: \"#2ECC71\",\r\n    margin: 20,\r\n    padding: 14,\r\n    borderRadius: 12,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  clockButtonText: {\r\n    color: \"#fff\",\r\n    fontWeight: \"600\",\r\n    fontSize: 15,\r\n  },\r\n  \r\n  quickActionScroll: {\r\n    paddingHorizontal: 12,\r\n    marginTop: 10,\r\n  },\r\n  actionCard: {\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 10,\r\n    padding: 14,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: 90,\r\n    height: 90,\r\n    marginRight: 10,\r\n    elevation: 2,\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.05,\r\n    shadowRadius: 4,\r\n  },\r\n  actionLabel: {\r\n    fontSize: 12,\r\n    color: TextColor,\r\n    marginTop: 6,\r\n  },\r\n  individualShiftCardRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"flex-start\",\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 10,\r\n    padding: 12,\r\n    marginBottom: 12,\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.05,\r\n    shadowRadius: 4,\r\n    elevation: 2,\r\n  }\r\n,  \r\n  shiftDescription: {\r\n    fontSize: 14,\r\n    fontWeight: \"700\",\r\n    color: \"#6C757D\",\r\n    marginTop: 2,\r\n  },\r\n  iconRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 6,\r\n  },\r\n  shiftLineText: {\r\n    fontSize: 14,\r\n    color: TextColor,\r\n    flexShrink: 1,\r\n  },\r\n  icon: {\r\n    color: 'gray',\r\n    opacity: 0.6,\r\n    marginRight: 8,\r\n  },\r\n \r\n});\r\n\r\nexport default EmployeeDashboard;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { View, Text, TouchableOpacity, StyleSheet } from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { Shifts } from \"../../../api/auth/shiftApi\";\r\n\r\ninterface Shift {\r\n  id: string;\r\n  // location: string;\r\n  description: string;\r\n  startTime: Date;\r\n  endTime: Date;\r\n}\r\n\r\nconst ShiftCard = ({ shift }: { shift: Shifts }) => {\r\n  const [canClockIn, setCanClockIn] = useState(false);\r\n  const startTime = new Date(shift.startTime); // Convert string to Date\r\n  const endTime = new Date(shift.endTime);\r\n\r\n  useEffect(() => {\r\n    const checkClockIn = () => {\r\n      const now = new Date();\r\n      const diff = (startTime.getTime() - now.getTime()) / (1000 * 60);\r\n      setCanClockIn(diff <= 15 && diff >= 0);\r\n    };\r\n\r\n    const timer = setInterval(checkClockIn, 60000);\r\n    checkClockIn();\r\n\r\n    return () => clearInterval(timer);\r\n  }, [shift.startTime]);\r\n\r\n  // //for testing clock in button\r\n  // useEffect(() => {\r\n  //     setCanClockIn(true);  // Always show the button for testing purposes\r\n  //   }, []);\r\n\r\n  return (\r\n    <View style={styles.card}>\r\n      <Text style={styles.location}>{shift.officeLocation.name}</Text>\r\n      {/* <Text style={styles.description}>{\"shift.description\"}</Text> */}\r\n\r\n      <View style={styles.timeContainer}>\r\n        <Ionicons name=\"time-outline\" size={16} color=\"#4A90E2\" />\r\n        <Text style={styles.time}>\r\n          {startTime.toLocaleTimeString([], {\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          })}{\" \"}\r\n          -{\" \"}\r\n          {endTime.toLocaleTimeString([], {\r\n            hour: \"2-digit\",\r\n            minute: \"2-digit\",\r\n          })}\r\n        </Text>\r\n      </View>\r\n\r\n      {canClockIn && (\r\n        <TouchableOpacity style={styles.clockInButton}>\r\n          <Text style={styles.clockInButtonText}>Clock In</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  card: {\r\n    backgroundColor: \"#FFFFFF\",\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    marginVertical: 8,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 5,\r\n    elevation: 3,\r\n  },\r\n  location: {\r\n    fontSize: 17,\r\n    fontWeight: \"bold\",\r\n    color: \"#393D3F\",\r\n    marginBottom: 4,\r\n  },\r\n  description: {\r\n    fontSize: 14,\r\n    color: \"#6C757D\",\r\n    marginBottom: 8,\r\n  },\r\n  timeContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 8,\r\n  },\r\n  time: {\r\n    fontSize: 14,\r\n    color: \"#4A90E2\",\r\n    fontWeight: \"500\",\r\n  },\r\n  clockInButton: {\r\n    backgroundColor: \"#2ECC71\",\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 8,\r\n    alignItems: \"center\",\r\n    marginTop: 12,\r\n  },\r\n  clockInButtonText: {\r\n    color: \"#FFFFFF\",\r\n    fontSize: 15,\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default ShiftCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport { Calendar } from 'react-native-calendars';\r\nimport { getShiftsForLoggedInUser } from '../../../api/auth/shiftApi'; // Import your fetch function\r\nimport ShiftCard from '../components/ShiftCard';\r\nimport { ApiError } from '../../../api/utils/apiResponse'; // Import for error handling\r\n\r\nconst SchedulesScreen: React.FC = () => {\r\n  const [selectedDate, setSelectedDate] = useState<string>(new Date().toISOString().split('T')[0]);\r\n  const [shifts, setShifts] = useState<any[]>([]); // To store shifts from the backend\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string>('');\r\n\r\n  // Fetch shifts when the component mounts\r\n  useEffect(() => {\r\n    const fetchShifts = async () => {\r\n      setLoading(true);\r\n      const res = await getShiftsForLoggedInUser();\r\n      if (res instanceof ApiError) {\r\n        console.log(res.message);\r\n        setError('Error fetching shifts');\r\n      } else if ('statusCode' in res && 'data' in res) {\r\n        setShifts(res.data); // Set the fetched shifts\r\n      } else {\r\n        setError('Something went wrong');\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchShifts();\r\n  }, []);\r\n\r\n  // Mark dates with shifts\r\n  const markedDates = shifts.reduce((dates, shift) => {\r\n    const date = new Date(shift.startTime).toISOString().split('T')[0];\r\n    dates[date] = { marked: true, dotColor: '#4A90E2' };\r\n    return dates;\r\n  }, {} as Record<string, any>);\r\n\r\n  // Filter shifts for the selected date\r\n  const shiftsForSelectedDate = shifts.filter(\r\n    shift => new Date(shift.startTime).toISOString().split('T')[0] === selectedDate\r\n  );\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Calendar\r\n        markedDates={{\r\n          ...markedDates,\r\n          [selectedDate]: { selected: true, selectedColor: '#4A90E2' },\r\n        }}\r\n        onDayPress={(day: { dateString: string }) => setSelectedDate(day.dateString)}\r\n        theme={{\r\n          selectedDayTextColor: '#fff',\r\n          todayTextColor: '#2ECC71',\r\n        }}\r\n      />\r\n\r\n      <Text style={styles.selectedDateTitle}>\r\n        Shifts for {new Date(selectedDate).toDateString()}\r\n      </Text>\r\n\r\n      <ScrollView style={styles.shiftsContainer}>\r\n        {loading ? (\r\n          <Text>Loading...</Text>\r\n        ) : error ? (\r\n          <Text style={styles.errorText}>{error}</Text>\r\n        ) : shiftsForSelectedDate.length > 0 ? (\r\n          shiftsForSelectedDate.map(shift => (\r\n            <ShiftCard key={shift.id} shift={shift} />\r\n          ))\r\n        ) : (\r\n          <Text style={styles.noShiftsText}>No shifts for selected date.</Text>\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#FDFDFF',\r\n    padding: 10,\r\n  },\r\n  selectedDateTitle: {\r\n    fontSize: 18,\r\n    fontWeight: 'bold',\r\n    color: '#393D3F',\r\n    marginVertical: 12,\r\n    textAlign: 'center',\r\n  },\r\n  shiftsContainer: {\r\n    flex: 1,\r\n    marginTop: 10,\r\n  },\r\n  noShiftsText: {\r\n    textAlign: 'center',\r\n    fontSize: 16,\r\n    color: '#8E9196',\r\n    marginTop: 20,\r\n  },\r\n  errorText: {\r\n    color: 'red',\r\n    textAlign: 'center',\r\n    marginTop: 20,\r\n  },\r\n});\r\n\r\nexport default SchedulesScreen;\r\n","import { mockShifts } from \"./mockShifts\";\r\n\r\nconst HOURLY_RATE = 30; // Example hourly rate\r\n\r\n// Function to get the first Wednesday of a given month\r\nconst getFirstWednesday = (year: number, month: number): Date => {\r\n  const firstDay = new Date(year, month, 1);\r\n  const dayOfWeek = firstDay.getDay();\r\n  let firstWednesday = new Date(firstDay);\r\n\r\n  if (dayOfWeek <= 3) {\r\n    firstWednesday.setDate(firstDay.getDate() + (3 - dayOfWeek)); // Move forward to Wednesday\r\n  } else {\r\n    firstWednesday.setDate(firstDay.getDate() + (10 - dayOfWeek)); // Move to next week's Wednesday\r\n  }\r\n\r\n  return firstWednesday;\r\n};\r\n\r\n// Function to generate 2-week pay periods for a given year and month\r\nconst generatePayPeriods = (\r\n  year: number,\r\n  month: number\r\n): { start: Date; end: Date }[] => {\r\n  const payPeriods = [];\r\n  let periodStart = getFirstWednesday(year, month);\r\n\r\n  while (periodStart.getMonth() === month) {\r\n    let periodEnd = new Date(periodStart);\r\n    periodEnd.setDate(periodStart.getDate() + 13); // Add 13 days for 2 weeks\r\n\r\n    payPeriods.push({ start: new Date(periodStart), end: new Date(periodEnd) });\r\n\r\n    // Move to next pay period (2 weeks later)\r\n    periodStart.setDate(periodStart.getDate() + 14);\r\n  }\r\n\r\n  return payPeriods;\r\n};\r\n\r\n// Group shifts into pay periods\r\nconst groupShiftsByPayPeriod = (shifts: any[]) => {\r\n  if (shifts.length === 0) return [];\r\n\r\n  shifts.sort((a, b) => a.startTime.getTime() - b.startTime.getTime()); // Sort shifts by date\r\n\r\n  const incomeGroups: { [key: string]: any } = {};\r\n\r\n  shifts.forEach((shift) => {\r\n    const shiftDate = new Date(shift.startTime);\r\n    const payPeriods = generatePayPeriods(\r\n      shiftDate.getFullYear(),\r\n      shiftDate.getMonth()\r\n    );\r\n\r\n    // Find the pay period that contains the shift\r\n    for (const period of payPeriods) {\r\n      if (shiftDate >= period.start && shiftDate <= period.end) {\r\n        const periodKey = `${period.start.toDateString()} - ${period.end.toDateString()}`;\r\n\r\n        if (!incomeGroups[periodKey]) {\r\n          incomeGroups[periodKey] = {\r\n            period: periodKey,\r\n            shifts: [],\r\n            totalHours: 0,\r\n            totalEarnings: 0,\r\n          };\r\n        }\r\n\r\n        // Calculate earnings for this shift\r\n        const hoursWorked =\r\n          (shift.endTime.getTime() - shift.startTime.getTime()) /\r\n          (1000 * 60 * 60);\r\n        const earnings = hoursWorked * HOURLY_RATE;\r\n\r\n        // Add shift to this pay period\r\n        incomeGroups[periodKey].shifts.push({\r\n          id: shift.id,\r\n          date: shift.startTime.toDateString(),\r\n          hoursWorked: hoursWorked.toFixed(2),\r\n          earnings,\r\n        });\r\n\r\n        // Update totals\r\n        incomeGroups[periodKey].totalHours += hoursWorked;\r\n        incomeGroups[periodKey].totalEarnings += earnings;\r\n\r\n        break; // Stop once the shift is assigned to a pay period\r\n      }\r\n    }\r\n  });\r\n\r\n  return Object.values(incomeGroups); // Convert object to array\r\n};\r\n\r\n// Generate grouped income\r\nexport const mockIncome = groupShiftsByPayPeriod(mockShifts);\r\n","import React, { useState } from 'react';\r\nimport { View, Text, StyleSheet, ScrollView, TouchableOpacity } from 'react-native';\r\nimport { mockIncome } from '../../../mockData/mockIncome';\r\nimport { Ionicons } from '@expo/vector-icons';\r\n\r\nconst IncomeScreen: React.FC = () => {\r\n  const [expandedCard, setExpandedCard] = useState<string | null>(null);\r\n\r\n  const toggleExpand = (period: string) => {\r\n    setExpandedCard(expandedCard === period ? null : period);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <ScrollView>\r\n        {mockIncome.length > 0 ? (\r\n          mockIncome.map((item) => (\r\n            <View key={item.period} style={styles.incomeCard}>\r\n              <TouchableOpacity onPress={() => toggleExpand(item.period)} style={styles.cardHeader}>\r\n                <Text style={styles.periodText}>{item.period}</Text>\r\n                <Ionicons name={expandedCard === item.period ? \"chevron-up\" : \"chevron-down\"} size={24} color=\"#4A90E2\" />\r\n              </TouchableOpacity>\r\n\r\n              <Text style={styles.summaryText}>Total Hours: {item.totalHours.toFixed(2)} hrs</Text>\r\n              <Text style={styles.summaryText}>Total Earnings: ${item.totalEarnings.toFixed(2)}</Text>\r\n\r\n              {expandedCard === item.period && (\r\n                <View style={styles.detailsContainer}>\r\n                  {item.shifts.map((shift: any) => (\r\n                    <View key={shift.id} style={styles.shiftDetails}>\r\n                      <Text style={styles.detailText}>{shift.date}</Text>\r\n                      <Text style={styles.detailText}>Hours: {shift.hoursWorked} hrs</Text>\r\n                      <Text style={styles.detailText}>Earnings: ${shift.earnings.toFixed(2)}</Text>\r\n                    </View>\r\n                  ))}\r\n                </View>\r\n              )}\r\n            </View>\r\n          ))\r\n        ) : (\r\n          <Text style={styles.noIncomeText}>No income records available.</Text>\r\n        )}\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#FDFDFF',\r\n    padding: 10,\r\n  },\r\n  incomeCard: {\r\n    backgroundColor: '#FFFFFF',\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n    shadowColor: '#000',\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  cardHeader: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n  },\r\n  periodText: {\r\n    fontSize: 16,\r\n    fontWeight: 'bold',\r\n    color: '#4A90E2',\r\n  },\r\n  summaryText: {\r\n    fontSize: 14,\r\n    color: '#393D3F',\r\n    marginTop: 5,\r\n  },\r\n  detailsContainer: {\r\n    marginTop: 10,\r\n    borderTopWidth: 1,\r\n    borderTopColor: '#E0E0E0',\r\n    paddingTop: 10,\r\n  },\r\n  shiftDetails: {\r\n    backgroundColor: '#F7F7F7',\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    marginTop: 5,\r\n  },\r\n  detailText: {\r\n    fontSize: 14,\r\n    color: '#393D3F',\r\n  },\r\n  noIncomeText: {\r\n    textAlign: 'center',\r\n    fontSize: 16,\r\n    color: '#8E9196',\r\n    marginTop: 20,\r\n  },\r\n});\r\n\r\nexport default IncomeScreen;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n// import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n\r\n// Mock data (Replace with backend integration later)\r\nconst mockLeaveHistory = [\r\n  {\r\n    id: \"1\",\r\n    type: \"Sick Leave\",\r\n    startDate: \"2024-03-05\",\r\n    endDate: \"2024-03-07\",\r\n    status: \"Approved\",\r\n  },\r\n  {\r\n    id: \"2\",\r\n    type: \"Vacation\",\r\n    startDate: \"2024-04-15\",\r\n    endDate: \"2024-04-20\",\r\n    status: \"Pending\",\r\n  },\r\n];\r\n\r\n// const LeaveScreen: React.FC<{ toggleMenu: () => void; toggleNotification: () => void }> = ({ toggleMenu, toggleNotification }) => {\r\nconst LeaveScreen = () => {\r\n  const [leaveType, setLeaveType] = useState(\"\");\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [endDate, setEndDate] = useState(new Date());\r\n  const [reason, setReason] = useState(\"\");\r\n  const [showStartDatePicker, setShowStartDatePicker] = useState(false);\r\n  const [showEndDatePicker, setShowEndDatePicker] = useState(false);\r\n  const [leaveRequests, setLeaveRequests] = useState(mockLeaveHistory);\r\n\r\n  const handleApplyLeave = () => {\r\n    if (!leaveType || !reason) {\r\n      alert(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n    const newLeave = {\r\n      id: Date.now().toString(),\r\n      type: leaveType,\r\n      startDate: startDate.toISOString().split(\"T\")[0],\r\n      endDate: endDate.toISOString().split(\"T\")[0],\r\n      status: \"Pending\",\r\n    };\r\n    setLeaveRequests([...leaveRequests, newLeave]);\r\n    setLeaveType(\"\");\r\n    setReason(\"\");\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.contentContainer}>\r\n      <SafeAreaView>\r\n        <Text style={styles.sectionTitle}>Apply for Leave</Text>\r\n\r\n        {/* Leave Type Input */}\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Enter Leave Type (e.g., Sick Leave, Vacation)\"\r\n          value={leaveType}\r\n          onChangeText={setLeaveType}\r\n        />\r\n\r\n        {/* Date Pickers */}\r\n        <TouchableOpacity\r\n          onPress={() => setShowStartDatePicker(true)}\r\n          style={styles.datePicker}\r\n        >\r\n          <Ionicons name=\"calendar-outline\" size={20} color=\"#4A90E2\" />\r\n          <Text style={styles.dateText}>\r\n            Start Date: {startDate.toDateString()}\r\n          </Text>\r\n        </TouchableOpacity>\r\n        {/* {showStartDatePicker && (\r\n          // <DateTimePicker\r\n          //   value={startDate}\r\n          //   mode=\"date\"\r\n          //   display=\"default\"\r\n          //   onChange={(event, selectedDate) => {\r\n          //     setShowStartDatePicker(false);\r\n          //     if (selectedDate) setStartDate(selectedDate);\r\n          //   }}\r\n          // />\r\n        )} */}\r\n\r\n        <TouchableOpacity\r\n          onPress={() => setShowEndDatePicker(true)}\r\n          style={styles.datePicker}\r\n        >\r\n          <Ionicons name=\"calendar-outline\" size={20} color=\"#4A90E2\" />\r\n          <Text style={styles.dateText}>\r\n            End Date: {endDate.toDateString()}\r\n          </Text>\r\n        </TouchableOpacity>\r\n        {/* {showEndDatePicker && (\r\n          <DateTimePicker\r\n            value={endDate}\r\n            mode=\"date\"\r\n            display=\"default\"\r\n            onChange={(event, selectedDate) => {\r\n              setShowEndDatePicker(false);\r\n              if (selectedDate) setEndDate(selectedDate);\r\n            }}\r\n          />\r\n        )} */}\r\n\r\n        {/* Reason Input */}\r\n        <TextInput\r\n          style={[styles.input, styles.textArea]}\r\n          placeholder=\"Enter Reason\"\r\n          value={reason}\r\n          onChangeText={setReason}\r\n          multiline\r\n        />\r\n\r\n        {/* Apply Button */}\r\n        <TouchableOpacity style={styles.applyButton} onPress={handleApplyLeave}>\r\n          <Text style={styles.applyButtonText}>Apply Leave</Text>\r\n        </TouchableOpacity>\r\n\r\n        {/* ✅ Leave History Section */}\r\n        <Text style={styles.sectionTitle}>Leave History</Text>\r\n        {leaveRequests.length > 0 ? (\r\n          leaveRequests.map((leave) => (\r\n            <View key={leave.id} style={styles.leaveCard}>\r\n              <Text style={styles.leaveType}>{leave.type}</Text>\r\n              <Text style={styles.leaveDate}>\r\n                {leave.startDate} - {leave.endDate}\r\n              </Text>\r\n              <Text\r\n                style={[\r\n                  styles.status,\r\n                  leave.status === \"Approved\"\r\n                    ? styles.approved\r\n                    : styles.pending,\r\n                ]}\r\n              >\r\n                {leave.status}\r\n              </Text>\r\n            </View>\r\n          ))\r\n        ) : (\r\n          <Text style={styles.noLeaveText}>No leave history available.</Text>\r\n        )}\r\n      </SafeAreaView>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#FDFDFF\",\r\n  },\r\n  header: {\r\n    backgroundColor: \"#4A90E2\",\r\n    paddingVertical: 20,\r\n    paddingHorizontal: 10,\r\n    borderBottomLeftRadius: 40,\r\n    borderBottomRightRadius: 40,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    position: \"relative\",\r\n  },\r\n  menuButton: {\r\n    position: \"absolute\",\r\n    left: 10,\r\n  },\r\n  notificationButton: {\r\n    position: \"absolute\",\r\n    right: 10,\r\n  },\r\n  headerText: {\r\n    color: \"white\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  contentContainer: {\r\n    flex: 1,\r\n    paddingHorizontal: 20,\r\n    paddingTop: 20,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    color: \"#4A90E2\",\r\n    marginBottom: 10,\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E0E0E0\",\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n  textArea: {\r\n    height: 80,\r\n  },\r\n  datePicker: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#FFFFFF\",\r\n    padding: 10,\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n    borderWidth: 1,\r\n    borderColor: \"#E0E0E0\",\r\n  },\r\n  dateText: {\r\n    fontSize: 16,\r\n    marginLeft: 10,\r\n    color: \"#393D3F\",\r\n  },\r\n  applyButton: {\r\n    backgroundColor: \"#2ECC71\",\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  applyButtonText: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  leaveCard: {\r\n    backgroundColor: \"#F7F7F7\",\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n  },\r\n  leaveType: {\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    color: \"#4A90E2\",\r\n  },\r\n  leaveDate: {\r\n    fontSize: 14,\r\n    color: \"#393D3F\",\r\n  },\r\n  status: {\r\n    fontSize: 14,\r\n    fontWeight: \"bold\",\r\n    marginTop: 5,\r\n  },\r\n  approved: {\r\n    color: \"#2ECC71\",\r\n  },\r\n  pending: {\r\n    color: \"#F39C12\",\r\n  },\r\n  noLeaveText: {\r\n    textAlign: \"center\",\r\n    fontSize: 16,\r\n    color: \"#8E9196\",\r\n    marginTop: 20,\r\n  },\r\n});\r\n\r\nexport default LeaveScreen;\r\n","import axios, { AxiosError } from \"axios\";\r\nimport { getToken } from \"./token\"; // Assuming you have this method to get the token\r\n\r\nconst API = axios.create({\r\n  baseURL: \r\n  \"https://workplace-zdzja.ondigitalocean.app\",\r\n  //   \"https://8c1f-2406-2d40-4d55-6c10-bdc3-9abf-864e-c64f.ngrok-free.app\",\r\n\r\n    // \"http://localhost:3000\",\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\n// Fetch user details\r\nconst getCurrentUserDetails = async (userId: any, accessToken: string) => {\r\n  try {\r\n    // Retrieve the access token\r\n    const accessToken = await getToken(\"accessToken\");\r\n    if (!accessToken) {\r\n      throw new Error(\"Token is missing\");\r\n    }\r\n\r\n    // Send the GET request to fetch user details\r\n    const response = await API.get(\"/api/v1/auth/getCurrentUserDetails\", {\r\n      headers: {\r\n        Authorization: `Bearer ${accessToken}`, // Pass token in the headers\r\n      },\r\n    });\r\n\r\n    return response.data; // Return the response containing the user details\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data;\r\n      console.error(\"Error fetching user details:\", err);\r\n      return null;\r\n    } else {\r\n      console.error(\"Error:\", error);\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\n// Edit user details (password, full name, phone, etc.) but password for now.\r\nconst editCurrentUserDetail = async (\r\n  password: string,\r\n  editType: string, // FullName, Phone, etc.\r\n  newDetail: string\r\n) => {\r\n  try {\r\n    const accessToken = await getToken(\"accessToken\");\r\n    if (!accessToken) {\r\n      throw new Error(\"Token is missing\");\r\n    }\r\n    // Prepare request body based on edit type\r\n    const body = {\r\n      password,\r\n      editType,\r\n      newDetail,\r\n    };\r\n\r\n    // Send the POST request to edit user details\r\n    const response = await API.post(\r\n      \"/api/v1/auth/editCurrentUserDetail\",\r\n      body,\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${accessToken}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    return response.data; // Return the response containing the success message\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data;\r\n      console.error(\"Error updating user details:\", err);\r\n      return err; // Return the error response from the backend\r\n    } else {\r\n      console.error(\"Error:\", error);\r\n      return { message: \"Something went wrong while updating the details.\" };\r\n    }\r\n  }\r\n};\r\n\r\nexport { getCurrentUserDetails, editCurrentUserDetail };\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  Image,\r\n  ScrollView,\r\n  Alert,\r\n  ActivityIndicator,\r\n  Button,\r\n  Modal,\r\n  SafeAreaView,\r\n} from \"react-native\";\r\nimport { Checkbox } from \"react-native-paper\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport JWT from \"expo-jwt\"; // Import expo-jwt to decode the token\r\nimport { getToken, deleteToken } from \"../../../api/auth/token\"; // Import getToken to access the token directly\r\nimport { getCurrentUserDetails } from \"../../../api/auth/profileApi\"; // Import API call to fetch user details\r\nimport { editCurrentUserDetail } from \"../../../api/auth/profileApi\"; // Import API for editing details\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { StackNavigationProp } from \"@react-navigation/stack\";\r\nimport { RootStackParamList } from \"../../../types/navigationTypes\";\r\nimport { leaveServer } from \"../../../api/server/serverApi\";\r\nimport { AxiosError } from \"axios\";\r\nimport { ApiError, ApiResponse } from \"../../../api/utils/apiResponse\";\r\nimport Toast from \"react-native-toast-message\";\r\n\r\nconst ProfileScreen = () =>\r\n  // const ProfileScreen = ({ toggleMenu, toggleNotification }) =>\r\n  // : {\r\n  //   toggleMenu: () => void;\r\n  //   toggleNotification: () => void;\r\n\r\n  // }\r\n  {\r\n    const [profilePic, setProfilePic] = useState<string | null>(null);\r\n    const [userDetails, setUserDetails] = useState<any>(null); // Store user details\r\n    const [loading, setLoading] = useState<boolean>(true); // Loading state for fetching user details\r\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\");\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    const handleCloseModal = () => {\r\n      setIsChecked(false);\r\n      setIsModalOpen(false);\r\n    };\r\n    const navigation = useNavigation<StackNavigationProp<RootStackParamList>>();\r\n\r\n    const handleLeaveServer = async () => {\r\n      try {\r\n        const res = await leaveServer();\r\n        if (res.statusCode === 200) {\r\n          setIsModalOpen(false);\r\n          Toast.show({\r\n            text1: res.message,\r\n            type: \"error\",\r\n            position: \"bottom\",\r\n          });\r\n        } else if (res instanceof ApiError) {\r\n          setIsModalOpen(false);\r\n          Toast.show({\r\n            text1: res.message,\r\n            type: \"error\",\r\n            position: \"bottom\",\r\n          });\r\n        }\r\n      } catch (error) {\r\n        navigation.goBack();\r\n        Toast.show({\r\n          text1: \"Something went wrong\",\r\n          type: \"error\",\r\n          position: \"bottom\",\r\n        });\r\n      }\r\n    };\r\n\r\n    // Fetch user details and token from storage\r\n    useEffect(() => {\r\n      const fetchUserDetails = async () => {\r\n        try {\r\n          const accessToken = await getToken(\"accessToken\");\r\n          if (!accessToken) {\r\n            alert(\"Token is missing. Please log in again.\");\r\n            return;\r\n          }\r\n\r\n          // Extract userId from decoded JWT token\r\n          const decodedToken = JWT.decode(accessToken, null);\r\n          const userId = decodedToken?.userId;\r\n\r\n          if (userId) {\r\n            const response = await getCurrentUserDetails(userId, accessToken);\r\n            // console.log(\"Fetched User Details:\", response); // Log the entire response\r\n\r\n            if (response?.data) {\r\n              setUserDetails(response.data); // Set only the 'data' part of the response\r\n            } else {\r\n              setUserDetails(null);\r\n            }\r\n          } else {\r\n            setUserDetails(null);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error fetching user details:\", error);\r\n          setUserDetails(null);\r\n        }\r\n        setLoading(false);\r\n      };\r\n\r\n      fetchUserDetails();\r\n    }, []);\r\n\r\n    const handleProfilePicture = async () => {\r\n      const result = await ImagePicker.launchImageLibraryAsync({\r\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\r\n        allowsEditing: true,\r\n        aspect: [1, 1],\r\n        quality: 1,\r\n      });\r\n\r\n      if (!result.canceled && result.assets) {\r\n        setProfilePic(result.assets[0].uri);\r\n      }\r\n    };\r\n\r\n    if (loading) {\r\n      return (\r\n        <ActivityIndicator\r\n          size=\"large\"\r\n          color=\"#4A90E2\"\r\n          style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}\r\n        />\r\n      );\r\n    }\r\n\r\n    if (!userDetails) {\r\n      return <Text>Failed to load user details.</Text>;\r\n    }\r\n    const handleLogout = async () => {\r\n      try {\r\n        // Delete the access token\r\n        await deleteToken(\"accessToken\");\r\n        await deleteToken(\"serverId\");\r\n        // Uncomment if you're using refresh token as well\r\n        // await deleteToken(\"refreshToken\");\r\n\r\n        // Debugging: Log to check if the token is deleted\r\n        const accessToken = await getToken(\"accessToken\");\r\n        console.log(\"Token after deletion:\", accessToken); // Should return null if token is deleted\r\n\r\n        navigation.reset({\r\n          index: 0, // Set the active screen to 0 (the Login screen)\r\n          routes: [{ name: \"Login\" }],\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Logout error:\", error);\r\n        alert(\"Failed to logout\");\r\n      }\r\n    };\r\n\r\n    return (\r\n      <SafeAreaView style={styles.container}>\r\n        {/* Header */}\r\n        {/* <View style={styles.header}>\r\n          <TouchableOpacity style={styles.menuButton} onPress={toggleMenu}>\r\n            <Ionicons name=\"menu\" size={24} color=\"white\" />\r\n          </TouchableOpacity>\r\n          <Text style={styles.headerText}>Profile</Text>\r\n          <TouchableOpacity\r\n            style={styles.notificationButton}\r\n            onPress={toggleNotification}\r\n          >\r\n            <Ionicons name=\"notifications\" size={24} color=\"white\" />\r\n          </TouchableOpacity>\r\n        </View> */}\r\n\r\n        <ScrollView contentContainerStyle={styles.content}>\r\n          {/* Profile Picture */}\r\n          <TouchableOpacity\r\n            onPress={handleProfilePicture}\r\n            style={styles.profilePicContainer}\r\n          >\r\n            <Image\r\n              source={\r\n                profilePic\r\n                  ? { uri: profilePic }\r\n                  : require(\"../../../../assets/wpslogo.png\")\r\n              }\r\n              style={styles.profilePic}\r\n            />\r\n            <Ionicons\r\n              name=\"camera\"\r\n              size={24}\r\n              color=\"white\"\r\n              style={styles.cameraIcon}\r\n            />\r\n          </TouchableOpacity>\r\n\r\n          {/* User Info */}\r\n          <Text style={styles.name}>\r\n            {userDetails?.firstName} {userDetails?.lastName}{\" \"}\r\n          </Text>\r\n          <Text style={styles.role}>{userDetails?.role} </Text>\r\n\r\n          {/* Info Cards */}\r\n          {/* <View style={styles.infoCard}>\r\n          <Ionicons name=\"id-card-outline\" size={22} color=\"#4A90E2\" />\r\n          <Text style={styles.infoText}>Employee ID: {userDetails?.id} </Text>\r\n        </View> */}\r\n\r\n          <View style={styles.infoCard}>\r\n            <Ionicons name=\"person\" size={22} color=\"#4A90E2\" />\r\n            <Text style={styles.infoText}>\r\n              Full Name: {userDetails?.firstName} {userDetails?.lastName}\r\n            </Text>\r\n          </View>\r\n\r\n          <View style={styles.infoCard}>\r\n            <Ionicons name=\"mail-outline\" size={22} color=\"#4A90E2\" />\r\n            <Text style={styles.infoText}>Email: {userDetails?.email}</Text>\r\n          </View>\r\n\r\n          <View style={styles.infoCard}>\r\n            <Ionicons name=\"call-outline\" size={22} color=\"#4A90E2\" />\r\n            <Text style={styles.infoText}>\r\n              Phone: {userDetails?.phoneNumber}\r\n            </Text>\r\n          </View>\r\n\r\n          {/* Work Location not implemented yet on backend */}\r\n\r\n          {/* <View style={styles.infoCard}>\r\n          <Ionicons name=\"business-outline\" size={22} color=\"#4A90E2\" />\r\n          <Text style={styles.infoText}>Work Location: {userDetails?.workLocation}</Text>\r\n        </View> */}\r\n\r\n          <View style={styles.infoCard}>\r\n            <Ionicons name=\"calendar-outline\" size={22} color=\"#4A90E2\" />\r\n            <Text style={styles.infoText}>\r\n              Employment Status: {userDetails?.employmentStatus}\r\n            </Text>\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={styles.infoCard}\r\n            onPress={() => {\r\n              navigation.navigate(\"EditUserDetailScreens\");\r\n            }}\r\n          >\r\n            <Ionicons name=\"lock-closed\" size={22} color=\"#4A90E2\" />\r\n            <Text style={styles.infoText}>Update Password</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* leave server */}\r\n          <TouchableOpacity\r\n            style={styles.infoCard}\r\n            onPress={() => {\r\n              setIsModalOpen(true);\r\n            }}\r\n          >\r\n            <Ionicons name=\"exit-sharp\" size={22} color=\"#4A90E2\" />\r\n            <Text style={styles.infoText}>Leave Server</Text>\r\n          </TouchableOpacity>\r\n\r\n          {/* Logout Button */}\r\n          <TouchableOpacity style={styles.logoutButton} onPress={handleLogout}>\r\n            <Ionicons name=\"log-out-outline\" size={22} color=\"white\" />\r\n            <Text style={styles.logoutText}>Logout</Text>\r\n          </TouchableOpacity>\r\n        </ScrollView>\r\n\r\n        <Modal\r\n          presentationStyle=\"pageSheet\"\r\n          visible={isModalOpen}\r\n          animationType=\"slide\"\r\n          onRequestClose={handleCloseModal}\r\n        >\r\n          <View style={styles.modalContainer}>\r\n            <TouchableOpacity\r\n              style={styles.backButton}\r\n              onPress={handleCloseModal}\r\n            >\r\n              <Text style={styles.backText}>← Back</Text>\r\n            </TouchableOpacity>\r\n\r\n            <Text style={styles.paragraph}>\r\n              Lorem ipsum dolor sit amet, consectetur adipiscing elit. Integer\r\n              nec odio. Praesent libero. Sed cursus ante dapibus diam. Sed nisi.\r\n              Nulla quis sem at nibh elementum imperdiet.\r\n            </Text>\r\n\r\n            <View style={styles.checkBoxContainer}>\r\n              <TouchableOpacity\r\n                onPress={() => {\r\n                  setIsChecked(!isChecked);\r\n                }}\r\n                style={styles.checkBoxContainer}\r\n              >\r\n                <View style={[styles.checkbox, isChecked && styles.checked]}>\r\n                  {isChecked && <Text style={styles.checkmark}>✓</Text>}\r\n                </View>\r\n                <Text style={styles.label}>I agree to the terms</Text>\r\n              </TouchableOpacity>\r\n\r\n              {/* <CheckBox value={isChecked} onValueChange={setIsChecked} /> */}\r\n              {/* <Text style={styles.checkboxLabel}></Text> */}\r\n            </View>\r\n\r\n            <TouchableOpacity\r\n              onPress={handleLeaveServer}\r\n              disabled={!isChecked}\r\n              style={[\r\n                styles.filledButtton,\r\n                { backgroundColor: isChecked ? \"#007AFF\" : \"#aaa\" },\r\n              ]}\r\n            >\r\n              <Text style={styles.filledButtonText}>Submit</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n        </Modal>\r\n      </SafeAreaView>\r\n    );\r\n  };\r\n\r\n// Styles\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#FDFDFF\",\r\n  },\r\n  header: {\r\n    backgroundColor: \"#4A90E2\",\r\n    paddingVertical: 20,\r\n    paddingHorizontal: 10,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    borderBottomLeftRadius: 40,\r\n    borderBottomRightRadius: 40,\r\n  },\r\n  menuButton: {\r\n    position: \"absolute\",\r\n    left: 10,\r\n  },\r\n  notificationButton: {\r\n    position: \"absolute\",\r\n    right: 10,\r\n  },\r\n  headerText: {\r\n    color: \"white\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  content: {\r\n    alignItems: \"center\",\r\n    padding: 20,\r\n  },\r\n  profilePicContainer: {\r\n    position: \"relative\",\r\n    marginBottom: 10,\r\n  },\r\n  profilePic: {\r\n    width: 120,\r\n    height: 120,\r\n    borderRadius: 60,\r\n    backgroundColor: \"#E0E0E0\",\r\n  },\r\n  cameraIcon: {\r\n    position: \"absolute\",\r\n    bottom: 5,\r\n    right: 5,\r\n    backgroundColor: \"#4A90E2\",\r\n    borderRadius: 50,\r\n    padding: 5,\r\n  },\r\n  section: {\r\n    marginTop: 30,\r\n    width: \"100%\",\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 18,\r\n    fontWeight: \"bold\",\r\n    color: \"#393D3F\",\r\n    marginBottom: 10,\r\n  },\r\n  input: {\r\n    backgroundColor: \"white\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E0E0E0\",\r\n    borderRadius: 10,\r\n    padding: 10,\r\n    fontSize: 16,\r\n    marginBottom: 10,\r\n  },\r\n  name: {\r\n    fontSize: 24,\r\n    fontWeight: \"bold\",\r\n    color: \"#393D3F\",\r\n    marginTop: 10,\r\n    marginBottom: 5,\r\n  },\r\n  role: {\r\n    fontSize: 18,\r\n    color: \"#4A90E2\",\r\n    marginBottom: 10,\r\n  },\r\n  infoCard: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#F7F7F7\",\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    marginBottom: 10,\r\n    width: \"100%\",\r\n  },\r\n  infoText: {\r\n    fontSize: 16,\r\n    color: \"#393D3F\",\r\n    marginLeft: 10,\r\n  },\r\n  changePasswordButton: {\r\n    backgroundColor: \"#2ECC71\",\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    marginTop: 10,\r\n  },\r\n  changePasswordButtonText: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n  },\r\n  logoutButton: {\r\n    flexDirection: \"row\",\r\n    backgroundColor: \"#D9534F\",\r\n    padding: 15,\r\n    borderRadius: 10,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    width: \"100%\",\r\n    marginTop: 20,\r\n  },\r\n  logoutText: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    marginLeft: 10,\r\n  },\r\n\r\n  // Modal\r\n  modalContainer: {\r\n    flex: 1,\r\n    padding: 20,\r\n    justifyContent: \"center\",\r\n  },\r\n  backButton: {\r\n    position: \"absolute\",\r\n    top: 50,\r\n    left: 20,\r\n  },\r\n  backText: {\r\n    fontSize: 18,\r\n    color: \"#007AFF\",\r\n  },\r\n  paragraph: {\r\n    fontSize: 16,\r\n    marginBottom: 20,\r\n  },\r\n  checkBoxContainer: { flexDirection: \"row\" },\r\n  checkbox: {\r\n    width: 20,\r\n    height: 20,\r\n    borderWidth: 1.5,\r\n    borderColor: \"#333\",\r\n    marginRight: 10,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  checked: {\r\n    backgroundColor: \"#007AFF\",\r\n  },\r\n  checkmark: {\r\n    color: \"#fff\",\r\n    fontSize: 14,\r\n  },\r\n  label: {\r\n    fontSize: 16,\r\n  },\r\n\r\n  filledButtton: {\r\n    marginTop: 20,\r\n    padding: 18,\r\n    borderRadius: 5,\r\n  },\r\n  filledButtonText: {\r\n    color: \"white\",\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nexport default ProfileScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ActivityIndicator,\r\n} from \"react-native\";\r\nimport {\r\n  DrawerContentScrollView,\r\n  DrawerItemList,\r\n} from \"@react-navigation/drawer\";\r\nimport { getLoggedInUserServer } from \"../../../api/server/serverApi\";\r\nimport { ApiError } from \"../../../api/utils/apiResponse\";\r\nimport { getToken, Plat, saveToken } from \"../../../api/auth/token\";\r\nimport { ChannelResponse } from \"../../../api/server/server\";\r\nimport { getAllChannelForCurrentServer } from \"../../../api/server/channelApi\";\r\n\r\nconst CustomDrawerContent = (props: any) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [channels, setChannels] = useState<ChannelResponse[]>([]);\r\n  const [activeChannelId, setActiveChannelId] = useState<string | null>(null);\r\n  const [serverName, setServerName] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await handleGetServerDetail(); // Save serverId token\r\n      await handleGetAllChannels(); // Fetch channels with saved serverId\r\n      setLoading(false);\r\n    })();\r\n  }, []);\r\n\r\n  const handleGetServerDetail = async () => {\r\n    const res = await getLoggedInUserServer(Plat.PHONE);\r\n    if (res instanceof ApiError) {\r\n      console.log(\"Server fetch error:\", res.message);\r\n    } else if (\"statusCode\" in res && \"data\" in res) {\r\n      const serverId = res.data.serverId;\r\n\r\n      setServerName(res.data.name);\r\n      console.log(res.data.name);\r\n\r\n      await saveToken(\"serverId\", serverId);\r\n    } else {\r\n      console.log(\"Something went wrong while fetching server.\");\r\n    }\r\n  };\r\n\r\n  const handleGetAllChannels = async () => {\r\n    const serverId = await getToken(\"serverId\");\r\n\r\n    if (!serverId) return;\r\n\r\n    const res = await getAllChannelForCurrentServer(serverId, Plat.PHONE);\r\n    if (res instanceof ApiError) {\r\n      console.log(\"Channel fetch error:\", res.message);\r\n    } else {\r\n      setChannels(res.data);\r\n    }\r\n  };\r\n\r\n  const handleChannelPress = (channel: ChannelResponse) => {\r\n    props.navigation.navigate(\"ChatScreenPhone\", {\r\n      channelId: channel.id,\r\n      channelName: channel.name,\r\n    });\r\n    props.navigation.closeDrawer();\r\n  };\r\n\r\n  return (\r\n    <DrawerContentScrollView {...props}>\r\n      <View style={styles.drawerHeader}>\r\n        <Text style={styles.drawerTitle}>{serverName}</Text>\r\n      </View>\r\n\r\n      <DrawerItemList {...props} />\r\n\r\n      <View style={styles.divider} />\r\n\r\n      <Text style={styles.sectionTitle}>Channels</Text>\r\n\r\n      {loading ? (\r\n        <ActivityIndicator size=\"small\" style={{ marginTop: 10 }} />\r\n      ) : channels.length > 0 ? (\r\n        channels.map((channel) => (\r\n          <TouchableOpacity\r\n            key={channel.id}\r\n            onPress={() => handleChannelPress(channel)}\r\n            style={[\r\n              styles.channelItem,\r\n              activeChannelId === channel.id && styles.activeChannelItem,\r\n            ]}\r\n          >\r\n            <Text\r\n              style={[\r\n                styles.channelText,\r\n                activeChannelId === channel.id && styles.activeChannelText,\r\n              ]}\r\n            >\r\n              # {channel.name}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        ))\r\n      ) : (\r\n        <Text style={styles.noChannelText}>No channels available.</Text>\r\n      )}\r\n    </DrawerContentScrollView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  drawerHeader: {\r\n    padding: 16,\r\n    marginBottom: 8,\r\n  },\r\n  drawerTitle: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  divider: {\r\n    height: 1,\r\n    backgroundColor: \"#eee\",\r\n    marginHorizontal: 10,\r\n    marginTop: 16,\r\n  },\r\n  sectionTitle: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    marginTop: 16,\r\n    marginBottom: 16,\r\n    paddingHorizontal: 16,\r\n  },\r\n  channelItem: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 10,\r\n  },\r\n  channelText: {\r\n    fontSize: 18,\r\n    color: \"#333\",\r\n  },\r\n  activeChannelItem: {\r\n    backgroundColor: \"#e6f0ff\",\r\n  },\r\n  activeChannelText: {\r\n    color: \"#1e90ff\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  noChannelText: {\r\n    fontSize: 14,\r\n    color: \"#888\",\r\n    paddingHorizontal: 20,\r\n    paddingVertical: 10,\r\n  },\r\n});\r\n\r\nexport default CustomDrawerContent;\r\n","import React from \"react\";\r\nimport { View } from \"react-native\";\r\n\r\nconst NotificationScreen = () => {\r\n  return <View></View>;\r\n};\r\n\r\nexport default NotificationScreen;\r\n","import {\r\n  createDrawerNavigator,\r\n  DrawerContentScrollView,\r\n  DrawerItem,\r\n  DrawerItemList,\r\n} from \"@react-navigation/drawer\";\r\nimport EmployeeDashboard from \"./EmployeeDashboard\";\r\nimport SchedulesScreen from \"./SchedulesScreen\";\r\nimport SchedulesScreenWeb from \"../../../web/adminDashboard/screens/SchedulesScreen\";\r\nimport IncomeScreen from \"./IncomeScreen\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport LeaveScreen from \"./LeaveScreen\";\r\nimport ProfileScreen from \"./ProfileScreen\";\r\nimport CustomDrawerContent from \"./ChannelsDrawerView\";\r\nimport { Dimensions } from \"react-native\";\r\nimport NotificationScreen from \"./NotificationScreen\";\r\nimport EmployeeManagementScreen from \"../../../web/adminDashboard/screens/EmployeeManagementScreen\";\r\nconst Drawer = createDrawerNavigator();\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport function MyTabs() {\r\n  return (\r\n    <Tab.Navigator\r\n      screenOptions={{\r\n        tabBarStyle: {\r\n          paddingTop: 10,\r\n          height: 80,\r\n        },\r\n        tabBarLabelStyle: {\r\n          fontSize: 12, // optional: adjust label styling\r\n        },\r\n      }}\r\n    >\r\n      <Tab.Screen\r\n        name=\"Home\"\r\n        component={AppNavigatorDrawer}\r\n        options={{\r\n          headerShown: false,\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons name=\"home\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Notifications\"\r\n        component={NotificationScreen}\r\n        options={{\r\n          headerShown: true,\r\n          headerShadowVisible: false,\r\n          title: \"Notifications\",\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons name=\"notifications\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Tab.Screen\r\n        name=\"Profile\"\r\n        component={ProfileScreen}\r\n        options={{\r\n          headerShown: true,\r\n          headerShadowVisible: false,\r\n          title: \"Profile\",\r\n          tabBarIcon: ({ color, size }) => (\r\n            <Ionicons name=\"person\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n    </Tab.Navigator>\r\n  );\r\n}\r\n\r\nconst AppNavigatorDrawer = () => {\r\n  const screenWidth = Dimensions.get(\"window\").width;\r\n  return (\r\n    <Drawer.Navigator\r\n      initialRouteName=\"Dashboard\"\r\n      drawerContent={(props) => <CustomDrawerContent {...props} />}\r\n      screenOptions={{\r\n        drawerStyle: {\r\n          width: screenWidth * 0.7, // 50% of screen width\r\n        },\r\n        headerShown: true,\r\n        drawerActiveBackgroundColor: \"#e6f0ff\", // background when selected\r\n        drawerActiveTintColor: \"#1e90ff\", // text/icon color when selected\r\n        drawerInactiveTintColor: \"#333\",\r\n        drawerItemStyle: {\r\n          borderRadius: 12, // 🎯 Rounded corners\r\n          marginHorizontal: 10,\r\n          marginVertical: 4,\r\n        },\r\n        drawerLabelStyle: {\r\n          fontSize: 16,\r\n        },\r\n      }}\r\n    >\r\n      <Drawer.Screen\r\n        name=\"Dashboard\"\r\n        component={EmployeeDashboard}\r\n        options={{\r\n          drawerIcon: ({ color, size }) => (\r\n            <Ionicons name=\"home\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Schedules\"\r\n        component={SchedulesScreen}\r\n        options={{\r\n          drawerIcon: ({ color, size }) => (\r\n            <Ionicons name=\"calendar\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Income\"\r\n        component={IncomeScreen}\r\n        options={{\r\n          drawerIcon: ({ color, size }) => (\r\n            <Ionicons name=\"cash-outline\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n\r\n      <Drawer.Screen\r\n        name=\"Leave\"\r\n        component={LeaveScreen}\r\n        options={{\r\n          drawerIcon: ({ color, size }) => (\r\n            <Ionicons name=\"airplane-outline\" size={size} color={color} />\r\n          ),\r\n        }}\r\n      />\r\n    </Drawer.Navigator>\r\n  );\r\n};\r\n\r\n// export const WebNavigatorDrawer = () => {\r\n//   const screenWidth = Dimensions.get(\"window\").width;\r\n//   return (\r\n//     <Drawer.Navigator\r\n//       initialRouteName=\"Dashboard\"\r\n//       drawerContent={(props) => <CustomDrawerContent {...props} />}\r\n//       screenOptions={{\r\n//         drawerStyle: {\r\n//           width: screenWidth * 0.7, // 50% of screen width\r\n//         },\r\n//         headerShown: true,\r\n//         drawerActiveBackgroundColor: \"#e6f0ff\", // background when selected\r\n//         drawerActiveTintColor: \"#1e90ff\", // text/icon color when selected\r\n//         drawerInactiveTintColor: \"#333\",\r\n//         drawerItemStyle: {\r\n//           borderRadius: 12, // 🎯 Rounded corners\r\n//           marginHorizontal: 10,\r\n//           marginVertical: 4,\r\n//         },\r\n//         drawerLabelStyle: {\r\n//           fontSize: 16,\r\n//         },\r\n//       }}\r\n//     >\r\n//       <Drawer.Screen\r\n//         name=\"Dashboard\"\r\n//         component={EmployeeManagementScreen}\r\n//         options={{\r\n//           drawerIcon: ({ color, size }) => (\r\n//             <Ionicons name=\"home\" size={size} color={color} />\r\n//           ),\r\n//         }}\r\n//       />\r\n//       <Drawer.Screen\r\n//         name=\"Schedules\"\r\n//         component={SchedulesScreenWeb}\r\n//         options={{\r\n//           drawerIcon: ({ color, size }) => (\r\n//             <Ionicons name=\"calendar\" size={size} color={color} />\r\n//           ),\r\n//         }}\r\n//       />\r\n//       {/* <Drawer.Screen\r\n//         name=\"Income\"\r\n//         component={IncomeScreen}\r\n//         options={{\r\n//           drawerIcon: ({ color, size }) => (\r\n//             <Ionicons name=\"cash-outline\" size={size} color={color} />\r\n//           ),\r\n//         }}\r\n//       />\r\n\r\n//       <Drawer.Screen\r\n//         name=\"Leave\"\r\n//         component={LeaveScreen}\r\n//         options={{\r\n//           drawerIcon: ({ color, size }) => (\r\n//             <Ionicons name=\"airplane-outline\" size={size} color={color} />\r\n//           ),\r\n//         }}\r\n//       /> */}\r\n//     </Drawer.Navigator>\r\n//   );\r\n// };\r\n\r\nexport default AppNavigatorDrawer;\r\n","import axios, { AxiosError } from \"axios\";\r\nimport { getToken } from \"../auth/token\";\r\nimport { ApiError, ApiResponse } from \"../utils/apiResponse\";\r\n\r\nconst API = axios.create({\r\n  baseURL:\r\n    // \"https://8c1f-2406-2d40-4d55-6c10-bdc3-9abf-864e-c64f.ngrok-free.app/api/v1/\",\r\n    // \"http://localhost:3000/api/v1/chat/\",\r\n    \"https://workhive.space/api/v1/chat/\",\r\n\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nAPI.interceptors.request.use(async (config) => {\r\n  const token = await getToken(\"accessToken\");\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\nexport const fetchChats = async (channelId: string, limit = 20, page = 1) => {\r\n  try {\r\n    const response = await API.get<\r\n      ApiResponse<{\r\n        chats: [Chats];\r\n        page: number;\r\n        limit: number;\r\n        totalPages: number;\r\n        totalChats: number;\r\n      }>\r\n    >(\"fetchChats/\" + channelId, {\r\n      params: { limit, page },\r\n    });\r\n\r\n    // Debugging the API response\r\n    // const { chats, page, limit, totalPages, totalChats } = response.data.data;\r\n    // console.log(\"API Response :\", chats);\r\n    // const chatRes = chats as Chats[];\r\n    // Check if 'chats' exists in the response and is an array\r\n\r\n    return response.data; // Return the array of chats\r\n  } catch (error) {\r\n    if (error instanceof AxiosError) {\r\n      const err = error.response?.data as ApiError<{}>;\r\n      return new ApiError(err.statusCode, {}, err.message);\r\n    }\r\n    return new ApiError(400, {}, \"Something went wrong\");\r\n  }\r\n};\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  StyleSheet,\r\n  ScrollView,\r\n  KeyboardAvoidingView,\r\n  Platform,\r\n  Image,\r\n} from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport * as ImagePicker from \"expo-image-picker\";\r\nimport { fetchChats } from \"../../../api/chat/chatApi\";\r\nimport { ApiError } from \"../../../api/utils/apiResponse\";\r\nimport { getToken } from \"../../../api/auth/token\";\r\nimport JWT from \"expo-jwt\";\r\nimport socket from \"../../../config/Socket\";\r\nimport { FlatList } from \"react-native\";\r\n\r\n// Props for ChatWindow component\r\ntype ChatWindowProps = {\r\n  activeChannelId: string;\r\n  activeChannelName: string;\r\n  hideBottomNav: () => void;\r\n};\r\n\r\nconst ChatWindow = ({\r\n  activeChannelId,\r\n  activeChannelName,\r\n  hideBottomNav,\r\n}: ChatWindowProps) => {\r\n  const [newMessage, setNewMessage] = useState(\"\");\r\n  const [messages, setMessages] = useState<Chats[]>([]);\r\n\r\n  // const [chats, setChats] = useState<Message[]>([]);\r\n\r\n  const handleGetMessage = async () => {\r\n    const res = await fetchChats(activeChannelId);\r\n    console.log(activeChannelId);\r\n\r\n    if (res instanceof ApiError) {\r\n      console.log(res.message, \"...\");\r\n    } else {\r\n      console.log(\"Chats fetched successfully:\", res.data.chats, \"-----------\");\r\n\r\n      setMessages((prevMsg) => [...prevMsg, ...res.data.chats]);\r\n\r\n      if (res.data.chats.length > 1) {\r\n        console.log(\"Additional chat log\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const scrollViewRef = useRef<ScrollView>(null);\r\n\r\n  // Update messages when the active channel changes\r\n  useEffect(() => {\r\n    setMessages([]);\r\n    handleGetMessage();\r\n    hideBottomNav();\r\n  }, [activeChannelId, hideBottomNav]);\r\n\r\n  // Automatically scroll to bottom when new message is added\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      scrollViewRef.current?.scrollToEnd({ animated: true });\r\n    }, 100);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    socket.on(\"receiveMessage\", (message: Chats) => {\r\n      setMessages((prevMessages) => [...prevMessages, message]);\r\n    });\r\n    return () => {\r\n      if (socket) {\r\n        socket.disconnect();\r\n      }\r\n    };\r\n  });\r\n\r\n  // Send text message handler\r\n  const handleSendMessage = async () => {\r\n    if (newMessage.trim() === \"\") return;\r\n\r\n    const now = new Date();\r\n    const hours = now.getHours();\r\n    const minutes = now.getMinutes();\r\n    const ampm = hours >= 12 ? \"PM\" : \"AM\";\r\n    const formattedHours = hours % 12 || 12;\r\n    const formattedMinutes = minutes < 10 ? `0${minutes}` : minutes;\r\n    const timeString = `${formattedHours}:${formattedMinutes} ${ampm}`;\r\n\r\n    const userId = await getUserId();\r\n    const newText: Chats = {\r\n      id: timeString,\r\n\r\n      userId: userId ?? \"\",\r\n      message: newMessage,\r\n      channelId: activeChannelId,\r\n      createdAt: new Date(),\r\n      Employee: {\r\n        firstName: \"You\",\r\n        email: \"\",\r\n        phoneNumber: \"\",\r\n        employmentStatus: \"Active\",\r\n        role: \"employee\",\r\n        profileImage: \"\",\r\n      },\r\n    };\r\n    if (socket) {\r\n      socket.emit(\"sendMessage\", newText);\r\n    }\r\n    setMessages([...messages, newText]);\r\n    setNewMessage(\"\");\r\n  };\r\n\r\n  // Send photo message handler\r\n  const handlePhotoSend = async () => {\r\n    const result = await ImagePicker.launchImageLibraryAsync({\r\n      mediaTypes: [\"images\", \"videos\"],\r\n      allowsEditing: true,\r\n      quality: 0.8,\r\n    });\r\n\r\n    if (!result.canceled && result.assets && result.assets[0].uri) {\r\n      const userId = getUserId();\r\n      const newText: Chats = {\r\n        id: Date.now().toLocaleString(),\r\n        userId: (await userId) ?? \"\",\r\n        message: newMessage,\r\n        channelId: activeChannelId,\r\n        createdAt: new Date(),\r\n        Employee: {\r\n          firstName: \"You\",\r\n          email: \"\",\r\n          phoneNumber: \"\",\r\n          employmentStatus: \"Active\",\r\n          role: \"employee\",\r\n          profileImage: \"\",\r\n        },\r\n      };\r\n      if (socket) {\r\n        socket.emit(\"sendMessage\", newText);\r\n      }\r\n      // const photoMessage = {\r\n      //   id: ,\r\n      //   user: \"You\",\r\n      //   message: \"\",\r\n      //   photo: result.assets[0].uri,\r\n      //   timestamp: new Date().toLocaleTimeString(),\r\n      // };\r\n      setMessages([...messages, newText]);\r\n    }\r\n  };\r\n\r\n  const getUserId = async (): Promise<string | undefined> => {\r\n    const accessToken = (await getToken(\"accessToken\")) ?? \"\";\r\n    const decodedToken = JWT.decode(accessToken, null);\r\n    const userId = decodedToken.userId;\r\n    return userId;\r\n  };\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n      style={styles.chatContainer}\r\n      keyboardVerticalOffset={80}\r\n    >\r\n      <FlatList\r\n        style={styles.messagesContainer}\r\n        data={messages}\r\n        keyExtractor={(item, index) => item.id || index.toString()}\r\n        renderItem={({ item }) => (\r\n          <View\r\n            style={[\r\n              styles.messageWrapper,\r\n              item.Employee?.firstName === \"userId\" && styles.myMessageWrapper,\r\n            ]}\r\n          >\r\n            <View\r\n              style={[\r\n                styles.message,\r\n                item.Employee?.firstName === \"You\" && styles.myMessage,\r\n              ]}\r\n            >\r\n              <View style={styles.messageHeader}>\r\n                <Text style={styles.messageUser}>\r\n                  {item.Employee?.firstName}\r\n                </Text>\r\n                <Text style={styles.messageTime}>\r\n                  {new Date(item.createdAt!).toLocaleTimeString()}\r\n                </Text>\r\n              </View>\r\n              {item.Employee?.profileImage ? (\r\n                <Image\r\n                  source={{ uri: item.Employee.profileImage }}\r\n                  style={{ width: 200, height: 200, borderRadius: 8 }}\r\n                />\r\n              ) : (\r\n                <Text style={styles.messageText}>{item.message}</Text>\r\n              )}\r\n            </View>\r\n          </View>\r\n        )}\r\n        onContentSizeChange={() => {\r\n          // Scroll to the bottom after rendering new content\r\n          setTimeout(() => {\r\n            scrollViewRef.current?.scrollToEnd({ animated: true });\r\n          }, 100);\r\n        }}\r\n        // Additional FlatList props to improve scrolling performance\r\n        initialNumToRender={10}\r\n        maxToRenderPerBatch={10}\r\n        windowSize={5}\r\n      />\r\n\r\n      <View style={styles.inputContainer}>\r\n        <TextInput\r\n          style={styles.input}\r\n          placeholder=\"Type a message\"\r\n          textContentType=\"none\"\r\n          value={newMessage}\r\n          onChangeText={setNewMessage}\r\n          returnKeyType=\"send\"\r\n          onSubmitEditing={handleSendMessage}\r\n        />\r\n        <TouchableOpacity onPress={handleSendMessage} style={styles.sendButton}>\r\n          <Ionicons name=\"send\" size={24} color=\"white\" />\r\n        </TouchableOpacity>\r\n        <TouchableOpacity onPress={handlePhotoSend} style={styles.photoButton}>\r\n          <Ionicons name=\"camera\" size={24} color=\"white\" />\r\n        </TouchableOpacity>\r\n      </View>\r\n    </KeyboardAvoidingView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  chatContainer: {\r\n    flex: 1,\r\n    backgroundColor: \"#FDFDFF\",\r\n    paddingTop: 16,\r\n    paddingHorizontal: 16,\r\n    marginBottom: 20,\r\n  },\r\n\r\n  messagesContainer: {\r\n    flex: 1,\r\n    padding: 12,\r\n  },\r\n  emptyChat: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginTop: 50,\r\n  },\r\n  emptyChatText: {\r\n    color: \"#8E9196\",\r\n    fontSize: 16,\r\n  },\r\n  messageWrapper: {\r\n    marginBottom: 16,\r\n  },\r\n  myMessageWrapper: {\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  message: {\r\n    borderRadius: 12,\r\n    padding: 12,\r\n    backgroundColor: \"#F0F7FF\",\r\n    maxWidth: \"90%\",\r\n  },\r\n  myMessage: {\r\n    backgroundColor: \"#DCF8C6\",\r\n    alignSelf: \"flex-end\",\r\n  },\r\n  messageHeader: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 4,\r\n  },\r\n  messageUser: {\r\n    fontWeight: \"bold\",\r\n    color: \"#333\",\r\n    marginRight: 8,\r\n  },\r\n  messageTime: {\r\n    fontSize: 12,\r\n    color: \"#8E9196\",\r\n  },\r\n  messageText: {\r\n    color: \"#393D3F\",\r\n    fontSize: 16,\r\n    lineHeight: 22,\r\n  },\r\n  inputContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 20,\r\n    paddingHorizontal: 10,\r\n    borderTopWidth: 1,\r\n    borderTopColor: \"#EFEFEF\",\r\n  },\r\n  input: {\r\n    flex: 1,\r\n    padding: 12,\r\n    backgroundColor: \"white\",\r\n    borderWidth: 1,\r\n    borderColor: \"#E0E0E0\",\r\n    borderRadius: 20,\r\n    marginRight: 8,\r\n    maxHeight: 100,\r\n    fontSize: 16,\r\n  },\r\n  sendButton: {\r\n    padding: 12,\r\n    backgroundColor: \"#4A90E2\",\r\n    borderRadius: 25,\r\n    width: 50,\r\n    height: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  photoButton: {\r\n    marginLeft: 10,\r\n    padding: 12,\r\n    backgroundColor: \"#4A90E2\",\r\n    borderRadius: 25,\r\n    width: 50,\r\n    height: 50,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n});\r\n\r\nexport default ChatWindow;\r\n","import ChatWindow from \"../components/ChatWindow\";\r\n\r\nexport const ChatScreen = ({ route, navigation }) => {\r\n  const { channelId, channelName } = route.params;\r\n\r\n  return (\r\n    <ChatWindow\r\n      activeChannelId={channelId}\r\n      activeChannelName={channelName}\r\n      hideBottomNav={() => {\r\n        // Optional: hide bottom tab if needed\r\n      }}\r\n    />\r\n  );\r\n};\r\nexport default ChatScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  Platform,\r\n  Switch,\r\n} from \"react-native\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\nimport { mockShifts } from \"../../../mockData/mockShifts\"; // mock part\r\nimport { RosterAttributes } from \"../../../types/RosterAttributes\"; // mock part\r\n\r\nconst PrimaryColor = \"#4A90E2\";\r\nconst AccentColor = \"#2ECC71\";\r\nconst BackgroundColor = \"#FDFDFF\";\r\nconst TextColor = \"#393D3F\";\r\n\r\nconst ClockInOutScreenPhone: React.FC = () => {\r\n  const [isClockedIn, setIsClockedIn] = useState(false);\r\n  const [currentTime, setCurrentTime] = useState(new Date());\r\n  const [shiftEndTime, setShiftEndTime] = useState<Date | null>(null);\r\n  const [insideGeoFence, setInsideGeoFence] = useState(true);\r\n  const [todaysShifts, setTodaysShifts] = useState<RosterAttributes[]>([]); // mock part\r\n  const [activeShift, setActiveShift] = useState<RosterAttributes | null>(null); // mock part\r\n\r\n  useEffect(() => {\r\n    const timer = setInterval(() => setCurrentTime(new Date()), 1000);\r\n    return () => clearInterval(timer);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const today = new Date().toISOString().split(\"T\")[0];\r\n    const now = new Date();\r\n\r\n    const shiftsToday = mockShifts.filter(\r\n      (shift) => shift.date.toISOString().split(\"T\")[0] === today\r\n    );\r\n\r\n    const current = shiftsToday.find(\r\n      (shift) =>\r\n        new Date(shift.startTime) <= now && new Date(shift.endTime) >= now\r\n    );\r\n\r\n    setTodaysShifts(shiftsToday);\r\n    setActiveShift(current ?? null);\r\n    if (current) setShiftEndTime(new Date(current.endTime));\r\n  }, [currentTime]);\r\n\r\n  const handleClockInOut = () => {\r\n    if (!activeShift) return;\r\n    if (!isClockedIn) {\r\n      setShiftEndTime(new Date(activeShift.endTime));\r\n    } else {\r\n      setShiftEndTime(null);\r\n    }\r\n    setIsClockedIn((prev) => !prev);\r\n  };\r\n\r\n  const getCountdown = () => {\r\n    if (!shiftEndTime) return \"--:--:--\";\r\n    const diff = shiftEndTime.getTime() - currentTime.getTime();\r\n    if (diff <= 0) return \"00:00:00\";\r\n    const hrs = Math.floor(diff / (1000 * 60 * 60));\r\n    const mins = Math.floor((diff / (1000 * 60)) % 60);\r\n    const secs = Math.floor((diff / 1000) % 60);\r\n    return `${hrs.toString().padStart(2, \"0\")}:${mins\r\n      .toString()\r\n      .padStart(2, \"0\")}:${secs.toString().padStart(2, \"0\")}`;\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.time}>\r\n        {currentTime.toLocaleTimeString([], {\r\n          hour: \"2-digit\",\r\n          minute: \"2-digit\",\r\n          second: \"2-digit\",\r\n        })}\r\n      </Text>\r\n\r\n      <Text style={styles.statusText}>\r\n        {isClockedIn ? \"✅ You are clocked in\" : \"⏱️ You are not clocked in\"}\r\n      </Text>\r\n\r\n      <TouchableOpacity\r\n        style={[\r\n          styles.button,\r\n          isClockedIn ? styles.clockOut : styles.clockIn,\r\n          !activeShift && !isClockedIn ? { opacity: 0.5 } : {},\r\n        ]}\r\n        disabled={!activeShift && !isClockedIn}\r\n        onPress={handleClockInOut}\r\n      >\r\n        <Ionicons\r\n          name={isClockedIn ? \"log-out-outline\" : \"log-in-outline\"}\r\n          size={22}\r\n          color=\"#fff\"\r\n          style={{ marginRight: 8 }}\r\n        />\r\n        <Text style={styles.buttonText}>\r\n          {isClockedIn ? \"Clock Out\" : \"Clock In\"}\r\n        </Text>\r\n      </TouchableOpacity>\r\n\r\n      {/* mock part - list all today's shifts */}\r\n      {todaysShifts.length > 0 ? (\r\n  <View style={styles.shiftList}>\r\n    {todaysShifts.map((shift) => (\r\n      <View key={shift.id} style={styles.shiftCard}>\r\n        {/* Time Row */}\r\n        <View style={styles.iconRow}>\r\n          <Ionicons name=\"time-outline\" size={18} color={PrimaryColor} style={styles.icon} />\r\n          <Text style={styles.shiftText}>\r\n            {new Date(shift.startTime).toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n            })}{\" \"}\r\n            -{\" \"}\r\n            {new Date(shift.endTime).toLocaleTimeString([], {\r\n              hour: \"2-digit\",\r\n              minute: \"2-digit\",\r\n            })}\r\n          </Text>\r\n        </View>\r\n\r\n        {/* Office Row */}\r\n        <View style={styles.iconRow}>\r\n          <Ionicons name=\"location-outline\" size={18} color={PrimaryColor} style={styles.icon} />\r\n          <Text style={styles.shiftText}>Office ID: {shift.officeId}</Text>\r\n        </View>\r\n\r\n        {/* Description Row */}\r\n        <View style={styles.iconRow}>\r\n          <Ionicons name=\"document-text-outline\" size={18} color={PrimaryColor} style={styles.icon} />\r\n          <Text style={styles.shiftText}>{shift.description}</Text>\r\n        </View>\r\n      </View>\r\n    ))}\r\n  </View>\r\n) : (\r\n  <Text style={styles.statusText}>You have no shifts today.</Text>\r\n)}\r\n\r\n\r\n      <View style={styles.infoCard}>\r\n        <View style={styles.rowBetween}>\r\n          <Text style={styles.infoText}>📍 Location Status:</Text>\r\n          <Text style={styles.infoText}>\r\n            {insideGeoFence ? \"Inside Zone\" : \"Outside Zone\"}\r\n          </Text>\r\n        </View>\r\n        <View style={styles.rowBetween}>\r\n          <Text style={styles.infoText}>⏳ Shift ends in:</Text>\r\n          <Text style={styles.infoText}>{getCountdown()}</Text>\r\n        </View>\r\n        <View style={styles.rowBetween}>\r\n          <Text style={styles.infoText}>Mock Geofence Toggle:</Text>\r\n          <Switch\r\n            value={insideGeoFence}\r\n            onValueChange={() => setInsideGeoFence((prev) => !prev)}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default ClockInOutScreenPhone;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: BackgroundColor,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    paddingHorizontal: 20,\r\n  },\r\n  time: {\r\n    fontSize: 48,\r\n    fontWeight: \"bold\",\r\n    color: PrimaryColor,\r\n    marginBottom: 12,\r\n  },\r\n  statusText: {\r\n    fontSize: 18,\r\n    color: TextColor,\r\n    marginBottom: 30,\r\n  },\r\n  button: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 14,\r\n    paddingHorizontal: 28,\r\n    borderRadius: 10,\r\n    marginBottom: 20,\r\n  },\r\n  clockIn: {\r\n    backgroundColor: AccentColor,\r\n  },\r\n  clockOut: {\r\n    backgroundColor: \"#D9534F\",\r\n  },\r\n  buttonText: {\r\n    fontSize: 16,\r\n    color: \"#fff\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  infoCard: {\r\n    marginTop: 40,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 12,\r\n    padding: 16,\r\n    width: \"100%\",\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.05,\r\n    shadowRadius: 6,\r\n    elevation: 2,\r\n  },\r\n  infoText: {\r\n    fontSize: 14,\r\n    color: TextColor,\r\n    marginBottom: 12,\r\n  },\r\n  rowBetween: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n  },\r\n  shiftList: {\r\n    width: \"100%\",\r\n  },\r\n  shiftCard: {\r\n    backgroundColor: \"#fff\",\r\n    padding: 14,\r\n    borderRadius: 10,\r\n    marginBottom: 12,\r\n    shadowColor: \"#000\",\r\n    shadowOpacity: 0.05,\r\n    shadowRadius: 6,\r\n    elevation: 2,\r\n  },\r\n  iconRow: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 6,\r\n  },\r\n  \r\n  icon: {\r\n    color:'gray',\r\n    opacity: 0.6,\r\n    marginRight: 8,\r\n  },\r\n  \r\n  shiftText: {\r\n    fontSize: 14,\r\n    color: TextColor,\r\n    flexShrink: 1,\r\n  },\r\n  \r\n});\r\n","import React from \"react\";\r\nimport AdminDashboard from \"./src/web/adminDashboard/screens/AdminDashboard\";\r\nimport ManagerDashboard from \"./src/web/managerDashboard/screens/ManagerDashboard\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { AuthProvider, useAuth } from \"./src/context/AuthContext\";\r\nimport Toast from \"react-native-toast-message\";\r\nimport WelcomeScreen from \"./src/auth/welcome/WelcomeScreen\";\r\nimport LoginScreen from \"./src/auth/Login/LoginScreen\";\r\nimport InviteCodeScreen from \"./src/auth/welcome/InviteCodeScreen\";\r\nimport { SearchedServerScreen } from \"./src/auth/welcome/SearchedServerScreen\";\r\nimport SignupFirstScreen from \"./src/auth/Signup/SignupFirst\";\r\nimport SignupSecondScreen from \"./src/auth/Signup/SignupSecond\";\r\nimport SignupPhoneScreen from \"./src/auth/Signup/SignupPhone\";\r\nimport SignupPasswordScreen from \"./src/auth/Signup/SignupPassword\";\r\nimport { SignupProvider } from \"./src/auth/Signup/SignUpContext\";\r\nimport EmployeeManagementScreen from \"./src/web/adminDashboard/screens/EmployeeManagementScreen\";\r\nimport ClockInOutScreen from \"./src/web/adminDashboard/screens/ClockInOutScreen\";\r\nimport SettingsScreen from \"./src/web/adminDashboard/screens/SettingsScreen\";\r\nimport GrossPaymentScreen from \"./src/web/adminDashboard/screens/GrossPaymentScreen\";\r\nimport LeaveRequestScreen from \"./src/web/adminDashboard/screens/LeaveRequestScreen\";\r\nimport SchedulesScreen from \"./src/web/adminDashboard/screens/SchedulesScreen\";\r\nimport EditUserDetailScreens from \"./src/mobile/employeeDashboard/screens/EditUserDetailScreens\";\r\nimport EditDetailScreens from \"./src/mobile/employeeDashboard/screens/EditDetailsScreen\";\r\nimport PartialRegesterScreen from \"./src/mobile/employeeDashboard/screens/ParitalRegestrationScreen\";\r\nimport ParitalRegestrationPasswordScreen from \"./src/mobile/employeeDashboard/screens/PartialRegisterPasswordScreen\";\r\nimport ChatScreen from \"./src/web/adminDashboard/screens/ChatScreen\";\r\nimport { MyTabs } from \"./src/mobile/employeeDashboard/screens/DrawerNavigator\";\r\nimport ChatScreenPhone from \"./src/mobile/employeeDashboard/screens/ChatScreen\";\r\nimport ClockInOutScreenPhone from \"./src/mobile/employeeDashboard/screens/ClockInOutScreenPhone\";\r\n// Create a stack navigator\r\nconst Stack = createStackNavigator();\r\n\r\nconst App = () => {\r\n  return (\r\n    <AuthProvider>\r\n      <NavigationContainer>\r\n        <SignupProvider>\r\n          <AppNavigator />\r\n        </SignupProvider>\r\n      </NavigationContainer>\r\n      <Toast />\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\n// Centralized AppNavigator for role-based navigation\r\nconst AppNavigator = () => {\r\n  const { userRole, isAuthenticated } = useAuth(); // Access userRole and isAuthenticated from context\r\n\r\n  return (\r\n    <Stack.Navigator>\r\n      <Stack.Screen\r\n        name=\"Welcome\"\r\n        component={WelcomeScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Login\"\r\n        component={LoginScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"InviteCode\"\r\n        component={InviteCodeScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"SchedulesScreen\"\r\n        component={SchedulesScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"ClockInOutScreen\"\r\n        component={ClockInOutScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"EmployeeManagementScreen\"\r\n        component={EmployeeManagementScreen}\r\n        options={{ headerShown: true }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"SettingsScreen\"\r\n        component={SettingsScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"GrossPaymentScreen\"\r\n        component={GrossPaymentScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"LeaveRequestScreen\"\r\n        component={LeaveRequestScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"EditUserDetailScreens\"\r\n        component={EditUserDetailScreens}\r\n        options={{\r\n          headerShown: true,\r\n          title: \"Password\",\r\n          headerShadowVisible: false,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"EditDetailScreens\"\r\n        component={EditDetailScreens}\r\n        options={{\r\n          headerShown: true,\r\n          title: \"Password\",\r\n          headerShadowVisible: false,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"PartialRegesterScreen\"\r\n        component={PartialRegesterScreen}\r\n        options={{\r\n          headerShown: true,\r\n          title: \"Password\",\r\n          headerShadowVisible: false,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"ParitalRegestrationPasswordScreen\"\r\n        component={ParitalRegestrationPasswordScreen}\r\n        options={{\r\n          headerShown: true,\r\n          title: \"Password\",\r\n          headerShadowVisible: false,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"ChatScreenPhone\"\r\n        component={ChatScreenPhone}\r\n        options={({ route }: { route: { params?: { channelName?: string } } }) => ({\r\n          headerBackTitle: \"back\",\r\n          title: route.params?.channelName || \"Chat\",\r\n        })}\r\n      />\r\n      <Stack.Screen\r\n        name=\"ClockInOutScreenPhone\"\r\n        component={ClockInOutScreenPhone}\r\n        options={{\r\n          headerShown: true,\r\n          title: \"Clock In/Out\",\r\n          headerShadowVisible: false,\r\n        }}\r\n      />\r\n      {/* All Signup Screens */}\r\n      <Stack.Screen\r\n        name=\"Signup1\"\r\n        component={SignupFirstScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"Signup2\"\r\n        component={SignupSecondScreen}\r\n        options={{\r\n          headerShown: true,\r\n          headerShadowVisible: false,\r\n          headerBackTitle: \"back\",\r\n          title: \"\",\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"SignupPhone\"\r\n        component={SignupPhoneScreen}\r\n        options={{\r\n          headerShown: true,\r\n          headerShadowVisible: false,\r\n          headerBackTitle: \"back\",\r\n          title: \"\",\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"SignupPassword\"\r\n        component={SignupPasswordScreen}\r\n        options={{\r\n          headerShown: true,\r\n          headerShadowVisible: false,\r\n          headerBackTitle: \"back\",\r\n          title: \"\",\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"EmployeeDashboard\"\r\n        component={MyTabs}\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"AdminDashboard\"\r\n        component={AdminDashboard}\r\n        options={{ headerShown: false }}\r\n      />\r\n      {/* // With drawer remove this comment */}\r\n      {/* <Stack.Screen\r\n        name=\"AdminDashboard\"\r\n        component={WebNavigatorDrawer}\r\n        options={{ headerShown: false }}\r\n      /> */}\r\n      <Stack.Screen\r\n        name=\"SearchedServer\"\r\n        component={SearchedServerScreen}\r\n        options={{\r\n          headerShown: false,\r\n        }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"ManagerDashboard\"\r\n        component={AdminDashboard} //change it\r\n        options={{ headerShown: false }}\r\n      />\r\n      <Stack.Screen\r\n        name=\"ChatScreen\"\r\n        component={ChatScreen}\r\n        options={{ headerShown: false }}\r\n      />\r\n    </Stack.Navigator>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { registerRootComponent } from \"expo\";\r\nimport \"react-native-gesture-handler\";\r\n\r\nimport App from \"./App\";\r\n\r\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\r\n// It also ensures that whether you load the app in Expo Go or in a native build,\r\n// the environment is set up appropriately\r\nregisterRootComponent(App);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [673], () => (__webpack_require__(38567)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ApiResponse","constructor","statusCode","data","message","success","this","ApiError","error","super","Plat","async","saveToken","key","value","plat","PHONE","WEB","localStorage","setItem","SecureStore","setItemAsync","keychainAccessible","WHEN_UNLOCKED","console","getToken","log","getItem","getItemAsync","deleteToken","removeItem","deleteItemAsync","API","axios","create","baseURL","headers","getAllChannelForCurrentServer","serverId","accessToken","get","params","Authorization","AxiosError","err","response","getLoggedInUserServer","fetchAllUsers","styles","StyleSheet","chatSection","borderTopWidth","borderTopColor","paddingTop","paddingHorizontal","marginBottom","chatHeader","flexDirection","justifyContent","alignItems","chatTitle","fontSize","fontWeight","color","textTransform","letterSpacing","addChannelButton","padding","chatItem","paddingVertical","borderRadius","backgroundColor","chatLeft","gap","flexShrink","chatHash","marginRight","chatName","maxWidth","chatLock","marginLeft","newMessageText","overflow","modalOverlay","flex","modalContainer","elevation","modalTitle","input","borderWidth","borderColor","switchRow","switchLabel","modalButtons","button","cancelButton","createButton","buttonText","activeChatItem","roleSelectContainer","roleOption","marginTop","roleOptionActive","roleOptionText","roleHint","roleBadge","width","height","roleLetterText","ChatChannelList","channels","setChannels","useState","modalVisible","setModalVisible","newChannelName","setNewChannelName","isPrivate","setIsPrivate","highestRoleToAccessChannel","setHighestRoleToAccessChannel","navigation","useNavigation","route","useRoute","setServerId","currentChannel","name","channelName","fetchServerId","token","res","Toast","show","type","text1","text2","fetchChannels","warn","useEffect","Array","isArray","parsedChannels","channel","newMessages","getRoleColor","role","_jsxs","View","style","children","_jsx","Text","TouchableOpacity","onPress","Feather","size","ScrollView","index","navigate","channelId","refreshChannels","allChannels","numberOfLines","length","slice","charAt","toUpperCase","Modal","animationType","transparent","visible","onRequestClose","TextInput","placeholder","onChangeText","placeholderTextColor","Switch","onValueChange","trackColor","false","true","thumbColor","trim","createRes","post","reqData","createNewChannel","createdChannel","accessRes","highestRoleToAccessServer","addAccessToChannel","sidebarContainer","position","top","left","zIndex","sidebar","borderBottomEndRadius","borderTopEndRadius","paddingLeft","boxShadow","menuItems","menuItem","activeMenuItem","menuText","Sidebar","isOpen","toggleSidebar","selectedTab","handleTabChange","sidebarWidth","Animated","Value","sidebarPosition","isMobile","setIsMobile","screenWidth","Dimensions","timing","toValue","duration","useNativeDriver","start","handleMenuItemClick","tab","headerContainer","right","appName","toggleButton","Header","isSidebarOpen","PrimaryColor","BackgroundColor","TextColor","ButtonRed","roles","SendAnnouncementCard","selectedRole","setSelectedRole","selectedUsers","setSelectedUsers","users","setUsers","title","setTitle","setMessage","employeesOnly","empDetail","Employee","loadUsers","filteredUsers","filter","u","toLowerCase","card","Ionicons","modalContent","section","label","optionButton","selectedOption","optionText","user","includes","handleUserToggle","prev","firstName","lastName","email","textInput","textArea","multiline","buttonRow","cancelText","userIds","body","sendAnnouncementToSelectedUsers","visibilityTime","sendButton","sendText","maxHeight","marginVertical","textAlignVertical","container","contentWrapper","mainContent","paddingBottom","scrollContainer","flexGrow","welcomeBanner","welcomeTitle","welcomeSubtitle","shadowColor","shadowOffset","shadowOpacity","shadowRadius","alertCard","borderLeftWidth","borderLeftColor","cardTitle","alertText","notificationItem","notificationText","todoItem","todoText","timestamp","AdminDashboard","setSelectedTab","setIsSidebarOpen","mainContentPadding","alerts","text","time","SafeAreaView","contentContainerStyle","alert","FlatList","task","due","renderItem","item","keyExtractor","_","toString","AuthContext","createContext","undefined","useAuth","context","useContext","AuthProvider","userRole","setUserRole","setFirstName","setLastName","isAuthenticated","setIsAuthenticated","savedRole","savedFirstName","savedLastName","loadAuthData","Provider","saveAuthData","contentContainer","rowContainer","logoContainer","logo","buttonsContainer","paddingRight","secondaryButton","secondaryButtonText","mobileContainer","welcomeText","textAlign","buttonText1","WelcomeScreen","Image","source","require","sendOTP","verifyOTP","editUserDetail","defaultFormData","password","phoneNumber","inviteLink","SignupContext","formData","updateFormData","useSignup","SignupProvider","setFormData","prevData","assign","validateEmail","test","toLocaleLowerCase","leftSide","backButton","formContainer","errorText","footer","link","textDecorationLine","SignupSecondScreen","setEmail","KeyboardAvoidingView","behavior","autoFocus","handleNext","welcomeContainer","welcomeText2","passwordContainer","eyeIcon","socialLoginContainer","socialButton","appleButton","googleButton","orLoginText","signupContainer","LoginScreen","Email","Password","setPassword","setError","showPassword","setShowPassword","loading","setLoading","secureTextEntry","isAxiosError","status","loginUser","refreshToken","JWT","replace","reset","routes","ActivityIndicator","alignContent","submitButton","submitButtonText","InviteCodeScreen","inviteCode","setInviteCode","handleBack","goBack","maxLength","keyboardType","Alert","searchServer","swipeable","bottomOffset","SearchedServerScreen","centeredView","imgContainer","image","serverTitle","buttonContainer","filledButton","Button","serverName","subTitle","SignupFirstScreen","inputContainer","countryCode","verifyInput","headingText","verificationText","SignupPhoneScreen","phone","setPhone","verification","setVerification","phoneVerificationModelVisible","setPhoneVerificationModelVisible","handleSendVerification","phoneNumer","startsWith","newNum","Number","parseInt","isNaN","validatePhoneNumber","sendVerification","handleOtpVerification","disabled","focusable","editable","presentationStyle","SignupPasswordScreen","confirmPassword","setConfirmPassword","handleSignup","userData","registerUser","Role","formFields","statuses","roleMapper","Admin","ADMIN","Manager","MANAGER","EMPLOYEE","statusMapper","Active","Inactive","roleBadgeWrapper","adminBadge","managerBadge","employeeBadge","searchInput","actionsRow","addButton","table","minWidth","tableHeader","borderBottomWidth","row","headerCell","cell","actionButtons","actionText","modalActions","cancelBtn","saveBtn","reloadIcon","avatarCell","avatar","initialsCircle","initialsText","nameText","nameCell","EmployeeManagementScreen","setScreenWidth","search","setSearch","employees","setEmployees","editingEmployee","setEditingEmployee","errors","setErrors","sortBy","setSortBy","sortOrder","setSortOrder","employeesArr","setEmployeesArr","handleFetchUsers","employeeList","emp","employmentStatus","profileImage","joinedDate","createdAt","Date","toLocaleDateString","updatedDate","updatedAt","autoHide","subscription","addEventListener","updateWidth","remove","filteredEmployees","sort","a","b","fieldA","fieldB","activeCount","onLeaveCount","handleKickEmployee","delete","userId","kickEmployee","handleInputChange","getRoleBadgeStyle","MaterialIcons","horizontal","field","uri","split","n","join","handleEdit","Picker","selectedValue","Item","validateForm","newErrors","forEach","find","roleNormalized","payload","put","updateEmployeeDetails","partialregisterEmployee","mockClockData","employee","clockIn","clockOut","location","expected","lat","lng","toISOString","mobileTable","todayRow","errorStatus","mapLink","ClockInOutScreen","searchEmployee","setSearchEmployee","searchDate","setSearchDate","dateError","setDateError","today","formatTime","iso","toLocaleTimeString","hour","minute","formatDate","isValidDate","date","filteredData","entry","matchesEmployee","matchesDate","verified","isToday","openMap","url","Linking","openURL","scrollWrapper","overflowY","scrollView","scrollContent","sectionTitleRow","sectionTitle","preferenceRow","logoutBtn","logoutText","saveText","SettingsScreen","darkMode","setDarkMode","notificationsEnabled","setNotificationsEnabled","collapsedSections","setCollapsedSections","showsVerticalScrollIndicator","content","_Fragment","toggleSection","ChevronDown","ChevronUp","DEFAULT_PAY_FREQUENCY","initialPayments","employeeId","employeeName","payPeriodStart","payPeriodEnd","payFrequency","hoursWorked","hourlyRate","bonuses","deductions","grossPay","netPay","chartTitle","alignSelf","inputLabel","GrossPaymentScreen","payments","setPayments","globalPayFrequency","setGlobalPayFrequency","getStatusBadgeStyle","filteredPayments","p","freq","h","handleDelete","fontStyle","BarChart","labels","datasets","yAxisLabel","yAxisSuffix","chartConfig","backgroundGradientFrom","backgroundGradientTo","decimalPlaces","labelColor","parseFloat","handleSave","updatedGrossPay","updatedDeductions","gross","updatedNetPay","newData","existingIndex","findIndex","updated","initialRequests","leaveType","startDate","endDate","reason","balance","totalDays","history","adminComment","pending","approved","rejected","LeaveRequestScreen","requests","setRequests","commentModalVisible","setCommentModalVisible","selectedRequestId","setSelectedRequestId","setAdminComment","selectedAction","setSelectedAction","historyModalVisible","setHistoryModalVisible","selectedHistory","setSelectedHistory","handleUpdateStatus","action","filtered","r","confirmStatusUpdate","historyEntry","employeeColors","Sabin","Pranish","Aashish","weekRow","weekdayHeader","grid","flexWrap","minHeight","outsideMonth","dayNumber","shiftBlock","shiftText","MonthView","currentDate","schedules","onCellPress","onShiftPress","days","getDaysInMonthGrid","getFullYear","getMonth","offset","getDay","setDate","getDate","getStartOfMonth","i","day","push","d","isCurrentMonth","dayStr","shiftItems","shift","shiftDate","toDateString","headerRow","timeColumn","borderRightWidth","columnHeader","columnHeaderText","columnDate","timeText","WeekView","scrollRef","useRef","hours","from","getWeekDays","getHours","current","scrollToOffset","animated","formatHour","getShiftsForCell","cellStart","setHours","cellEnd","shiftStart","shiftEnd","end","idx","weekday","ref","dayIdx","overlapStart","Math","max","getTime","min","topOffset","header","dateTitle","DayView","conflictShifts","setConflictShifts","findConflicts","newShift","conflicts","isConflicting","shift1","shift2","shift1Start","shift1End","shift2Start","shift2End","prevConflicts","month","year","shiftsInThisHour","getShiftsForHour","durationMinutes","offsetTop","getMinutes","isConflict","some","conflictShift","navBar","leftNav","rightNav","navButton","marginHorizontal","viewToggle","activeToggle","headerText","GridCalendarView","viewMode","setViewMode","dateCursor","setDateCursor","editingShift","setEditingShift","handlePrev","newDate","setMonth","handleToday","mode","getDateHeaderText","overlay","modal","pickerWrapper","actions","btn","save","cancel","btnText","WebScheduleModal","onClose","onSave","locations","selectedEmployee","selectedDate","onDelete","setEmployee","setLocation","desc","setDesc","setStart","setEnd","l","validate","initialSchedules","tabBar","tabButton","tabActive","tabText","listItem","bold","autoAssignTitle","cardActions","editButton","deleteButton","SchedulesScreen","activeTab","setActiveTab","setSelectedEmployee","employeeNames","setEmployeeNames","setSelectedDate","setSchedules","employeeFilter","setEmployeeFilter","locationFilter","setLocationFilter","mapped","fetchEmployees","handleDeleteSchedule","filteredSchedules","s","matchEmployee","matchLocation","toLocaleString","newSchedule","officeId","startTime","endTime","description","createShift","margin","changePasswordButton","changePasswordButtonText","EditUserDetailScreens","currentPassword","setCurrentPassword","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","editType","newDetail","EditDetailScreens","PartialRegesterScreen","ParitalRegestrationPasswordScreen","partialregisterComplete","io","transports","forceNew","chatTitleRow","channelActions","renameModal","messageBubble","messageLeft","messageRight","messageText","inputBar","sendButtonText","iconButton","ChatScreen","currentChannelName","setCurrentChannelName","canEdit","renameModalVisible","setRenameModalVisible","messages","setMessages","socket","on","msg","fromSelf","senderId","setTimeout","scrollToEnd","off","window","confirm","deleteChannel","remainingChannels","c","firstChannel","resizeMode","result","ImagePicker","launchImageLibraryAsync","mediaTypes","Images","allowsEditing","quality","base64","canceled","assets","selectedAsset","base64Image","emit","handleSendMessage","changeChannelName","setParams","mockShifts","officeLocation","latitude","longitude","radius","handleRegistrationError","errorMessage","Notifications","handleNotification","shouldShowAlert","shouldPlaySound","shouldSetBadge","borderBottomLeftRadius","borderBottomRightRadius","chatViewContainer","menuButton","notificationButton","tabsContainer","borderBottomColor","activeTabText","noShiftsText","welcomeSubtext","shiftCard","shiftLabel","shiftTime","shiftLocation","noShiftText","clockButton","clockButtonText","quickActionScroll","actionCard","actionLabel","individualShiftCardRow","shiftDescription","iconRow","shiftLineText","icon","opacity","EmployeeDashboard","clockedIn","setClockedIn","contentTab","setContentTab","isMenuOpen","setIsMenuOpen","isNotificationOpen","setIsNotificationOpen","activeChannelId","setActiveChannelId","activeChannelName","setActiveChannelName","isChatView","setIsChatView","expoPushToken","setExpoPushToken","notification","setNotification","notificationListener","responseListener","Device","isDevice","existingStatus","finalStatus","projectId","Constants","expoConfig","extra","eas","easConfig","pushTokenString","registerForPushNotificationsAsync","then","catch","Shifts","setShifts","timeContainer","clockInButton","clockInButtonText","ShiftCard","canClockIn","setCanClockIn","checkClockIn","now","diff","timer","setInterval","clearInterval","selectedDateTitle","shiftsContainer","shifts","getShiftsForLoggedInUser","fetchShifts","markedDates","reduce","dates","marked","dotColor","shiftsForSelectedDate","Calendar","selected","selectedColor","onDayPress","dateString","theme","selectedDayTextColor","todayTextColor","generatePayPeriods","payPeriods","periodStart","getFirstWednesday","firstDay","dayOfWeek","firstWednesday","periodEnd","mockIncome","incomeGroups","period","periodKey","totalHours","totalEarnings","earnings","toFixed","values","groupShiftsByPayPeriod","incomeCard","cardHeader","periodText","summaryText","detailsContainer","shiftDetails","detailText","noIncomeText","IncomeScreen","expandedCard","setExpandedCard","toggleExpand","mockLeaveHistory","datePicker","dateText","applyButton","applyButtonText","leaveCard","leaveDate","noLeaveText","LeaveScreen","setLeaveType","setStartDate","setEndDate","setReason","showStartDatePicker","setShowStartDatePicker","showEndDatePicker","setShowEndDatePicker","leaveRequests","setLeaveRequests","handleApplyLeave","newLeave","leave","profilePicContainer","profilePic","cameraIcon","bottom","infoCard","infoText","logoutButton","backText","paragraph","checkBoxContainer","checkbox","checked","checkmark","filledButtton","filledButtonText","ProfileScreen","setProfilePic","userDetails","setUserDetails","isModalOpen","setIsModalOpen","isChecked","setIsChecked","handleCloseModal","decodedToken","getCurrentUserDetails","fetchUserDetails","aspect","leaveServer","drawerHeader","drawerTitle","divider","channelItem","channelText","activeChannelItem","activeChannelText","noChannelText","props","setServerName","handleGetServerDetail","handleGetAllChannels","DrawerContentScrollView","DrawerItemList","closeDrawer","handleChannelPress","NotificationScreen","Drawer","createDrawerNavigator","Tab","createBottomTabNavigator","MyTabs","Navigator","screenOptions","tabBarStyle","tabBarLabelStyle","Screen","component","AppNavigatorDrawer","options","headerShown","tabBarIcon","headerShadowVisible","initialRouteName","drawerContent","CustomDrawerContent","drawerStyle","drawerActiveBackgroundColor","drawerActiveTintColor","drawerInactiveTintColor","drawerItemStyle","drawerLabelStyle","drawerIcon","interceptors","request","use","config","chatContainer","messagesContainer","emptyChat","emptyChatText","messageWrapper","myMessageWrapper","myMessage","messageHeader","messageUser","messageTime","lineHeight","photoButton","ChatWindow","hideBottomNav","newMessage","setNewMessage","handleGetMessage","limit","page","fetchChats","chats","prevMsg","scrollViewRef","prevMessages","disconnect","minutes","newText","getUserId","keyboardVerticalOffset","onContentSizeChange","initialNumToRender","maxToRenderPerBatch","windowSize","textContentType","returnKeyType","onSubmitEditing","ClockInOutScreenPhone","isClockedIn","setIsClockedIn","currentTime","setCurrentTime","shiftEndTime","setShiftEndTime","insideGeoFence","setInsideGeoFence","todaysShifts","setTodaysShifts","activeShift","setActiveShift","shiftsToday","second","statusText","handleClockInOut","shiftList","rowBetween","getCountdown","hrs","floor","mins","secs","padStart","Stack","createStackNavigator","AppNavigator","ChatScreenPhone","headerBackTitle","App","NavigationContainer","registerRootComponent","__webpack_module_cache__","moduleId","cachedModule","loaded","__webpack_modules__","call","m","amdO","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","getter","__esModule","definition","defineProperty","enumerable","g","globalThis","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}